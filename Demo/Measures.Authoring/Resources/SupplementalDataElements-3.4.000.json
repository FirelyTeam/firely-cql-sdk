{
  "resourceType": "Library",
  "id": "SupplementalDataElements-3.4.000",
  "url": "https://fire.ly/fhir/Library/SupplementalDataElements-3.4.000",
  "version": "3.4.000",
  "name": "SupplementalDataElements",
  "status": "active",
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "2024-06-05T00:37:58.157Z",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "FHIRHelpers-4.3.000"
    }
  ],
  "parameter": [
    {
      "name": "SDE Ethnicity",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "Basic"
    },
    {
      "extension": [
        {
          "url": "https://ncqa.org/fhir/StructureDefinition/ext-parameter.list-element-type",
          "valueCode": "Basic"
        }
      ],
      "name": "SDE Payer",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "List"
    },
    {
      "name": "SDE Race",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "Basic"
    },
    {
      "name": "SDE Sex",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "Coding"
    },
    {
      "name": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.837",
      "use": "in",
      "type": "ValueSet"
    },
    {
      "name": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1",
      "use": "in",
      "type": "ValueSet"
    },
    {
      "name": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591",
      "use": "in",
      "type": "ValueSet"
    },
    {
      "name": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.836",
      "use": "in",
      "type": "ValueSet"
    }
  ],
  "content": [
    {
      "id": "SupplementalDataElements-3.4.000+elm",
      "contentType": "application/elm+json",
      "data": ""
    },
    {
      "id": "SupplementalDataElements-3.4.000+cql",
      "contentType": "text/cql",
      "data": "LyoNCkB1cGRhdGU6IEJUUiAyMDIwLTAzLTMxIC0+DQpJbmNyZW1lbnRlZCB2ZXJzaW9uIHRvIDIuMC4wDQoNCkB1cGRhdGU6IEJUUiAyMDIyLTA1LTI2IC0+DQpVcGRhdGVkIEZISVIgdmVyc2lvbiB0byA0LjAuMQ0KVXBkYXRlZCBGSElSSGVscGVycyB2ZXJzaW9uIHRvIDQuMC4wMDINClVwZGF0ZWQgZm9yIEFVIDIwMjIgQ29udGVudA0KDQpAdXBkYXRlOiBKU1IgMjAyMy0wNy0xOA0KVXBkYXRlZCAiUGF5ZXIiIHZhbHVlIHNldCBuYW1lIHRvICJQYXllciBUeXBlIg0KDQpAdXBkYXRlOiBKU1IgMjAyMy0wNy0yMCAtPg0KVXBkYXRlZCBGSElSSGVscGVycyB2ZXJzaW9uIHRvIDQuMy4wMDANCiovDQpsaWJyYXJ5IFN1cHBsZW1lbnRhbERhdGFFbGVtZW50cyB2ZXJzaW9uICczLjQuMDAwJw0KDQp1c2luZyBRSUNvcmUgdmVyc2lvbiAnNC4xLjEnDQoNCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4zLjAwMCcgY2FsbGVkIEZISVJIZWxwZXJzDQoNCnZhbHVlc2V0ICJFdGhuaWNpdHkiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM3Jw0KdmFsdWVzZXQgIk9OQyBBZG1pbmlzdHJhdGl2ZSBTZXgiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xJw0KdmFsdWVzZXQgIlBheWVyIFR5cGUiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTE0MjIyLjQuMTEuMzU5MScNCnZhbHVlc2V0ICJSYWNlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExNDIyMi40LjExLjgzNicNCg0KY29udGV4dCBQYXRpZW50DQoNCmRlZmluZSAiU0RFIEV0aG5pY2l0eSI6DQogIFBhdGllbnQuZXRobmljaXR5IEUNCiAgICByZXR1cm4gVHVwbGUgew0KICAgICAgY29kZXM6IHsgRS5vbWJDYXRlZ29yeSB9IHVuaW9uIEUuZGV0YWlsZWQsDQogICAgICBkaXNwbGF5OiBFLnRleHQNCiAgICB9DQoNCmRlZmluZSAiU0RFIFBheWVyIjoNCiAgW0NvdmVyYWdlOiB0eXBlIGluICJQYXllciBUeXBlIl0gUGF5ZXINCiAgICByZXR1cm4gew0KICAgICAgY29kZTogUGF5ZXIudHlwZSwNCiAgICAgIHBlcmlvZDogUGF5ZXIucGVyaW9kDQogICAgfQ0KDQpkZWZpbmUgIlNERSBSYWNlIjoNCiAgUGF0aWVudC5yYWNlIFINCiAgICByZXR1cm4gVHVwbGUgew0KICAgICAgY29kZXM6IFIub21iQ2F0ZWdvcnkgdW5pb24gUi5kZXRhaWxlZCwNCiAgICAgIGRpc3BsYXk6IFIudGV4dA0KICAgIH0NCg0KZGVmaW5lICJTREUgU2V4IjoNCiAgY2FzZQ0KICAgICAgd2hlbiBQYXRpZW50LmdlbmRlciA9ICdtYWxlJyB0aGVuIENvZGUgeyBjb2RlOiAnTScsIHN5c3RlbTogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvdjMvQWRtaW5pc3RyYXRpdmVHZW5kZXInLCBkaXNwbGF5OiAnTWFsZScgfQ0KICAgICAgd2hlbiBQYXRpZW50LmdlbmRlciA9ICdmZW1hbGUnIHRoZW4gQ29kZSB7IGNvZGU6ICdGJywgc3lzdGVtOiAnaHR0cDovL2hsNy5vcmcvZmhpci92My9BZG1pbmlzdHJhdGl2ZUdlbmRlcicsIGRpc3BsYXk6ICdGZW1hbGUnIH0NCiAgICAgIGVsc2UgbnVsbA0KICAgIGVuZA=="
    },
    {
      "id": "SupplementalDataElements-3.4.000+dll",
      "contentType": "application/octet-stream",
      "data": "
    },
    {
      "id": "SupplementalDataElements-3.4.000+csharp",
      "contentType": "text/plain",
      "data": ""
    }
  ]
}