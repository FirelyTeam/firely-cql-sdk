//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Git/ncqa-cql/Cql/Cql.Grammar/cql.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Hl7.Cql.CqlToElm.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IcqlListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class cqlBaseListener : IcqlListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition([NotNull] cqlParser.DefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition([NotNull] cqlParser.DefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.library"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLibrary([NotNull] cqlParser.LibraryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.library"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLibrary([NotNull] cqlParser.LibraryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.libraryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLibraryDefinition([NotNull] cqlParser.LibraryDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.libraryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLibraryDefinition([NotNull] cqlParser.LibraryDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.usingDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingDefinition([NotNull] cqlParser.UsingDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.usingDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingDefinition([NotNull] cqlParser.UsingDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.includeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludeDefinition([NotNull] cqlParser.IncludeDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.includeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludeDefinition([NotNull] cqlParser.IncludeDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.localIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalIdentifier([NotNull] cqlParser.LocalIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.localIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalIdentifier([NotNull] cqlParser.LocalIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.accessModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessModifier([NotNull] cqlParser.AccessModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.accessModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessModifier([NotNull] cqlParser.AccessModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.parameterDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterDefinition([NotNull] cqlParser.ParameterDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.parameterDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterDefinition([NotNull] cqlParser.ParameterDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodesystemDefinition([NotNull] cqlParser.CodesystemDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodesystemDefinition([NotNull] cqlParser.CodesystemDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.valuesetDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValuesetDefinition([NotNull] cqlParser.ValuesetDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.valuesetDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValuesetDefinition([NotNull] cqlParser.ValuesetDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystems"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodesystems([NotNull] cqlParser.CodesystemsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystems"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodesystems([NotNull] cqlParser.CodesystemsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodesystemIdentifier([NotNull] cqlParser.CodesystemIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodesystemIdentifier([NotNull] cqlParser.CodesystemIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.libraryIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLibraryIdentifier([NotNull] cqlParser.LibraryIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.libraryIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLibraryIdentifier([NotNull] cqlParser.LibraryIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeDefinition([NotNull] cqlParser.CodeDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeDefinition([NotNull] cqlParser.CodeDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.conceptDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConceptDefinition([NotNull] cqlParser.ConceptDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.conceptDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConceptDefinition([NotNull] cqlParser.ConceptDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeIdentifier([NotNull] cqlParser.CodeIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeIdentifier([NotNull] cqlParser.CodeIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodesystemId([NotNull] cqlParser.CodesystemIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodesystemId([NotNull] cqlParser.CodesystemIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.valuesetId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValuesetId([NotNull] cqlParser.ValuesetIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.valuesetId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValuesetId([NotNull] cqlParser.ValuesetIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.versionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVersionSpecifier([NotNull] cqlParser.VersionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.versionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVersionSpecifier([NotNull] cqlParser.VersionSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeId([NotNull] cqlParser.CodeIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeId([NotNull] cqlParser.CodeIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpecifier([NotNull] cqlParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpecifier([NotNull] cqlParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.namedTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedTypeSpecifier([NotNull] cqlParser.NamedTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.namedTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedTypeSpecifier([NotNull] cqlParser.NamedTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.modelIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModelIdentifier([NotNull] cqlParser.ModelIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.modelIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModelIdentifier([NotNull] cqlParser.ModelIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.listTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListTypeSpecifier([NotNull] cqlParser.ListTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.listTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListTypeSpecifier([NotNull] cqlParser.ListTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.intervalTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntervalTypeSpecifier([NotNull] cqlParser.IntervalTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.intervalTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntervalTypeSpecifier([NotNull] cqlParser.IntervalTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleTypeSpecifier([NotNull] cqlParser.TupleTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleTypeSpecifier([NotNull] cqlParser.TupleTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleElementDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleElementDefinition([NotNull] cqlParser.TupleElementDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleElementDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleElementDefinition([NotNull] cqlParser.TupleElementDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.choiceTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChoiceTypeSpecifier([NotNull] cqlParser.ChoiceTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.choiceTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChoiceTypeSpecifier([NotNull] cqlParser.ChoiceTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] cqlParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] cqlParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.expressionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionDefinition([NotNull] cqlParser.ExpressionDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.expressionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionDefinition([NotNull] cqlParser.ExpressionDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.contextDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContextDefinition([NotNull] cqlParser.ContextDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.contextDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContextDefinition([NotNull] cqlParser.ContextDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.fluentModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFluentModifier([NotNull] cqlParser.FluentModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.fluentModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFluentModifier([NotNull] cqlParser.FluentModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDefinition([NotNull] cqlParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDefinition([NotNull] cqlParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.operandDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperandDefinition([NotNull] cqlParser.OperandDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.operandDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperandDefinition([NotNull] cqlParser.OperandDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] cqlParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] cqlParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.querySource"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuerySource([NotNull] cqlParser.QuerySourceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.querySource"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuerySource([NotNull] cqlParser.QuerySourceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.aliasedQuerySource"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasedQuerySource([NotNull] cqlParser.AliasedQuerySourceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.aliasedQuerySource"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasedQuerySource([NotNull] cqlParser.AliasedQuerySourceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlias([NotNull] cqlParser.AliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlias([NotNull] cqlParser.AliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.queryInclusionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryInclusionClause([NotNull] cqlParser.QueryInclusionClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.queryInclusionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryInclusionClause([NotNull] cqlParser.QueryInclusionClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.withClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithClause([NotNull] cqlParser.WithClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.withClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithClause([NotNull] cqlParser.WithClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.withoutClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithoutClause([NotNull] cqlParser.WithoutClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.withoutClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithoutClause([NotNull] cqlParser.WithoutClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.retrieve"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetrieve([NotNull] cqlParser.RetrieveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.retrieve"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetrieve([NotNull] cqlParser.RetrieveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.contextIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContextIdentifier([NotNull] cqlParser.ContextIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.contextIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContextIdentifier([NotNull] cqlParser.ContextIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodePath([NotNull] cqlParser.CodePathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodePath([NotNull] cqlParser.CodePathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeComparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeComparator([NotNull] cqlParser.CodeComparatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeComparator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeComparator([NotNull] cqlParser.CodeComparatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.terminology"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminology([NotNull] cqlParser.TerminologyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.terminology"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminology([NotNull] cqlParser.TerminologyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifier([NotNull] cqlParser.QualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifier([NotNull] cqlParser.QualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery([NotNull] cqlParser.QueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery([NotNull] cqlParser.QueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sourceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceClause([NotNull] cqlParser.SourceClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sourceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceClause([NotNull] cqlParser.SourceClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.letClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetClause([NotNull] cqlParser.LetClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.letClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetClause([NotNull] cqlParser.LetClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.letClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetClauseItem([NotNull] cqlParser.LetClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.letClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetClauseItem([NotNull] cqlParser.LetClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereClause([NotNull] cqlParser.WhereClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereClause([NotNull] cqlParser.WhereClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.returnClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnClause([NotNull] cqlParser.ReturnClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.returnClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnClause([NotNull] cqlParser.ReturnClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.aggregateClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateClause([NotNull] cqlParser.AggregateClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.aggregateClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateClause([NotNull] cqlParser.AggregateClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.startingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartingClause([NotNull] cqlParser.StartingClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.startingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartingClause([NotNull] cqlParser.StartingClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSortClause([NotNull] cqlParser.SortClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSortClause([NotNull] cqlParser.SortClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortDirection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSortDirection([NotNull] cqlParser.SortDirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortDirection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSortDirection([NotNull] cqlParser.SortDirectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortByItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSortByItem([NotNull] cqlParser.SortByItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortByItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSortByItem([NotNull] cqlParser.SortByItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdentifier([NotNull] cqlParser.QualifiedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifiedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdentifier([NotNull] cqlParser.QualifiedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifiedIdentifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdentifierExpression([NotNull] cqlParser.QualifiedIdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifiedIdentifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdentifierExpression([NotNull] cqlParser.QualifiedIdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifierExpression([NotNull] cqlParser.QualifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifierExpression([NotNull] cqlParser.QualifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simplePathIndexer</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimplePathIndexer([NotNull] cqlParser.SimplePathIndexerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simplePathIndexer</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimplePathIndexer([NotNull] cqlParser.SimplePathIndexerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simplePathQualifiedIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimplePathQualifiedIdentifier([NotNull] cqlParser.SimplePathQualifiedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simplePathQualifiedIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimplePathQualifiedIdentifier([NotNull] cqlParser.SimplePathQualifiedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simplePathReferentialIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimplePathReferentialIdentifier([NotNull] cqlParser.SimplePathReferentialIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simplePathReferentialIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimplePathReferentialIdentifier([NotNull] cqlParser.SimplePathReferentialIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleStringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleStringLiteral([NotNull] cqlParser.SimpleStringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleStringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleStringLiteral([NotNull] cqlParser.SimpleStringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNumberLiteral([NotNull] cqlParser.SimpleNumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNumberLiteral([NotNull] cqlParser.SimpleNumberLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>durationBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDurationBetweenExpression([NotNull] cqlParser.DurationBetweenExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>durationBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDurationBetweenExpression([NotNull] cqlParser.DurationBetweenExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inFixSetExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInFixSetExpression([NotNull] cqlParser.InFixSetExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inFixSetExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInFixSetExpression([NotNull] cqlParser.InFixSetExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retrieveExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetrieveExpression([NotNull] cqlParser.RetrieveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retrieveExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetrieveExpression([NotNull] cqlParser.RetrieveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timingExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimingExpression([NotNull] cqlParser.TimingExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timingExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimingExpression([NotNull] cqlParser.TimingExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>queryExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryExpression([NotNull] cqlParser.QueryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>queryExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryExpression([NotNull] cqlParser.QueryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] cqlParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] cqlParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpression([NotNull] cqlParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpression([NotNull] cqlParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpression([NotNull] cqlParser.OrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpression([NotNull] cqlParser.OrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] cqlParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] cqlParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] cqlParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] cqlParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetweenExpression([NotNull] cqlParser.BetweenExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetweenExpression([NotNull] cqlParser.BetweenExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>membershipExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMembershipExpression([NotNull] cqlParser.MembershipExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>membershipExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMembershipExpression([NotNull] cqlParser.MembershipExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>differenceBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDifferenceBetweenExpression([NotNull] cqlParser.DifferenceBetweenExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>differenceBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDifferenceBetweenExpression([NotNull] cqlParser.DifferenceBetweenExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inequalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInequalityExpression([NotNull] cqlParser.InequalityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inequalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInequalityExpression([NotNull] cqlParser.InequalityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] cqlParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] cqlParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>existenceExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExistenceExpression([NotNull] cqlParser.ExistenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>existenceExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExistenceExpression([NotNull] cqlParser.ExistenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>impliesExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImpliesExpression([NotNull] cqlParser.ImpliesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>impliesExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImpliesExpression([NotNull] cqlParser.ImpliesExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermExpression([NotNull] cqlParser.TermExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermExpression([NotNull] cqlParser.TermExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeExpression([NotNull] cqlParser.TypeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeExpression([NotNull] cqlParser.TypeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimePrecision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimePrecision([NotNull] cqlParser.DateTimePrecisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimePrecision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimePrecision([NotNull] cqlParser.DateTimePrecisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimeComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeComponent([NotNull] cqlParser.DateTimeComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimeComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeComponent([NotNull] cqlParser.DateTimeComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.pluralDateTimePrecision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPluralDateTimePrecision([NotNull] cqlParser.PluralDateTimePrecisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.pluralDateTimePrecision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPluralDateTimePrecision([NotNull] cqlParser.PluralDateTimePrecisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>additionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionExpressionTerm([NotNull] cqlParser.AdditionExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>additionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionExpressionTerm([NotNull] cqlParser.AdditionExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>indexedExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexedExpressionTerm([NotNull] cqlParser.IndexedExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>indexedExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexedExpressionTerm([NotNull] cqlParser.IndexedExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>widthExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWidthExpressionTerm([NotNull] cqlParser.WidthExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>widthExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWidthExpressionTerm([NotNull] cqlParser.WidthExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setAggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetAggregateExpressionTerm([NotNull] cqlParser.SetAggregateExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setAggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetAggregateExpressionTerm([NotNull] cqlParser.SetAggregateExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeUnitExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeUnitExpressionTerm([NotNull] cqlParser.TimeUnitExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeUnitExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeUnitExpressionTerm([NotNull] cqlParser.TimeUnitExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifThenElseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfThenElseExpressionTerm([NotNull] cqlParser.IfThenElseExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifThenElseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfThenElseExpressionTerm([NotNull] cqlParser.IfThenElseExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeBoundaryExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeBoundaryExpressionTerm([NotNull] cqlParser.TimeBoundaryExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeBoundaryExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeBoundaryExpressionTerm([NotNull] cqlParser.TimeBoundaryExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>elementExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementExtractorExpressionTerm([NotNull] cqlParser.ElementExtractorExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>elementExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementExtractorExpressionTerm([NotNull] cqlParser.ElementExtractorExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conversionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversionExpressionTerm([NotNull] cqlParser.ConversionExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conversionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversionExpressionTerm([NotNull] cqlParser.ConversionExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExtentExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeExtentExpressionTerm([NotNull] cqlParser.TypeExtentExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExtentExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeExtentExpressionTerm([NotNull] cqlParser.TypeExtentExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>predecessorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredecessorExpressionTerm([NotNull] cqlParser.PredecessorExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>predecessorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredecessorExpressionTerm([NotNull] cqlParser.PredecessorExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pointExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointExtractorExpressionTerm([NotNull] cqlParser.PointExtractorExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pointExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointExtractorExpressionTerm([NotNull] cqlParser.PointExtractorExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicationExpressionTerm([NotNull] cqlParser.MultiplicationExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicationExpressionTerm([NotNull] cqlParser.MultiplicationExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateExpressionTerm([NotNull] cqlParser.AggregateExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateExpressionTerm([NotNull] cqlParser.AggregateExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>durationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDurationExpressionTerm([NotNull] cqlParser.DurationExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>durationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDurationExpressionTerm([NotNull] cqlParser.DurationExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>differenceExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDifferenceExpressionTerm([NotNull] cqlParser.DifferenceExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>differenceExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDifferenceExpressionTerm([NotNull] cqlParser.DifferenceExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseExpressionTerm([NotNull] cqlParser.CaseExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseExpressionTerm([NotNull] cqlParser.CaseExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>powerExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowerExpressionTerm([NotNull] cqlParser.PowerExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>powerExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowerExpressionTerm([NotNull] cqlParser.PowerExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>successorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuccessorExpressionTerm([NotNull] cqlParser.SuccessorExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>successorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuccessorExpressionTerm([NotNull] cqlParser.SuccessorExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>polarityExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPolarityExpressionTerm([NotNull] cqlParser.PolarityExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>polarityExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPolarityExpressionTerm([NotNull] cqlParser.PolarityExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>termExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermExpressionTerm([NotNull] cqlParser.TermExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>termExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermExpressionTerm([NotNull] cqlParser.TermExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>invocationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvocationExpressionTerm([NotNull] cqlParser.InvocationExpressionTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>invocationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvocationExpressionTerm([NotNull] cqlParser.InvocationExpressionTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.caseExpressionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseExpressionItem([NotNull] cqlParser.CaseExpressionItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.caseExpressionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseExpressionItem([NotNull] cqlParser.CaseExpressionItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimePrecisionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimePrecisionSpecifier([NotNull] cqlParser.DateTimePrecisionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimePrecisionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimePrecisionSpecifier([NotNull] cqlParser.DateTimePrecisionSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.relativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelativeQualifier([NotNull] cqlParser.RelativeQualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.relativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelativeQualifier([NotNull] cqlParser.RelativeQualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.offsetRelativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOffsetRelativeQualifier([NotNull] cqlParser.OffsetRelativeQualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.offsetRelativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOffsetRelativeQualifier([NotNull] cqlParser.OffsetRelativeQualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.exclusiveRelativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusiveRelativeQualifier([NotNull] cqlParser.ExclusiveRelativeQualifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.exclusiveRelativeQualifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusiveRelativeQualifier([NotNull] cqlParser.ExclusiveRelativeQualifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.quantityOffset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantityOffset([NotNull] cqlParser.QuantityOffsetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.quantityOffset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantityOffset([NotNull] cqlParser.QuantityOffsetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.temporalRelationship"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemporalRelationship([NotNull] cqlParser.TemporalRelationshipContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.temporalRelationship"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemporalRelationship([NotNull] cqlParser.TemporalRelationshipContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>concurrentWithIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcurrentWithIntervalOperatorPhrase([NotNull] cqlParser.ConcurrentWithIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>concurrentWithIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcurrentWithIntervalOperatorPhrase([NotNull] cqlParser.ConcurrentWithIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>includesIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludesIntervalOperatorPhrase([NotNull] cqlParser.IncludesIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>includesIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludesIntervalOperatorPhrase([NotNull] cqlParser.IncludesIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>includedInIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludedInIntervalOperatorPhrase([NotNull] cqlParser.IncludedInIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>includedInIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludedInIntervalOperatorPhrase([NotNull] cqlParser.IncludedInIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>beforeOrAfterIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBeforeOrAfterIntervalOperatorPhrase([NotNull] cqlParser.BeforeOrAfterIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>beforeOrAfterIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBeforeOrAfterIntervalOperatorPhrase([NotNull] cqlParser.BeforeOrAfterIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>withinIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithinIntervalOperatorPhrase([NotNull] cqlParser.WithinIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>withinIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithinIntervalOperatorPhrase([NotNull] cqlParser.WithinIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>meetsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMeetsIntervalOperatorPhrase([NotNull] cqlParser.MeetsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>meetsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMeetsIntervalOperatorPhrase([NotNull] cqlParser.MeetsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>overlapsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOverlapsIntervalOperatorPhrase([NotNull] cqlParser.OverlapsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>overlapsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOverlapsIntervalOperatorPhrase([NotNull] cqlParser.OverlapsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>startsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartsIntervalOperatorPhrase([NotNull] cqlParser.StartsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>startsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartsIntervalOperatorPhrase([NotNull] cqlParser.StartsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>endsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndsIntervalOperatorPhrase([NotNull] cqlParser.EndsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>endsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndsIntervalOperatorPhrase([NotNull] cqlParser.EndsIntervalOperatorPhraseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>invocationTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvocationTerm([NotNull] cqlParser.InvocationTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>invocationTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvocationTerm([NotNull] cqlParser.InvocationTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>literalTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralTerm([NotNull] cqlParser.LiteralTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralTerm([NotNull] cqlParser.LiteralTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>externalConstantTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternalConstantTerm([NotNull] cqlParser.ExternalConstantTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>externalConstantTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternalConstantTerm([NotNull] cqlParser.ExternalConstantTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intervalSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntervalSelectorTerm([NotNull] cqlParser.IntervalSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intervalSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntervalSelectorTerm([NotNull] cqlParser.IntervalSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>tupleSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleSelectorTerm([NotNull] cqlParser.TupleSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleSelectorTerm([NotNull] cqlParser.TupleSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>instanceSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceSelectorTerm([NotNull] cqlParser.InstanceSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>instanceSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceSelectorTerm([NotNull] cqlParser.InstanceSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>listSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListSelectorTerm([NotNull] cqlParser.ListSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListSelectorTerm([NotNull] cqlParser.ListSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>codeSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeSelectorTerm([NotNull] cqlParser.CodeSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>codeSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeSelectorTerm([NotNull] cqlParser.CodeSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conceptSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConceptSelectorTerm([NotNull] cqlParser.ConceptSelectorTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conceptSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConceptSelectorTerm([NotNull] cqlParser.ConceptSelectorTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedTerm([NotNull] cqlParser.ParenthesizedTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedTerm([NotNull] cqlParser.ParenthesizedTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>qualifiedMemberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedMemberInvocation([NotNull] cqlParser.QualifiedMemberInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>qualifiedMemberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedMemberInvocation([NotNull] cqlParser.QualifiedMemberInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>qualifiedFunctionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedFunctionInvocation([NotNull] cqlParser.QualifiedFunctionInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>qualifiedFunctionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedFunctionInvocation([NotNull] cqlParser.QualifiedFunctionInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifiedFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedFunction([NotNull] cqlParser.QualifiedFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifiedFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedFunction([NotNull] cqlParser.QualifiedFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>memberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberInvocation([NotNull] cqlParser.MemberInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>memberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberInvocation([NotNull] cqlParser.MemberInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionInvocation([NotNull] cqlParser.FunctionInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionInvocation([NotNull] cqlParser.FunctionInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>thisInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisInvocation([NotNull] cqlParser.ThisInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>thisInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisInvocation([NotNull] cqlParser.ThisInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>indexInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexInvocation([NotNull] cqlParser.IndexInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>indexInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexInvocation([NotNull] cqlParser.IndexInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>totalInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTotalInvocation([NotNull] cqlParser.TotalInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>totalInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTotalInvocation([NotNull] cqlParser.TotalInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] cqlParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] cqlParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.ratio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRatio([NotNull] cqlParser.RatioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.ratio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRatio([NotNull] cqlParser.RatioContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteral([NotNull] cqlParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteral([NotNull] cqlParser.BooleanLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullLiteral([NotNull] cqlParser.NullLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullLiteral([NotNull] cqlParser.NullLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] cqlParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] cqlParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] cqlParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] cqlParser.NumberLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>longNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLongNumberLiteral([NotNull] cqlParser.LongNumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>longNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLongNumberLiteral([NotNull] cqlParser.LongNumberLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dateTimeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateTimeLiteral([NotNull] cqlParser.DateTimeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dateTimeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateTimeLiteral([NotNull] cqlParser.DateTimeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dateLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateLiteral([NotNull] cqlParser.DateLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dateLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateLiteral([NotNull] cqlParser.DateLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeLiteral([NotNull] cqlParser.TimeLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeLiteral([NotNull] cqlParser.TimeLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>quantityLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantityLiteral([NotNull] cqlParser.QuantityLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>quantityLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantityLiteral([NotNull] cqlParser.QuantityLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ratioLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRatioLiteral([NotNull] cqlParser.RatioLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ratioLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRatioLiteral([NotNull] cqlParser.RatioLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.intervalSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntervalSelector([NotNull] cqlParser.IntervalSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.intervalSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntervalSelector([NotNull] cqlParser.IntervalSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleSelector([NotNull] cqlParser.TupleSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleSelector([NotNull] cqlParser.TupleSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleElementSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleElementSelector([NotNull] cqlParser.TupleElementSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleElementSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleElementSelector([NotNull] cqlParser.TupleElementSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.instanceSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceSelector([NotNull] cqlParser.InstanceSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.instanceSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceSelector([NotNull] cqlParser.InstanceSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.instanceElementSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceElementSelector([NotNull] cqlParser.InstanceElementSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.instanceElementSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceElementSelector([NotNull] cqlParser.InstanceElementSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.listSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListSelector([NotNull] cqlParser.ListSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.listSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListSelector([NotNull] cqlParser.ListSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.displayClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisplayClause([NotNull] cqlParser.DisplayClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.displayClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisplayClause([NotNull] cqlParser.DisplayClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeSelector([NotNull] cqlParser.CodeSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeSelector([NotNull] cqlParser.CodeSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.conceptSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConceptSelector([NotNull] cqlParser.ConceptSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.conceptSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConceptSelector([NotNull] cqlParser.ConceptSelectorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] cqlParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] cqlParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.reservedWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReservedWord([NotNull] cqlParser.ReservedWordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.reservedWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReservedWord([NotNull] cqlParser.ReservedWordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.keywordIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeywordIdentifier([NotNull] cqlParser.KeywordIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.keywordIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeywordIdentifier([NotNull] cqlParser.KeywordIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.obsoleteIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObsoleteIdentifier([NotNull] cqlParser.ObsoleteIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.obsoleteIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObsoleteIdentifier([NotNull] cqlParser.ObsoleteIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.functionIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionIdentifier([NotNull] cqlParser.FunctionIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.functionIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionIdentifier([NotNull] cqlParser.FunctionIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.typeNameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeNameIdentifier([NotNull] cqlParser.TypeNameIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.typeNameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeNameIdentifier([NotNull] cqlParser.TypeNameIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.referentialIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferentialIdentifier([NotNull] cqlParser.ReferentialIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.referentialIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferentialIdentifier([NotNull] cqlParser.ReferentialIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.referentialOrTypeNameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferentialOrTypeNameIdentifier([NotNull] cqlParser.ReferentialOrTypeNameIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.referentialOrTypeNameIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferentialOrTypeNameIdentifier([NotNull] cqlParser.ReferentialOrTypeNameIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.identifierOrFunctionIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierOrFunctionIdentifier([NotNull] cqlParser.IdentifierOrFunctionIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.identifierOrFunctionIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierOrFunctionIdentifier([NotNull] cqlParser.IdentifierOrFunctionIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] cqlParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] cqlParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.externalConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternalConstant([NotNull] cqlParser.ExternalConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.externalConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternalConstant([NotNull] cqlParser.ExternalConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] cqlParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] cqlParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.quantity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantity([NotNull] cqlParser.QuantityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.quantity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantity([NotNull] cqlParser.QuantityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnit([NotNull] cqlParser.UnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnit([NotNull] cqlParser.UnitContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Hl7.Cql.CqlToElm.Grammar
