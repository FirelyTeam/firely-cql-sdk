//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Git/ncqa-cql/Cql/Cql.Grammar/cql.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Hl7.Cql.CqlToElm.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="cqlParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IcqlVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] cqlParser.DefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.library"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLibrary([NotNull] cqlParser.LibraryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.libraryDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLibraryDefinition([NotNull] cqlParser.LibraryDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.usingDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingDefinition([NotNull] cqlParser.UsingDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.includeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncludeDefinition([NotNull] cqlParser.IncludeDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.localIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalIdentifier([NotNull] cqlParser.LocalIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.accessModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessModifier([NotNull] cqlParser.AccessModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.parameterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterDefinition([NotNull] cqlParser.ParameterDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codesystemDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodesystemDefinition([NotNull] cqlParser.CodesystemDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.valuesetDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValuesetDefinition([NotNull] cqlParser.ValuesetDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codesystems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodesystems([NotNull] cqlParser.CodesystemsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codesystemIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodesystemIdentifier([NotNull] cqlParser.CodesystemIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.libraryIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLibraryIdentifier([NotNull] cqlParser.LibraryIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeDefinition([NotNull] cqlParser.CodeDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.conceptDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConceptDefinition([NotNull] cqlParser.ConceptDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeIdentifier([NotNull] cqlParser.CodeIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codesystemId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodesystemId([NotNull] cqlParser.CodesystemIdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.valuesetId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValuesetId([NotNull] cqlParser.ValuesetIdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.versionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVersionSpecifier([NotNull] cqlParser.VersionSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codeId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeId([NotNull] cqlParser.CodeIdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeSpecifier([NotNull] cqlParser.TypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.namedTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedTypeSpecifier([NotNull] cqlParser.NamedTypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.modelIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModelIdentifier([NotNull] cqlParser.ModelIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.listTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListTypeSpecifier([NotNull] cqlParser.ListTypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.intervalTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalTypeSpecifier([NotNull] cqlParser.IntervalTypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.tupleTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleTypeSpecifier([NotNull] cqlParser.TupleTypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.tupleElementDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleElementDefinition([NotNull] cqlParser.TupleElementDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.choiceTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChoiceTypeSpecifier([NotNull] cqlParser.ChoiceTypeSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] cqlParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.expressionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionDefinition([NotNull] cqlParser.ExpressionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.contextDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContextDefinition([NotNull] cqlParser.ContextDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.fluentModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFluentModifier([NotNull] cqlParser.FluentModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefinition([NotNull] cqlParser.FunctionDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.operandDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperandDefinition([NotNull] cqlParser.OperandDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] cqlParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.querySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuerySource([NotNull] cqlParser.QuerySourceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.aliasedQuerySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAliasedQuerySource([NotNull] cqlParser.AliasedQuerySourceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAlias([NotNull] cqlParser.AliasContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.queryInclusionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryInclusionClause([NotNull] cqlParser.QueryInclusionClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.withClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithClause([NotNull] cqlParser.WithClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.withoutClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithoutClause([NotNull] cqlParser.WithoutClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.retrieve"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRetrieve([NotNull] cqlParser.RetrieveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.contextIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContextIdentifier([NotNull] cqlParser.ContextIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodePath([NotNull] cqlParser.CodePathContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codeComparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeComparator([NotNull] cqlParser.CodeComparatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.terminology"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminology([NotNull] cqlParser.TerminologyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifier([NotNull] cqlParser.QualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] cqlParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.sourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSourceClause([NotNull] cqlParser.SourceClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.letClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetClause([NotNull] cqlParser.LetClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.letClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetClauseItem([NotNull] cqlParser.LetClauseItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhereClause([NotNull] cqlParser.WhereClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.returnClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnClause([NotNull] cqlParser.ReturnClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.aggregateClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateClause([NotNull] cqlParser.AggregateClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.startingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartingClause([NotNull] cqlParser.StartingClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.sortClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSortClause([NotNull] cqlParser.SortClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.sortDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSortDirection([NotNull] cqlParser.SortDirectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.sortByItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSortByItem([NotNull] cqlParser.SortByItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedIdentifier([NotNull] cqlParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.qualifiedIdentifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedIdentifierExpression([NotNull] cqlParser.QualifiedIdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.qualifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifierExpression([NotNull] cqlParser.QualifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simplePathIndexer</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimplePathIndexer([NotNull] cqlParser.SimplePathIndexerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simplePathQualifiedIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimplePathQualifiedIdentifier([NotNull] cqlParser.SimplePathQualifiedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simplePathReferentialIdentifier</c>
	/// labeled alternative in <see cref="cqlParser.simplePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimplePathReferentialIdentifier([NotNull] cqlParser.SimplePathReferentialIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleStringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleStringLiteral([NotNull] cqlParser.SimpleStringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.simpleLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleNumberLiteral([NotNull] cqlParser.SimpleNumberLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>durationBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationBetweenExpression([NotNull] cqlParser.DurationBetweenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inFixSetExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInFixSetExpression([NotNull] cqlParser.InFixSetExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>retrieveExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRetrieveExpression([NotNull] cqlParser.RetrieveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timingExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimingExpression([NotNull] cqlParser.TimingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>queryExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQueryExpression([NotNull] cqlParser.QueryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] cqlParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanExpression([NotNull] cqlParser.BooleanExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpression([NotNull] cqlParser.OrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] cqlParser.CastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] cqlParser.AndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>betweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBetweenExpression([NotNull] cqlParser.BetweenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>membershipExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMembershipExpression([NotNull] cqlParser.MembershipExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>differenceBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDifferenceBetweenExpression([NotNull] cqlParser.DifferenceBetweenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inequalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInequalityExpression([NotNull] cqlParser.InequalityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] cqlParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>existenceExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExistenceExpression([NotNull] cqlParser.ExistenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>impliesExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImpliesExpression([NotNull] cqlParser.ImpliesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermExpression([NotNull] cqlParser.TermExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeExpression([NotNull] cqlParser.TypeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.dateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimePrecision([NotNull] cqlParser.DateTimePrecisionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.dateTimeComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeComponent([NotNull] cqlParser.DateTimeComponentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.pluralDateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPluralDateTimePrecision([NotNull] cqlParser.PluralDateTimePrecisionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditionExpressionTerm([NotNull] cqlParser.AdditionExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexedExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexedExpressionTerm([NotNull] cqlParser.IndexedExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>widthExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWidthExpressionTerm([NotNull] cqlParser.WidthExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setAggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetAggregateExpressionTerm([NotNull] cqlParser.SetAggregateExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeUnitExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeUnitExpressionTerm([NotNull] cqlParser.TimeUnitExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifThenElseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenElseExpressionTerm([NotNull] cqlParser.IfThenElseExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeBoundaryExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeBoundaryExpressionTerm([NotNull] cqlParser.TimeBoundaryExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>elementExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementExtractorExpressionTerm([NotNull] cqlParser.ElementExtractorExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>conversionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConversionExpressionTerm([NotNull] cqlParser.ConversionExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeExtentExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeExtentExpressionTerm([NotNull] cqlParser.TypeExtentExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>predecessorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredecessorExpressionTerm([NotNull] cqlParser.PredecessorExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>pointExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointExtractorExpressionTerm([NotNull] cqlParser.PointExtractorExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpressionTerm([NotNull] cqlParser.MultiplicationExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>aggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateExpressionTerm([NotNull] cqlParser.AggregateExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>durationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationExpressionTerm([NotNull] cqlParser.DurationExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>differenceExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDifferenceExpressionTerm([NotNull] cqlParser.DifferenceExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>caseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseExpressionTerm([NotNull] cqlParser.CaseExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>powerExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpressionTerm([NotNull] cqlParser.PowerExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>successorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuccessorExpressionTerm([NotNull] cqlParser.SuccessorExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>polarityExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPolarityExpressionTerm([NotNull] cqlParser.PolarityExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermExpressionTerm([NotNull] cqlParser.TermExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>invocationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationExpressionTerm([NotNull] cqlParser.InvocationExpressionTermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.caseExpressionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseExpressionItem([NotNull] cqlParser.CaseExpressionItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.dateTimePrecisionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimePrecisionSpecifier([NotNull] cqlParser.DateTimePrecisionSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.relativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelativeQualifier([NotNull] cqlParser.RelativeQualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.offsetRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOffsetRelativeQualifier([NotNull] cqlParser.OffsetRelativeQualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.exclusiveRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExclusiveRelativeQualifier([NotNull] cqlParser.ExclusiveRelativeQualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.quantityOffset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantityOffset([NotNull] cqlParser.QuantityOffsetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.temporalRelationship"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTemporalRelationship([NotNull] cqlParser.TemporalRelationshipContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>concurrentWithIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcurrentWithIntervalOperatorPhrase([NotNull] cqlParser.ConcurrentWithIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>includesIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncludesIntervalOperatorPhrase([NotNull] cqlParser.IncludesIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>includedInIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncludedInIntervalOperatorPhrase([NotNull] cqlParser.IncludedInIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>beforeOrAfterIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBeforeOrAfterIntervalOperatorPhrase([NotNull] cqlParser.BeforeOrAfterIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>withinIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithinIntervalOperatorPhrase([NotNull] cqlParser.WithinIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>meetsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMeetsIntervalOperatorPhrase([NotNull] cqlParser.MeetsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>overlapsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOverlapsIntervalOperatorPhrase([NotNull] cqlParser.OverlapsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>startsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStartsIntervalOperatorPhrase([NotNull] cqlParser.StartsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>endsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEndsIntervalOperatorPhrase([NotNull] cqlParser.EndsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>invocationTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationTerm([NotNull] cqlParser.InvocationTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literalTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralTerm([NotNull] cqlParser.LiteralTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>externalConstantTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalConstantTerm([NotNull] cqlParser.ExternalConstantTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intervalSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalSelectorTerm([NotNull] cqlParser.IntervalSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tupleSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleSelectorTerm([NotNull] cqlParser.TupleSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>instanceSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceSelectorTerm([NotNull] cqlParser.InstanceSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>listSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListSelectorTerm([NotNull] cqlParser.ListSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>codeSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeSelectorTerm([NotNull] cqlParser.CodeSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>conceptSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConceptSelectorTerm([NotNull] cqlParser.ConceptSelectorTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedTerm([NotNull] cqlParser.ParenthesizedTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>qualifiedMemberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedMemberInvocation([NotNull] cqlParser.QualifiedMemberInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>qualifiedFunctionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.qualifiedInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedFunctionInvocation([NotNull] cqlParser.QualifiedFunctionInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.qualifiedFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedFunction([NotNull] cqlParser.QualifiedFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>memberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberInvocation([NotNull] cqlParser.MemberInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocation([NotNull] cqlParser.FunctionInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>thisInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisInvocation([NotNull] cqlParser.ThisInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexInvocation([NotNull] cqlParser.IndexInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>totalInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTotalInvocation([NotNull] cqlParser.TotalInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] cqlParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.ratio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRatio([NotNull] cqlParser.RatioContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] cqlParser.BooleanLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteral([NotNull] cqlParser.NullLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] cqlParser.StringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>numberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberLiteral([NotNull] cqlParser.NumberLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>longNumberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLongNumberLiteral([NotNull] cqlParser.LongNumberLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dateTimeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTimeLiteral([NotNull] cqlParser.DateTimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dateLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteral([NotNull] cqlParser.DateLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeLiteral([NotNull] cqlParser.TimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quantityLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantityLiteral([NotNull] cqlParser.QuantityLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ratioLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRatioLiteral([NotNull] cqlParser.RatioLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.intervalSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalSelector([NotNull] cqlParser.IntervalSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.tupleSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleSelector([NotNull] cqlParser.TupleSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.tupleElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleElementSelector([NotNull] cqlParser.TupleElementSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.instanceSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceSelector([NotNull] cqlParser.InstanceSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.instanceElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceElementSelector([NotNull] cqlParser.InstanceElementSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.listSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListSelector([NotNull] cqlParser.ListSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.displayClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDisplayClause([NotNull] cqlParser.DisplayClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.codeSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCodeSelector([NotNull] cqlParser.CodeSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.conceptSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConceptSelector([NotNull] cqlParser.ConceptSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] cqlParser.KeywordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.reservedWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReservedWord([NotNull] cqlParser.ReservedWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.keywordIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeywordIdentifier([NotNull] cqlParser.KeywordIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.obsoleteIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObsoleteIdentifier([NotNull] cqlParser.ObsoleteIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.functionIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionIdentifier([NotNull] cqlParser.FunctionIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.typeNameIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameIdentifier([NotNull] cqlParser.TypeNameIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.referentialIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferentialIdentifier([NotNull] cqlParser.ReferentialIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.referentialOrTypeNameIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferentialOrTypeNameIdentifier([NotNull] cqlParser.ReferentialOrTypeNameIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.identifierOrFunctionIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierOrFunctionIdentifier([NotNull] cqlParser.IdentifierOrFunctionIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] cqlParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.externalConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalConstant([NotNull] cqlParser.ExternalConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] cqlParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.quantity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuantity([NotNull] cqlParser.QuantityContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="cqlParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnit([NotNull] cqlParser.UnitContext context);
}
} // namespace Hl7.Cql.CqlToElm.Grammar
