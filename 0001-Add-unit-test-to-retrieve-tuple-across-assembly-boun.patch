From e430d95c96041334f7c17c64487d9b50697210bc Mon Sep 17 00:00:00 2001
From: Andreas Hussong <andreas.hussong@philips.com>
Date: Wed, 16 Oct 2024 11:51:27 +0200
Subject: [PATCH] Add unit test to retrieve tuple across assembly boundaries
 and serialize to Json

---
 .../CSharp/CqlNestedTupleTest-1.0.0.g.cs      |  46 +++++
 Cql/CoreTests/CoreTests.csproj                |   4 +
 .../Input/ELM/HL7/CqlNestedTupleTest.cql      |  10 +
 .../Input/ELM/HL7/CqlNestedTupleTest.json     | 174 ++++++++++++++++++
 Cql/CoreTests/Tuples/CqlTupleTests.cs         |  30 ++-
 Demo/Cql/Build/ElmToCSharp.Targets.xml        |   1 +
 6 files changed, 264 insertions(+), 1 deletion(-)
 create mode 100644 Cql/CoreTests/CSharp/CqlNestedTupleTest-1.0.0.g.cs
 create mode 100644 Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.cql
 create mode 100644 Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.json

diff --git a/Cql/CoreTests/CSharp/CqlNestedTupleTest-1.0.0.g.cs b/Cql/CoreTests/CSharp/CqlNestedTupleTest-1.0.0.g.cs
new file mode 100644
index 00000000..ab660a3a
--- /dev/null
+++ b/Cql/CoreTests/CSharp/CqlNestedTupleTest-1.0.0.g.cs
@@ -0,0 +1,46 @@
+ï»¿using System;
+using System.Linq;
+using System.Collections.Generic;
+using Hl7.Cql.Runtime;
+using Hl7.Cql.Primitives;
+using Hl7.Cql.Abstractions;
+using Hl7.Cql.ValueSets;
+using Hl7.Cql.Iso8601;
+using System.Reflection;
+using Hl7.Cql.Operators;
+using Hl7.Fhir.Model;
+using Range = Hl7.Fhir.Model.Range;
+using Task = Hl7.Fhir.Model.Task;
+
+[System.CodeDom.Compiler.GeneratedCode(".NET Code Generation", "2.0.6.0")]
+[CqlLibrary("CqlNestedTupleTest", "1.0.0")]
+public partial class CqlNestedTupleTest_1_0_0 : ILibrary, ISingleton<CqlNestedTupleTest_1_0_0>
+{
+    private CqlNestedTupleTest_1_0_0() {}
+
+    public static CqlNestedTupleTest_1_0_0 Instance { get; } = new();
+
+    #region Library Members
+    public string Name => "CqlNestedTupleTest";
+    public string Version => "1.0.0";
+    public ILibrary[] Dependencies => [];
+    #endregion Library Members
+
+    [CqlDeclaration("Result")]
+    public (CqlTupleMetadata, string status, (CqlTupleMetadata, string result1, string result2)? result)? Result(CqlContext context)
+    {
+        (CqlTupleMetadata, string result1, string result2)? a_ = (CqlTupleMetadata_EPSaUMIUKUKJWbFHLJZKCNGEJ, "some first result", "some second result");
+        (CqlTupleMetadata, string status, (CqlTupleMetadata, string result1, string result2)? result)? b_ = (CqlTupleMetadata_CDcDMaXTJEYjcbRFSXcEbIQKY, "success", a_);
+
+        return b_;
+    }
+
+    private static CqlTupleMetadata CqlTupleMetadata_EPSaUMIUKUKJWbFHLJZKCNGEJ = new(
+        [typeof(string), typeof(string)],
+        ["result1", "result2"]);
+
+    private static CqlTupleMetadata CqlTupleMetadata_CDcDMaXTJEYjcbRFSXcEbIQKY = new(
+        [typeof(string), typeof((CqlTupleMetadata, string result1, string result2)?)],
+        ["status", "result"]);
+
+}
diff --git a/Cql/CoreTests/CoreTests.csproj b/Cql/CoreTests/CoreTests.csproj
index bc87a1c8..6edb0a1e 100644
--- a/Cql/CoreTests/CoreTests.csproj
+++ b/Cql/CoreTests/CoreTests.csproj
@@ -44,6 +44,7 @@
 		<LibrarySet>CoreTests.HL7</LibrarySet>
 		<CqlDirectory>$(MSBuildProjectDirectory)/input/elm/hl7</CqlDirectory>
 		<ElmDirectory>$(MSBuildProjectDirectory)/input/elm/hl7</ElmDirectory>
+		<DllDirectory>$(MSBuildProjectDirectory)/Dlls</DllDirectory>
 		<!-- <ResourcesDirectory>$(MSBuildProjectDirectory)/Resources</ResourcesDirectory> -->
 		<!-- <TestResultsDirectory>$(MSBuildProjectDirectory)/input/tests/results</TestResultsDirectory> -->
 	</PropertyGroup>
@@ -67,5 +68,8 @@
 		<None Update="Input\ValueSets\*.json">
 			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
 		</None>
+    <None Include="Dlls\*.dll">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </None>
 	</ItemGroup>
 </Project>
diff --git a/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.cql b/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.cql
new file mode 100644
index 00000000..3ed2cc9c
--- /dev/null
+++ b/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.cql
@@ -0,0 +1,10 @@
+library CqlNestedTupleTest version '1.0.0'
+
+define "Result":
+  Tuple{
+    status: 'success',
+    result: Tuple{
+        result1: 'some first result',
+        result2: 'some second result'
+        }
+  }
\ No newline at end of file
diff --git a/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.json b/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.json
new file mode 100644
index 00000000..262f7be5
--- /dev/null
+++ b/Cql/CoreTests/Input/ELM/HL7/CqlNestedTupleTest.json
@@ -0,0 +1,174 @@
+{
+   "library" : {
+      "annotation" : [ {
+         "translatorVersion" : "3.16.0",
+         "translatorOptions" : "EnableLocators,EnableResultTypes",
+         "signatureLevel" : "All",
+         "type" : "CqlToElmInfo"
+      } ],
+      "identifier" : {
+         "id" : "CqlNestedTupleTest",
+         "version" : "1.0.0"
+      },
+      "schemaIdentifier" : {
+         "id" : "urn:hl7-org:elm",
+         "version" : "r1"
+      },
+      "usings" : {
+         "def" : [ {
+            "localIdentifier" : "System",
+            "uri" : "urn:hl7-org:elm-types:r1",
+            "annotation" : [ ]
+         } ]
+      },
+      "statements" : {
+         "def" : [ {
+            "locator" : "3:1-10:3",
+            "name" : "Result",
+            "context" : "Unfiltered",
+            "accessLevel" : "Public",
+            "annotation" : [ ],
+            "resultTypeSpecifier" : {
+               "type" : "TupleTypeSpecifier",
+               "annotation" : [ ],
+               "element" : [ {
+                  "name" : "status",
+                  "annotation" : [ ],
+                  "elementType" : {
+                     "name" : "{urn:hl7-org:elm-types:r1}String",
+                     "type" : "NamedTypeSpecifier",
+                     "annotation" : [ ]
+                  }
+               }, {
+                  "name" : "result",
+                  "annotation" : [ ],
+                  "elementType" : {
+                     "type" : "TupleTypeSpecifier",
+                     "annotation" : [ ],
+                     "element" : [ {
+                        "name" : "result1",
+                        "annotation" : [ ],
+                        "elementType" : {
+                           "name" : "{urn:hl7-org:elm-types:r1}String",
+                           "type" : "NamedTypeSpecifier",
+                           "annotation" : [ ]
+                        }
+                     }, {
+                        "name" : "result2",
+                        "annotation" : [ ],
+                        "elementType" : {
+                           "name" : "{urn:hl7-org:elm-types:r1}String",
+                           "type" : "NamedTypeSpecifier",
+                           "annotation" : [ ]
+                        }
+                     } ]
+                  }
+               } ]
+            },
+            "expression" : {
+               "locator" : "4:3-10:3",
+               "type" : "Tuple",
+               "annotation" : [ ],
+               "resultTypeSpecifier" : {
+                  "type" : "TupleTypeSpecifier",
+                  "annotation" : [ ],
+                  "element" : [ {
+                     "name" : "status",
+                     "annotation" : [ ],
+                     "elementType" : {
+                        "name" : "{urn:hl7-org:elm-types:r1}String",
+                        "type" : "NamedTypeSpecifier",
+                        "annotation" : [ ]
+                     }
+                  }, {
+                     "name" : "result",
+                     "annotation" : [ ],
+                     "elementType" : {
+                        "type" : "TupleTypeSpecifier",
+                        "annotation" : [ ],
+                        "element" : [ {
+                           "name" : "result1",
+                           "annotation" : [ ],
+                           "elementType" : {
+                              "name" : "{urn:hl7-org:elm-types:r1}String",
+                              "type" : "NamedTypeSpecifier",
+                              "annotation" : [ ]
+                           }
+                        }, {
+                           "name" : "result2",
+                           "annotation" : [ ],
+                           "elementType" : {
+                              "name" : "{urn:hl7-org:elm-types:r1}String",
+                              "type" : "NamedTypeSpecifier",
+                              "annotation" : [ ]
+                           }
+                        } ]
+                     }
+                  } ]
+               },
+               "element" : [ {
+                  "name" : "status",
+                  "value" : {
+                     "locator" : "5:13-5:21",
+                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
+                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
+                     "value" : "success",
+                     "type" : "Literal",
+                     "annotation" : [ ]
+                  }
+               }, {
+                  "name" : "result",
+                  "value" : {
+                     "locator" : "6:13-9:9",
+                     "type" : "Tuple",
+                     "annotation" : [ ],
+                     "resultTypeSpecifier" : {
+                        "type" : "TupleTypeSpecifier",
+                        "annotation" : [ ],
+                        "element" : [ {
+                           "name" : "result1",
+                           "annotation" : [ ],
+                           "elementType" : {
+                              "name" : "{urn:hl7-org:elm-types:r1}String",
+                              "type" : "NamedTypeSpecifier",
+                              "annotation" : [ ]
+                           }
+                        }, {
+                           "name" : "result2",
+                           "annotation" : [ ],
+                           "elementType" : {
+                              "name" : "{urn:hl7-org:elm-types:r1}String",
+                              "type" : "NamedTypeSpecifier",
+                              "annotation" : [ ]
+                           }
+                        } ]
+                     },
+                     "element" : [ {
+                        "name" : "result1",
+                        "value" : {
+                           "locator" : "7:18-7:36",
+                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
+                           "valueType" : "{urn:hl7-org:elm-types:r1}String",
+                           "value" : "some first result",
+                           "type" : "Literal",
+                           "annotation" : [ ]
+                        }
+                     }, {
+                        "name" : "result2",
+                        "value" : {
+                           "locator" : "8:18-8:37",
+                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
+                           "valueType" : "{urn:hl7-org:elm-types:r1}String",
+                           "value" : "some second result",
+                           "type" : "Literal",
+                           "annotation" : [ ]
+                        }
+                     } ]
+                  }
+               } ]
+            }
+         } ]
+      }
+   }
+}
+
diff --git a/Cql/CoreTests/Tuples/CqlTupleTests.cs b/Cql/CoreTests/Tuples/CqlTupleTests.cs
index 9b55cc05..1d0997ee 100644
--- a/Cql/CoreTests/Tuples/CqlTupleTests.cs
+++ b/Cql/CoreTests/Tuples/CqlTupleTests.cs
@@ -1,8 +1,15 @@
-ï»¿#nullable enable
+#nullable enable
 using Microsoft.VisualStudio.TestTools.UnitTesting;
 using System.Text.Json;
 using Hl7.Cql.Runtime;
 using Hl7.Cql.Runtime.Serialization;
+using System.Linq.Expressions;
+using System;
+using Hl7.Cql.CodeGeneration.NET;
+using Hl7.Cql.Fhir;
+using System.IO;
+using System.Runtime.Loader;
+using Hl7.Cql.Packaging;
 
 namespace CoreTests.Tuples;
 
@@ -74,4 +81,25 @@ public class CqlTupleTests
             }
             """, serializedJson);
     }
+    [TestMethod]
+    public void ExpressionReturningNestedTuples_ResultCanBeSerialized()
+    {
+        var file = @"Dlls/CqlNestedTupleTest-1.0.0.dll";
+        var filePath = Path.GetFullPath(file);
+
+        var asm = new AssemblyLoadContext("CqlNestedTupleTest");
+        asm.LoadFromAssemblyPath(filePath);
+
+        var ctx = FhirCqlContext.ForBundle();
+        var result = asm.Run("CqlNestedTupleTest", "1.0.0", ctx);
+        Assert.IsNotNull(result);
+
+        result.TryGetValue("Result", out var obj);
+        Assert.IsNotNull(obj);
+        Assert.IsInstanceOfType(obj, typeof(ValueTuple));
+
+        // serialization works out of the box
+        //var str = JsonSerializer.Serialize(obj);
+        //Assert.AreEqual("{\"status\":\"success\",\"result\":\"some result\"}", str);
+    }
 }
\ No newline at end of file
diff --git a/Demo/Cql/Build/ElmToCSharp.Targets.xml b/Demo/Cql/Build/ElmToCSharp.Targets.xml
index 6633b145..d4e77330 100644
--- a/Demo/Cql/Build/ElmToCSharp.Targets.xml
+++ b/Demo/Cql/Build/ElmToCSharp.Targets.xml
@@ -36,6 +36,7 @@
 			<PackagerCLIArgs Condition="'$(ElmDirectory)'!=''">$(PackagerCLIArgs) --elm "$(ElmDirectory)"</PackagerCLIArgs>
 			<PackagerCLIArgs Condition="'$(CqlDirectory)'!=''">$(PackagerCLIArgs) --cql "$(CqlDirectory)"</PackagerCLIArgs>
 			<PackagerCLIArgs Condition="'$(CSharpDirectory)'!=''">$(PackagerCLIArgs) --cs "$(CSharpDirectory)"</PackagerCLIArgs>
+			<PackagerCliArgs Condition="'$(DllDirectory)'!=''">$(PackagerCLIArgs) --dll "$(DllDirectory)"</PackagerCliArgs>
 			<PackagerCLIArgs Condition="'$(ResourcesDirectory)'!=''">$(PackagerCLIArgs) --fhir "$(ResourcesDirectory)"</PackagerCLIArgs>
 			<PackagerCLIArgs Condition="'$(CSharpTypeFormat)'!=''">$(PackagerCLIArgs) --cs-typeformat "$(CSharpTypeFormat)"</PackagerCLIArgs>
 			<PackagerCLICommand>$(PackagerCLI) $(PackagerClIArgs)</PackagerCLICommand>
-- 
2.47.0.windows.1

