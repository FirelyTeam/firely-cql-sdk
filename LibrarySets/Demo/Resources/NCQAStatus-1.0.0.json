{
  "resourceType": "Library",
  "id": "NCQAStatus-1.0.0",
  "version": "1.0.0",
  "name": "NCQAStatus",
  "status": "active",
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "1970-01-01T00:00:00.0000000Z",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "FHIRHelpers-4.0.001"
    },
    {
      "type": "depends-on",
      "resource": "NCQATerminology-1.0.0"
    }
  ],
  "content": [
    {
      "id": "NCQAStatus-1.0.0+elm",
      "contentType": "application/elm+json",
      "data": ""
    },
    {
      "id": "NCQAStatus-1.0.0+cql",
      "contentType": "text/cql",
      "data": "bGlicmFyeSBOQ1FBU3RhdHVzIHZlcnNpb24gJzEuMC4wJw0KDQp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4wMDEnIGNhbGxlZCBGSElSSGVscGVycw0KaW5jbHVkZSBOQ1FBVGVybWlub2xvZ3kgdmVyc2lvbiAnMS4wLjAnIGNhbGxlZCBUZXJtaW5vbG9neQ0KDQpjb250ZXh0IFBhdGllbnQNCg0KLy8gQWxsZXJneUludG9sZXJhbmNlDQpkZWZpbmUgZnVuY3Rpb24gIkFjdGl2ZSBBbGxlcmd5IihBbGxlcmd5IExpc3Q8RkhJUi5BbGxlcmd5SW50b2xlcmFuY2U+KToNCiAgICBBbGxlcmd5IEENCiAgICAgICAgIHdoZXJlIEEuY2xpbmljYWxTdGF0dXMgPSBUZXJtaW5vbG9neS4iYWxsZXJneS1hY3RpdmUiDQoNCi8vIENvbmRpdGlvbg0KZGVmaW5lIGZ1bmN0aW9uICJBY3RpdmUgQ29uZGl0aW9uIihDb25kaXRpb24gTGlzdDxGSElSLkNvbmRpdGlvbj4pOg0KICAgQ29uZGl0aW9uIEMNCiAgICAgICB3aGVyZSBDLmNsaW5pY2FsU3RhdHVzID0gVGVybWlub2xvZ3kuImFjdGl2ZSINCg0KLy8gRW5jb3VudGVyDQpkZWZpbmUgZnVuY3Rpb24gIkZpbmlzaGVkIEVuY291bnRlciIoRW5jIExpc3Q8RkhJUi5FbmNvdW50ZXI+KToNCiAgICBFbmMgRQ0KICAgICAgICB3aGVyZSBFLnN0YXR1cyA9ICdmaW5pc2hlZCcNCg0KLy8gSW1tdW5pemF0aW9uDQpkZWZpbmUgZnVuY3Rpb24gIkNvbXBsZXRlZCBJbW11bml6YXRpb24iKEltbXVuaXphdGlvbiBMaXN0PEZISVIuSW1tdW5pemF0aW9uPik6DQogICAgSW1tdW5pemF0aW9uIEkNCiAgICAgICAgd2hlcmUgSS5zdGF0dXMgPSAnY29tcGxldGVkJw0KDQovLyBNZWRpY2F0aW9uRGlzcGVuc2UNCmRlZmluZSBmdW5jdGlvbiAiRGlzcGVuc2VkIE1lZGljYXRpb24iKE1lZCBMaXN0PEZISVIuTWVkaWNhdGlvbkRpc3BlbnNlPik6DQogICAgTWVkIE0NCiAgICAgICAgd2hlcmUgTS5zdGF0dXMgPSAnY29tcGxldGVkJw0KDQovLyBNZWRpY2F0aW9uUmVxdWVzdA0KZGVmaW5lIGZ1bmN0aW9uICJBY3RpdmUgTWVkaWNhdGlvbiIoTWVkIExpc3Q8RkhJUi5NZWRpY2F0aW9uUmVxdWVzdD4pOg0KICAgIE1lZCBNDQogICAgICAgIHdoZXJlIE0uc3RhdHVzIGluIHsnY29tcGxldGVkJ30NCg0KLy8gUHJvY2VkdXJlDQpkZWZpbmUgZnVuY3Rpb24gIkNvbXBsZXRlZCBQcm9jZWR1cmUiKFByb2MgTGlzdDxGSElSLlByb2NlZHVyZT4pOg0KICAgIFByb2MgUA0KICAgICAgICB3aGVyZSBQLnN0YXR1cyA9ICdjb21wbGV0ZWQnDQoNCmRlZmluZSBmdW5jdGlvbiAiQ29tcGxldGVkIG9yIE9uZ29pbmcgUHJvY2VkdXJlIihQcm9jIExpc3Q8RkhJUi5Qcm9jZWR1cmU+KToNCiAgICBQcm9jIFANCiAgICAgICAgd2hlcmUgUC5zdGF0dXMgaW4geydjb21wbGV0ZWQnLCAnaW4tcHJvZ3Jlc3MnfQ0K"
    },
    {
      "id": "NCQAStatus-1.0.0+dll",
      "contentType": "application/octet-stream",
      "data": "
    },
    {
      "id": "NCQAStatus-1.0.0+csharp",
      "contentType": "text/plain",
      "data": "dXNpbmcgU3lzdGVtOw0KdXNpbmcgU3lzdGVtLkxpbnE7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCnVzaW5nIEhsNy5DcWwuUnVudGltZTsNCnVzaW5nIEhsNy5DcWwuUHJpbWl0aXZlczsNCnVzaW5nIEhsNy5DcWwuQWJzdHJhY3Rpb25zOw0KdXNpbmcgSGw3LkNxbC5WYWx1ZVNldHM7DQp1c2luZyBIbDcuQ3FsLklzbzg2MDE7DQp1c2luZyBIbDcuRmhpci5Nb2RlbDsNCnVzaW5nIFJhbmdlID0gSGw3LkZoaXIuTW9kZWwuUmFuZ2U7DQp1c2luZyBUYXNrID0gSGw3LkZoaXIuTW9kZWwuVGFzazsNCltTeXN0ZW0uQ29kZURvbS5Db21waWxlci5HZW5lcmF0ZWRDb2RlKCIuTkVUIENvZGUgR2VuZXJhdGlvbiIsICIyLjAuMC4wIildDQpbQ3FsTGlicmFyeSgiTkNRQVN0YXR1cyIsICIxLjAuMCIpXQ0KcHVibGljIGNsYXNzIE5DUUFTdGF0dXNfMV8wXzANCnsNCg0KDQogICAgaW50ZXJuYWwgQ3FsQ29udGV4dCBjb250ZXh0Ow0KDQogICAgI3JlZ2lvbiBDYWNoZWQgdmFsdWVzDQoNCiAgICBpbnRlcm5hbCBMYXp5PFBhdGllbnQ+IF9fUGF0aWVudDsNCg0KICAgICNlbmRyZWdpb24NCiAgICBwdWJsaWMgTkNRQVN0YXR1c18xXzBfMChDcWxDb250ZXh0IGNvbnRleHQpDQogICAgew0KICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0ID8/IHRocm93IG5ldyBBcmd1bWVudE51bGxFeGNlcHRpb24oImNvbnRleHQiKTsNCg0KICAgICAgICBGSElSSGVscGVyc180XzBfMDAxID0gbmV3IEZISVJIZWxwZXJzXzRfMF8wMDEoY29udGV4dCk7DQogICAgICAgIE5DUUFUZXJtaW5vbG9neV8xXzBfMCA9IG5ldyBOQ1FBVGVybWlub2xvZ3lfMV8wXzAoY29udGV4dCk7DQoNCiAgICAgICAgX19QYXRpZW50ID0gbmV3IExhenk8UGF0aWVudD4odGhpcy5QYXRpZW50X1ZhbHVlKTsNCiAgICB9DQogICAgI3JlZ2lvbiBEZXBlbmRlbmNpZXMNCg0KICAgIHB1YmxpYyBGSElSSGVscGVyc180XzBfMDAxIEZISVJIZWxwZXJzXzRfMF8wMDEgeyBnZXQ7IH0NCiAgICBwdWJsaWMgTkNRQVRlcm1pbm9sb2d5XzFfMF8wIE5DUUFUZXJtaW5vbG9neV8xXzBfMCB7IGdldDsgfQ0KDQogICAgI2VuZHJlZ2lvbg0KDQoJcHJpdmF0ZSBQYXRpZW50IFBhdGllbnRfVmFsdWUoKQ0KCXsNCgkJdmFyIGFfID0gY29udGV4dC5PcGVyYXRvcnMuUmV0cmlldmVCeVZhbHVlU2V0PFBhdGllbnQ+KG51bGwsIG51bGwpOw0KCQl2YXIgYl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5TaW5nbGVPck51bGw8UGF0aWVudD4oYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIlBhdGllbnQiKV0NCglwdWJsaWMgUGF0aWVudCBQYXRpZW50KCkgPT4gDQoJCV9fUGF0aWVudC5WYWx1ZTsNCg0KICAgIFtDcWxEZWNsYXJhdGlvbigiQWN0aXZlIEFsbGVyZ3kiKV0NCglwdWJsaWMgSUVudW1lcmFibGU8QWxsZXJneUludG9sZXJhbmNlPiBBY3RpdmVfQWxsZXJneShJRW51bWVyYWJsZTxBbGxlcmd5SW50b2xlcmFuY2U+IEFsbGVyZ3kpDQoJew0KCQlib29sPyBhXyhBbGxlcmd5SW50b2xlcmFuY2UgQSkNCgkJew0KCQkJdmFyIGNfID0gRkhJUkhlbHBlcnNfNF8wXzAwMS5Ub0NvbmNlcHQoQT8uQ2xpbmljYWxTdGF0dXMpOw0KCQkJdmFyIGRfID0gTkNRQVRlcm1pbm9sb2d5XzFfMF8wLmFsbGVyZ3lfYWN0aXZlKCk7DQoJCQl2YXIgZV8gPSBjb250ZXh0Lk9wZXJhdG9ycy5Db252ZXJ0Q29kZVRvQ29uY2VwdChkXyk7DQoJCQl2YXIgZl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5FcXVhbChjXywgZV8pOw0KDQoJCQlyZXR1cm4gZl87DQoJCX07DQoJCXZhciBiXyA9IGNvbnRleHQuT3BlcmF0b3JzLldoZXJlT3JOdWxsPEFsbGVyZ3lJbnRvbGVyYW5jZT4oQWxsZXJneSwgYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIkFjdGl2ZSBDb25kaXRpb24iKV0NCglwdWJsaWMgSUVudW1lcmFibGU8Q29uZGl0aW9uPiBBY3RpdmVfQ29uZGl0aW9uKElFbnVtZXJhYmxlPENvbmRpdGlvbj4gQ29uZGl0aW9uKQ0KCXsNCgkJYm9vbD8gYV8oQ29uZGl0aW9uIEMpDQoJCXsNCgkJCXZhciBjXyA9IEZISVJIZWxwZXJzXzRfMF8wMDEuVG9Db25jZXB0KEM/LkNsaW5pY2FsU3RhdHVzKTsNCgkJCXZhciBkXyA9IE5DUUFUZXJtaW5vbG9neV8xXzBfMC5hY3RpdmUoKTsNCgkJCXZhciBlXyA9IGNvbnRleHQuT3BlcmF0b3JzLkNvbnZlcnRDb2RlVG9Db25jZXB0KGRfKTsNCgkJCXZhciBmXyA9IGNvbnRleHQuT3BlcmF0b3JzLkVxdWFsKGNfLCBlXyk7DQoNCgkJCXJldHVybiBmXzsNCgkJfTsNCgkJdmFyIGJfID0gY29udGV4dC5PcGVyYXRvcnMuV2hlcmVPck51bGw8Q29uZGl0aW9uPihDb25kaXRpb24sIGFfKTsNCg0KCQlyZXR1cm4gYl87DQoJfQ0KDQogICAgW0NxbERlY2xhcmF0aW9uKCJGaW5pc2hlZCBFbmNvdW50ZXIiKV0NCglwdWJsaWMgSUVudW1lcmFibGU8RW5jb3VudGVyPiBGaW5pc2hlZF9FbmNvdW50ZXIoSUVudW1lcmFibGU8RW5jb3VudGVyPiBFbmMpDQoJew0KCQlib29sPyBhXyhFbmNvdW50ZXIgRSkNCgkJew0KCQkJdmFyIGNfID0gY29udGV4dC5PcGVyYXRvcnMuQ29udmVydDxzdHJpbmc+KEU/LlN0YXR1c0VsZW1lbnQpOw0KCQkJdmFyIGRfID0gY29udGV4dC5PcGVyYXRvcnMuRXF1YWwoY18sICJmaW5pc2hlZCIpOw0KDQoJCQlyZXR1cm4gZF87DQoJCX07DQoJCXZhciBiXyA9IGNvbnRleHQuT3BlcmF0b3JzLldoZXJlT3JOdWxsPEVuY291bnRlcj4oRW5jLCBhXyk7DQoNCgkJcmV0dXJuIGJfOw0KCX0NCg0KICAgIFtDcWxEZWNsYXJhdGlvbigiQ29tcGxldGVkIEltbXVuaXphdGlvbiIpXQ0KCXB1YmxpYyBJRW51bWVyYWJsZTxJbW11bml6YXRpb24+IENvbXBsZXRlZF9JbW11bml6YXRpb24oSUVudW1lcmFibGU8SW1tdW5pemF0aW9uPiBJbW11bml6YXRpb24pDQoJew0KCQlib29sPyBhXyhJbW11bml6YXRpb24gSSkNCgkJew0KCQkJdmFyIGNfID0gY29udGV4dC5PcGVyYXRvcnMuQ29udmVydDxzdHJpbmc+KEk/LlN0YXR1c0VsZW1lbnQpOw0KCQkJdmFyIGRfID0gY29udGV4dC5PcGVyYXRvcnMuRXF1YWwoY18sICJjb21wbGV0ZWQiKTsNCg0KCQkJcmV0dXJuIGRfOw0KCQl9Ow0KCQl2YXIgYl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5XaGVyZU9yTnVsbDxJbW11bml6YXRpb24+KEltbXVuaXphdGlvbiwgYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIkRpc3BlbnNlZCBNZWRpY2F0aW9uIildDQoJcHVibGljIElFbnVtZXJhYmxlPE1lZGljYXRpb25EaXNwZW5zZT4gRGlzcGVuc2VkX01lZGljYXRpb24oSUVudW1lcmFibGU8TWVkaWNhdGlvbkRpc3BlbnNlPiBNZWQpDQoJew0KCQlib29sPyBhXyhNZWRpY2F0aW9uRGlzcGVuc2UgTSkNCgkJew0KCQkJdmFyIGNfID0gY29udGV4dC5PcGVyYXRvcnMuQ29udmVydDxzdHJpbmc+KE0/LlN0YXR1c0VsZW1lbnQpOw0KCQkJdmFyIGRfID0gY29udGV4dC5PcGVyYXRvcnMuRXF1YWwoY18sICJjb21wbGV0ZWQiKTsNCg0KCQkJcmV0dXJuIGRfOw0KCQl9Ow0KCQl2YXIgYl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5XaGVyZU9yTnVsbDxNZWRpY2F0aW9uRGlzcGVuc2U+KE1lZCwgYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIkFjdGl2ZSBNZWRpY2F0aW9uIildDQoJcHVibGljIElFbnVtZXJhYmxlPE1lZGljYXRpb25SZXF1ZXN0PiBBY3RpdmVfTWVkaWNhdGlvbihJRW51bWVyYWJsZTxNZWRpY2F0aW9uUmVxdWVzdD4gTWVkKQ0KCXsNCgkJYm9vbD8gYV8oTWVkaWNhdGlvblJlcXVlc3QgTSkNCgkJew0KCQkJdmFyIGNfID0gY29udGV4dC5PcGVyYXRvcnMuQ29udmVydDxzdHJpbmc+KE0/LlN0YXR1c0VsZW1lbnQpOw0KCQkJdmFyIGRfID0gbmV3IHN0cmluZ1tdDQoJCQl7DQoJCQkJImNvbXBsZXRlZCIsDQoJCQl9Ow0KCQkJdmFyIGVfID0gY29udGV4dC5PcGVyYXRvcnMuSW5MaXN0PHN0cmluZz4oY18sIChkXyBhcyBJRW51bWVyYWJsZTxzdHJpbmc+KSk7DQoNCgkJCXJldHVybiBlXzsNCgkJfTsNCgkJdmFyIGJfID0gY29udGV4dC5PcGVyYXRvcnMuV2hlcmVPck51bGw8TWVkaWNhdGlvblJlcXVlc3Q+KE1lZCwgYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIkNvbXBsZXRlZCBQcm9jZWR1cmUiKV0NCglwdWJsaWMgSUVudW1lcmFibGU8UHJvY2VkdXJlPiBDb21wbGV0ZWRfUHJvY2VkdXJlKElFbnVtZXJhYmxlPFByb2NlZHVyZT4gUHJvYykNCgl7DQoJCWJvb2w/IGFfKFByb2NlZHVyZSBQKQ0KCQl7DQoJCQl2YXIgY18gPSBjb250ZXh0Lk9wZXJhdG9ycy5Db252ZXJ0PHN0cmluZz4oUD8uU3RhdHVzRWxlbWVudCk7DQoJCQl2YXIgZF8gPSBjb250ZXh0Lk9wZXJhdG9ycy5FcXVhbChjXywgImNvbXBsZXRlZCIpOw0KDQoJCQlyZXR1cm4gZF87DQoJCX07DQoJCXZhciBiXyA9IGNvbnRleHQuT3BlcmF0b3JzLldoZXJlT3JOdWxsPFByb2NlZHVyZT4oUHJvYywgYV8pOw0KDQoJCXJldHVybiBiXzsNCgl9DQoNCiAgICBbQ3FsRGVjbGFyYXRpb24oIkNvbXBsZXRlZCBvciBPbmdvaW5nIFByb2NlZHVyZSIpXQ0KCXB1YmxpYyBJRW51bWVyYWJsZTxQcm9jZWR1cmU+IENvbXBsZXRlZF9vcl9PbmdvaW5nX1Byb2NlZHVyZShJRW51bWVyYWJsZTxQcm9jZWR1cmU+IFByb2MpDQoJew0KCQlib29sPyBhXyhQcm9jZWR1cmUgUCkNCgkJew0KCQkJdmFyIGNfID0gY29udGV4dC5PcGVyYXRvcnMuQ29udmVydDxzdHJpbmc+KFA/LlN0YXR1c0VsZW1lbnQpOw0KCQkJdmFyIGRfID0gbmV3IHN0cmluZ1tdDQoJCQl7DQoJCQkJImNvbXBsZXRlZCIsDQoJCQkJImluLXByb2dyZXNzIiwNCgkJCX07DQoJCQl2YXIgZV8gPSBjb250ZXh0Lk9wZXJhdG9ycy5Jbkxpc3Q8c3RyaW5nPihjXywgKGRfIGFzIElFbnVtZXJhYmxlPHN0cmluZz4pKTsNCg0KCQkJcmV0dXJuIGVfOw0KCQl9Ow0KCQl2YXIgYl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5XaGVyZU9yTnVsbDxQcm9jZWR1cmU+KFByb2MsIGFfKTsNCg0KCQlyZXR1cm4gYl87DQoJfQ0KDQp9"
    }
  ]
}