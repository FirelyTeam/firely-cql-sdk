{
  "resourceType": "Library",
  "id": "NCQAHospice-1.0.0",
  "version": "1.0.0",
  "name": "NCQAHospice",
  "status": "active",
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "1970-01-01T00:00:00.0000000Z",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "FHIRHelpers-4.0.001"
    },
    {
      "type": "depends-on",
      "resource": "NCQAFHIRBase-1.0.0"
    },
    {
      "type": "depends-on",
      "resource": "NCQAStatus-1.0.0"
    }
  ],
  "parameter": [
    {
      "name": "Measurement Period",
      "use": "in",
      "min": 1,
      "max": "1",
      "type": "Period"
    },
    {
      "name": "Hospice Intervention or Encounter",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "boolean"
    },
    {
      "name": "https://www.ncqa.org/fhir/valueset/2.16.840.1.113883.3.464.1004.1761",
      "use": "in",
      "type": "ValueSet"
    },
    {
      "name": "https://www.ncqa.org/fhir/valueset/2.16.840.1.113883.3.464.1004.1762",
      "use": "in",
      "type": "ValueSet"
    }
  ],
  "content": [
    {
      "id": "NCQAHospice-1.0.0+elm",
      "contentType": "application/elm+json",
      "data": ""
    },
    {
      "id": "NCQAHospice-1.0.0+cql",
      "contentType": "text/cql",
      "data": "bGlicmFyeSBOQ1FBSG9zcGljZSB2ZXJzaW9uICcxLjAuMCcNCg0KdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScNCg0KaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMDAxJyBjYWxsZWQgRkhJUkhlbHBlcnMNCmluY2x1ZGUgTkNRQUZISVJCYXNlIHZlcnNpb24gJzEuMC4wJyBjYWxsZWQgTkNRQUZISVJCYXNlDQppbmNsdWRlIE5DUUFTdGF0dXMgdmVyc2lvbiAnMS4wLjAnIGNhbGxlZCBTdGF0dXMNCg0KdmFsdWVzZXQgIkhvc3BpY2UgRW5jb3VudGVyIjonaHR0cHM6Ly93d3cubmNxYS5vcmcvZmhpci92YWx1ZXNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDA0LjE3NjEnDQp2YWx1ZXNldCAiSG9zcGljZSBJbnRlcnZlbnRpb24iOiAnaHR0cHM6Ly93d3cubmNxYS5vcmcvZmhpci92YWx1ZXNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDA0LjE3NjInDQoNCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlVGltZT4NCg0KY29udGV4dCBQYXRpZW50DQoNCmRlZmluZSAiSG9zcGljZSBJbnRlcnZlbnRpb24gb3IgRW5jb3VudGVyIjoNCmV4aXN0cyAoKFN0YXR1cy4iQ29tcGxldGVkIG9yIE9uZ29pbmcgUHJvY2VkdXJlIihbUHJvY2VkdXJlOiJIb3NwaWNlIEludGVydmVudGlvbiJdKSkgSG9zcGljZUludA0KICAgICAgICB3aGVyZSBOQ1FBRkhJUkJhc2UuIk5vcm1hbGl6ZSBJbnRlcnZhbCIoSG9zcGljZUludC5wZXJmb3JtZWQpIG92ZXJsYXBzICJNZWFzdXJlbWVudCBQZXJpb2QiDQopDQpvciBleGlzdHMgKChTdGF0dXMuIkZpbmlzaGVkIEVuY291bnRlciIoWyJFbmNvdW50ZXIiOiAiSG9zcGljZSBFbmNvdW50ZXIiXSkpIEhvc3BpY2VFbmMNCiAgICAgICAgIHdoZXJlIE5DUUFGSElSQmFzZS4iTm9ybWFsaXplIEludGVydmFsIiAoSG9zcGljZUVuYy5wZXJpb2QpIG92ZXJsYXBzICJNZWFzdXJlbWVudCBQZXJpb2QiDQopDQo="
    },
    {
      "id": "NCQAHospice-1.0.0+dll",
      "contentType": "application/octet-stream",
      "data": "
    },
    {
      "id": "NCQAHospice-1.0.0+csharp",
      "contentType": "text/plain",
      "data": "dXNpbmcgU3lzdGVtOw0KdXNpbmcgU3lzdGVtLkxpbnE7DQp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsNCnVzaW5nIEhsNy5DcWwuUnVudGltZTsNCnVzaW5nIEhsNy5DcWwuUHJpbWl0aXZlczsNCnVzaW5nIEhsNy5DcWwuQWJzdHJhY3Rpb25zOw0KdXNpbmcgSGw3LkNxbC5WYWx1ZVNldHM7DQp1c2luZyBIbDcuQ3FsLklzbzg2MDE7DQp1c2luZyBIbDcuRmhpci5Nb2RlbDsNCnVzaW5nIFJhbmdlID0gSGw3LkZoaXIuTW9kZWwuUmFuZ2U7DQp1c2luZyBUYXNrID0gSGw3LkZoaXIuTW9kZWwuVGFzazsNCltTeXN0ZW0uQ29kZURvbS5Db21waWxlci5HZW5lcmF0ZWRDb2RlKCIuTkVUIENvZGUgR2VuZXJhdGlvbiIsICIxLjAuMC4wIildDQpbQ3FsTGlicmFyeSgiTkNRQUhvc3BpY2UiLCAiMS4wLjAiKV0NCnB1YmxpYyBjbGFzcyBOQ1FBSG9zcGljZV8xXzBfMA0Kew0KDQoNCiAgICBpbnRlcm5hbCBDcWxDb250ZXh0IGNvbnRleHQ7DQoNCiAgICAjcmVnaW9uIENhY2hlZCB2YWx1ZXMNCg0KICAgIGludGVybmFsIExhenk8Q3FsVmFsdWVTZXQ+IF9fSG9zcGljZV9FbmNvdW50ZXI7DQogICAgaW50ZXJuYWwgTGF6eTxDcWxWYWx1ZVNldD4gX19Ib3NwaWNlX0ludGVydmVudGlvbjsNCiAgICBpbnRlcm5hbCBMYXp5PENxbEludGVydmFsPENxbERhdGVUaW1lPj4gX19NZWFzdXJlbWVudF9QZXJpb2Q7DQogICAgaW50ZXJuYWwgTGF6eTxQYXRpZW50PiBfX1BhdGllbnQ7DQogICAgaW50ZXJuYWwgTGF6eTxib29sPz4gX19Ib3NwaWNlX0ludGVydmVudGlvbl9vcl9FbmNvdW50ZXI7DQoNCiAgICAjZW5kcmVnaW9uDQogICAgcHVibGljIE5DUUFIb3NwaWNlXzFfMF8wKENxbENvbnRleHQgY29udGV4dCkNCiAgICB7DQogICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQgPz8gdGhyb3cgbmV3IEFyZ3VtZW50TnVsbEV4Y2VwdGlvbigiY29udGV4dCIpOw0KDQogICAgICAgIEZISVJIZWxwZXJzXzRfMF8wMDEgPSBuZXcgRkhJUkhlbHBlcnNfNF8wXzAwMShjb250ZXh0KTsNCiAgICAgICAgTkNRQUZISVJCYXNlXzFfMF8wID0gbmV3IE5DUUFGSElSQmFzZV8xXzBfMChjb250ZXh0KTsNCiAgICAgICAgTkNRQVN0YXR1c18xXzBfMCA9IG5ldyBOQ1FBU3RhdHVzXzFfMF8wKGNvbnRleHQpOw0KDQogICAgICAgIF9fSG9zcGljZV9FbmNvdW50ZXIgPSBuZXcgTGF6eTxDcWxWYWx1ZVNldD4odGhpcy5Ib3NwaWNlX0VuY291bnRlcl9WYWx1ZSk7DQogICAgICAgIF9fSG9zcGljZV9JbnRlcnZlbnRpb24gPSBuZXcgTGF6eTxDcWxWYWx1ZVNldD4odGhpcy5Ib3NwaWNlX0ludGVydmVudGlvbl9WYWx1ZSk7DQogICAgICAgIF9fTWVhc3VyZW1lbnRfUGVyaW9kID0gbmV3IExhenk8Q3FsSW50ZXJ2YWw8Q3FsRGF0ZVRpbWU+Pih0aGlzLk1lYXN1cmVtZW50X1BlcmlvZF9WYWx1ZSk7DQogICAgICAgIF9fUGF0aWVudCA9IG5ldyBMYXp5PFBhdGllbnQ+KHRoaXMuUGF0aWVudF9WYWx1ZSk7DQogICAgICAgIF9fSG9zcGljZV9JbnRlcnZlbnRpb25fb3JfRW5jb3VudGVyID0gbmV3IExhenk8Ym9vbD8+KHRoaXMuSG9zcGljZV9JbnRlcnZlbnRpb25fb3JfRW5jb3VudGVyX1ZhbHVlKTsNCiAgICB9DQogICAgI3JlZ2lvbiBEZXBlbmRlbmNpZXMNCg0KICAgIHB1YmxpYyBGSElSSGVscGVyc180XzBfMDAxIEZISVJIZWxwZXJzXzRfMF8wMDEgeyBnZXQ7IH0NCiAgICBwdWJsaWMgTkNRQUZISVJCYXNlXzFfMF8wIE5DUUFGSElSQmFzZV8xXzBfMCB7IGdldDsgfQ0KICAgIHB1YmxpYyBOQ1FBU3RhdHVzXzFfMF8wIE5DUUFTdGF0dXNfMV8wXzAgeyBnZXQ7IH0NCg0KICAgICNlbmRyZWdpb24NCg0KCXByaXZhdGUgQ3FsVmFsdWVTZXQgSG9zcGljZV9FbmNvdW50ZXJfVmFsdWUoKSA9PiANCgkJbmV3IENxbFZhbHVlU2V0KCJodHRwczovL3d3dy5uY3FhLm9yZy9maGlyL3ZhbHVlc2V0LzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDQuMTc2MSIsIG51bGwpOw0KDQogICAgW0NxbERlY2xhcmF0aW9uKCJIb3NwaWNlIEVuY291bnRlciIpXQ0KICAgIFtDcWxWYWx1ZVNldCgiaHR0cHM6Ly93d3cubmNxYS5vcmcvZmhpci92YWx1ZXNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDA0LjE3NjEiKV0NCglwdWJsaWMgQ3FsVmFsdWVTZXQgSG9zcGljZV9FbmNvdW50ZXIoKSA9PiANCgkJX19Ib3NwaWNlX0VuY291bnRlci5WYWx1ZTsNCg0KCXByaXZhdGUgQ3FsVmFsdWVTZXQgSG9zcGljZV9JbnRlcnZlbnRpb25fVmFsdWUoKSA9PiANCgkJbmV3IENxbFZhbHVlU2V0KCJodHRwczovL3d3dy5uY3FhLm9yZy9maGlyL3ZhbHVlc2V0LzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDQuMTc2MiIsIG51bGwpOw0KDQogICAgW0NxbERlY2xhcmF0aW9uKCJIb3NwaWNlIEludGVydmVudGlvbiIpXQ0KICAgIFtDcWxWYWx1ZVNldCgiaHR0cHM6Ly93d3cubmNxYS5vcmcvZmhpci92YWx1ZXNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDA0LjE3NjIiKV0NCglwdWJsaWMgQ3FsVmFsdWVTZXQgSG9zcGljZV9JbnRlcnZlbnRpb24oKSA9PiANCgkJX19Ib3NwaWNlX0ludGVydmVudGlvbi5WYWx1ZTsNCg0KCXByaXZhdGUgQ3FsSW50ZXJ2YWw8Q3FsRGF0ZVRpbWU+IE1lYXN1cmVtZW50X1BlcmlvZF9WYWx1ZSgpDQoJew0KCQl2YXIgYV8gPSBjb250ZXh0LlJlc29sdmVQYXJhbWV0ZXIoIk5DUUFIb3NwaWNlLTEuMC4wIiwgIk1lYXN1cmVtZW50IFBlcmlvZCIsIG51bGwpOw0KDQoJCXJldHVybiAoQ3FsSW50ZXJ2YWw8Q3FsRGF0ZVRpbWU+KWFfOw0KCX0NCg0KICAgIFtDcWxEZWNsYXJhdGlvbigiTWVhc3VyZW1lbnQgUGVyaW9kIildDQoJcHVibGljIENxbEludGVydmFsPENxbERhdGVUaW1lPiBNZWFzdXJlbWVudF9QZXJpb2QoKSA9PiANCgkJX19NZWFzdXJlbWVudF9QZXJpb2QuVmFsdWU7DQoNCglwcml2YXRlIFBhdGllbnQgUGF0aWVudF9WYWx1ZSgpDQoJew0KCQl2YXIgYV8gPSBjb250ZXh0Lk9wZXJhdG9ycy5SZXRyaWV2ZUJ5VmFsdWVTZXQ8UGF0aWVudD4obnVsbCwgbnVsbCk7DQoJCXZhciBiXyA9IGNvbnRleHQuT3BlcmF0b3JzLlNpbmdsZU9yTnVsbDxQYXRpZW50PihhXyk7DQoNCgkJcmV0dXJuIGJfOw0KCX0NCg0KICAgIFtDcWxEZWNsYXJhdGlvbigiUGF0aWVudCIpXQ0KCXB1YmxpYyBQYXRpZW50IFBhdGllbnQoKSA9PiANCgkJX19QYXRpZW50LlZhbHVlOw0KDQoJcHJpdmF0ZSBib29sPyBIb3NwaWNlX0ludGVydmVudGlvbl9vcl9FbmNvdW50ZXJfVmFsdWUoKQ0KCXsNCgkJdmFyIGFfID0gdGhpcy5Ib3NwaWNlX0ludGVydmVudGlvbigpOw0KCQl2YXIgYl8gPSBjb250ZXh0Lk9wZXJhdG9ycy5SZXRyaWV2ZUJ5VmFsdWVTZXQ8UHJvY2VkdXJlPihhXywgbnVsbCk7DQoJCXZhciBjXyA9IE5DUUFTdGF0dXNfMV8wXzAuQ29tcGxldGVkX29yX09uZ29pbmdfUHJvY2VkdXJlKGJfKTsNCgkJYm9vbD8gZF8oUHJvY2VkdXJlIEhvc3BpY2VJbnQpDQoJCXsNCgkJCXZhciBuXyA9IE5DUUFGSElSQmFzZV8xXzBfMC5Ob3JtYWxpemVfSW50ZXJ2YWwoSG9zcGljZUludD8uUGVyZm9ybWVkKTsNCgkJCXZhciBvXyA9IHRoaXMuTWVhc3VyZW1lbnRfUGVyaW9kKCk7DQoJCQl2YXIgcF8gPSBjb250ZXh0Lk9wZXJhdG9ycy5PdmVybGFwcyhuXywgb18sIG51bGwpOw0KDQoJCQlyZXR1cm4gcF87DQoJCX07DQoJCXZhciBlXyA9IGNvbnRleHQuT3BlcmF0b3JzLldoZXJlT3JOdWxsPFByb2NlZHVyZT4oY18sIGRfKTsNCgkJdmFyIGZfID0gY29udGV4dC5PcGVyYXRvcnMuRXhpc3RzSW5MaXN0PFByb2NlZHVyZT4oZV8pOw0KCQl2YXIgZ18gPSB0aGlzLkhvc3BpY2VfRW5jb3VudGVyKCk7DQoJCXZhciBoXyA9IGNvbnRleHQuT3BlcmF0b3JzLlJldHJpZXZlQnlWYWx1ZVNldDxFbmNvdW50ZXI+KGdfLCBudWxsKTsNCgkJdmFyIGlfID0gTkNRQVN0YXR1c18xXzBfMC5GaW5pc2hlZF9FbmNvdW50ZXIoaF8pOw0KCQlib29sPyBqXyhFbmNvdW50ZXIgSG9zcGljZUVuYykNCgkJew0KCQkJdmFyIHFfID0gTkNRQUZISVJCYXNlXzFfMF8wLk5vcm1hbGl6ZV9JbnRlcnZhbCgoSG9zcGljZUVuYz8uUGVyaW9kIGFzIG9iamVjdCkpOw0KCQkJdmFyIHJfID0gdGhpcy5NZWFzdXJlbWVudF9QZXJpb2QoKTsNCgkJCXZhciBzXyA9IGNvbnRleHQuT3BlcmF0b3JzLk92ZXJsYXBzKHFfLCByXywgbnVsbCk7DQoNCgkJCXJldHVybiBzXzsNCgkJfTsNCgkJdmFyIGtfID0gY29udGV4dC5PcGVyYXRvcnMuV2hlcmVPck51bGw8RW5jb3VudGVyPihpXywgal8pOw0KCQl2YXIgbF8gPSBjb250ZXh0Lk9wZXJhdG9ycy5FeGlzdHNJbkxpc3Q8RW5jb3VudGVyPihrXyk7DQoJCXZhciBtXyA9IGNvbnRleHQuT3BlcmF0b3JzLk9yKGZfLCBsXyk7DQoNCgkJcmV0dXJuIG1fOw0KCX0NCg0KICAgIFtDcWxEZWNsYXJhdGlvbigiSG9zcGljZSBJbnRlcnZlbnRpb24gb3IgRW5jb3VudGVyIildDQoJcHVibGljIGJvb2w/IEhvc3BpY2VfSW50ZXJ2ZW50aW9uX29yX0VuY291bnRlcigpID0+IA0KCQlfX0hvc3BpY2VfSW50ZXJ2ZW50aW9uX29yX0VuY291bnRlci5WYWx1ZTsNCg0KfQ=="
    }
  ]
}