{
  "resourceType": "Library",
  "id": "VTEFHIR4-4.8.000",
  "version": "4.8.000",
  "name": "VTEFHIR4",
  "status": "active",
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "1970-01-01T00:00:00.0000000Z",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "MATGlobalCommonFunctionsFHIR4-6.1.000"
    },
    {
      "type": "depends-on",
      "resource": "FHIRHelpers-4.0.001"
    }
  ],
  "parameter": [
    {
      "name": "Measurement Period",
      "use": "in",
      "min": 0,
      "max": "1",
      "type": "Period"
    },
    {
      "name": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1029.206",
      "use": "in",
      "type": "ValueSet"
    }
  ],
  "content": [
    {
      "id": "VTEFHIR4-4.8.000+elm",
      "contentType": "application/elm+json",
      "data": ""
    },
    {
      "id": "VTEFHIR4-4.8.000+cql",
      "contentType": "text/cql",
      "data": "bGlicmFyeSBWVEVGSElSNCB2ZXJzaW9uICc0LjguMDAwJw0KDQp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlIE1BVEdsb2JhbENvbW1vbkZ1bmN0aW9uc0ZISVI0IHZlcnNpb24gJzYuMS4wMDAnIGNhbGxlZCBHbG9iYWwNCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjAwMScgY2FsbGVkIEZISVJIZWxwZXJzDQoNCnZhbHVlc2V0ICJJbnRlbnNpdmUgQ2FyZSBVbml0IjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMTAyOS4yMDYnIA0KDQpwYXJhbWV0ZXIgIk1lYXN1cmVtZW50IFBlcmlvZCIgSW50ZXJ2YWw8RGF0ZVRpbWU+DQogIGRlZmF1bHQgSW50ZXJ2YWxbQDIwMTktMDEtMDFUMDA6MDA6MDAuMCwgQDIwMjAtMDEtMDFUMDA6MDA6MDAuMCkNCg0KY29udGV4dCBQYXRpZW50DQoNCmRlZmluZSBmdW5jdGlvbiAiU3RhcnRPZkZpcnN0SUNVIihFbmNvdW50ZXIgRkhJUi5FbmNvdW50ZXIgKToNCiAgc3RhcnQgb2YgIkZpcnN0SUNVTG9jYXRpb25QZXJpb2QiKEVuY291bnRlcikNCg0KZGVmaW5lIGZ1bmN0aW9uICJGaXJzdElDVUxvY2F0aW9uUGVyaW9kIihFbmNvdW50ZXIgRkhJUi5FbmNvdW50ZXIgKToNCiAgIkZpcnN0SW5wYXRpZW50SW50ZW5zaXZlQ2FyZVVuaXQiKEVuY291bnRlcikucGVyaW9kDQoNCmRlZmluZSBmdW5jdGlvbiAiRmlyc3RJbnBhdGllbnRJbnRlbnNpdmVDYXJlVW5pdCIoRW5jb3VudGVyIEZISVIuRW5jb3VudGVyICk6DQogIEZpcnN0KChFbmNvdW50ZXIubG9jYXRpb24pSG9zcGl0YWxMb2NhdGlvbg0KICAJCQl3aGVyZSBHbG9iYWwuR2V0TG9jYXRpb24oSG9zcGl0YWxMb2NhdGlvbi5sb2NhdGlvbikudHlwZSBpbiAiSW50ZW5zaXZlIENhcmUgVW5pdCINCiAgCQkJCWFuZCBIb3NwaXRhbExvY2F0aW9uLnBlcmlvZCBkdXJpbmcgRW5jb3VudGVyLnBlcmlvZA0KICAJCQlzb3J0IGJ5IHN0YXJ0IG9mIHBlcmlvZA0KICAJKQ0KDQpkZWZpbmUgZnVuY3Rpb24gIkNhbGVuZGFyRGF5T2ZPckRheUFmdGVyIihTdGFydFZhbHVlIERhdGVUaW1lICk6DQogIEludGVydmFsW2RhdGUgZnJvbSAoIFN0YXJ0VmFsdWUgKSwgZGF0ZSBmcm9tICggU3RhcnRWYWx1ZSApICsgMSBkYXldDQoNCmRlZmluZSBmdW5jdGlvbiAiRnJvbURheU9mU3RhcnRPZkhvc3BpdGFsaXphdGlvblRvRGF5QWZ0ZXJBZG1pc3Npb24iKEVuY291bnRlciBGSElSLkVuY291bnRlciApOg0KICBJbnRlcnZhbFtkYXRlIGZyb20gKCBzdGFydCBvZiBHbG9iYWwuIkhvc3BpdGFsaXphdGlvbldpdGhPYnNlcnZhdGlvbiIgKCBFbmNvdW50ZXIgKSApLCBkYXRlIGZyb20gKCBzdGFydCBvZiBFbmNvdW50ZXIucGVyaW9kICkgKyAxIGRheV0NCg0KZGVmaW5lIGZ1bmN0aW9uICJGcm9tRGF5T2ZTdGFydE9mSG9zcGl0YWxpemF0aW9uVG9EYXlBZnRlckZpcnN0SUNVIihFbmNvdW50ZXIgRkhJUi5FbmNvdW50ZXIgKToNCiAgSW50ZXJ2YWxbZGF0ZSBmcm9tICggc3RhcnQgb2YgR2xvYmFsLiJIb3NwaXRhbGl6YXRpb25XaXRoT2JzZXJ2YXRpb24iICggRW5jb3VudGVyICkgKSwgZGF0ZSBmcm9tICggU3RhcnRPZkZpcnN0SUNVKEVuY291bnRlcikpICsgMSBkYXldDQoNCg=="
    },
    {
      "id": "VTEFHIR4-4.8.000+dll",
      "contentType": "application/octet-stream",
      "data": "
    },
    {
      "id": "VTEFHIR4-4.8.000+csharp",
      "contentType": "text/plain",
      "data": ""
    }
  ]
}