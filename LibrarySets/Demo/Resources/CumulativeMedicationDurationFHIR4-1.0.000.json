{
  "resourceType": "Library",
  "id": "CumulativeMedicationDurationFHIR4-1.0.000",
  "version": "1.0.000",
  "name": "CumulativeMedicationDurationFHIR4",
  "status": "active",
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "1970-01-01 00:00:00Z",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "FHIRHelpers-4.0.001"
    }
  ],
  "parameter": [
    {
      "name": "ErrorLevel",
      "use": "in",
      "min": 0,
      "max": "1",
      "type": "string"
    }
  ],
  "content": [
    {
      "id": "CumulativeMedicationDurationFHIR4-1.0.000+elm",
      "contentType": "application/elm+json",
      "data": "{
   "library" : {
      "annotation" : [ {
         "translatorVersion" : "2.11.0",
         "translatorOptions" : "EnableLocators,EnableResultTypes",
         "type" : "CqlToElmInfo"
      } ],
      "identifier" : {
         "id" : "CumulativeMedicationDurationFHIR4",
         "version" : "1.0.000"
      },
      "schemaIdentifier" : {
         "id" : "urn:hl7-org:elm",
         "version" : "r1"
      },
      "usings" : {
         "def" : [ {
            "localIdentifier" : "System",
            "uri" : "urn:hl7-org:elm-types:r1"
         }, {
            "locator" : "3:1-3:26",
            "localIdentifier" : "FHIR",
            "uri" : "http://hl7.org/fhir",
            "version" : "4.0.1"
         } ]
      },
      "includes" : {
         "def" : [ {
            "locator" : "5:1-5:56",
            "localIdentifier" : "FHIRHelpers",
            "path" : "FHIRHelpers",
            "version" : "4.0.001"
         } ]
      },
      "parameters" : {
         "def" : [ {
            "locator" : "37:1-37:47",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
            "name" : "ErrorLevel",
            "accessLevel" : "Public",
            "default" : {
               "locator" : "37:39-37:47",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
               "valueType" : "{urn:hl7-org:elm-types:r1}String",
               "value" : "Warning",
               "type" : "Literal"
            },
            "parameterTypeSpecifier" : {
               "locator" : "37:24-37:29",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
               "name" : "{urn:hl7-org:elm-types:r1}String",
               "type" : "NamedTypeSpecifier"
            }
         } ]
      },
      "codeSystems" : {
         "def" : [ {
            "locator" : "7:1-7:82",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
            "name" : "V3TimingEvent",
            "id" : "http://terminology.hl7.org/CodeSystem/v3-TimingEvent",
            "accessLevel" : "Public"
         }, {
            "locator" : "8:1-8:60",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
            "name" : "EventTiming",
            "id" : "http://hl7.org/fhir/event-timing",
            "accessLevel" : "Public"
         } ]
      },
      "codes" : {
         "def" : [ {
            "locator" : "10:1-10:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "AC",
            "id" : "AC",
            "display" : "AC",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "10:22-10:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "11:1-11:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "ACD",
            "id" : "ACD",
            "display" : "ACD",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "11:24-11:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "12:1-12:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "ACM",
            "id" : "ACM",
            "display" : "ACM",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "12:24-12:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "13:1-13:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "ACV",
            "id" : "ACV",
            "display" : "ACV",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "13:24-13:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "14:1-14:50",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "AFT",
            "id" : "AFT",
            "display" : "AFT",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "14:24-14:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "15:1-15:68",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "AFT.early",
            "id" : "AFT.early",
            "display" : "AFT.early",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "15:36-15:48",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "16:1-16:65",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "AFT.late",
            "id" : "AFT.late",
            "display" : "AFT.late",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "16:34-16:46",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "17:1-17:46",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "C",
            "id" : "C",
            "display" : "C",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "17:20-17:34",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "18:1-18:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "CD",
            "id" : "CD",
            "display" : "CD",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "18:22-18:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "19:1-19:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "CM",
            "id" : "CM",
            "display" : "CM",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "19:22-19:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "20:1-20:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "CV",
            "id" : "CV",
            "display" : "CV",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "20:22-20:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "21:1-21:50",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "EVE",
            "id" : "EVE",
            "display" : "EVE",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "21:24-21:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "22:1-22:68",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "EVE.early",
            "id" : "EVE.early",
            "display" : "EVE.early",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "22:36-22:48",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "23:1-23:65",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "EVE.late",
            "id" : "EVE.late",
            "display" : "EVE.late",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "23:34-23:46",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "24:1-24:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "HS",
            "id" : "HS",
            "display" : "HS",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "24:22-24:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "25:1-25:53",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "MORN",
            "id" : "MORN",
            "display" : "MORN",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "25:26-25:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "26:1-26:71",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "MORN.early",
            "id" : "MORN.early",
            "display" : "MORN.early",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "26:38-26:50",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "27:1-27:68",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "MORN.late",
            "id" : "MORN.late",
            "display" : "MORN.late",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "27:36-27:48",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "28:1-28:56",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "NIGHT",
            "id" : "NIGHT",
            "display" : "NIGHT",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "28:28-28:40",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "29:1-29:53",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "NOON",
            "id" : "NOON",
            "display" : "NOON",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "29:26-29:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "30:1-30:49",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "PC",
            "id" : "PC",
            "display" : "PC",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "30:22-30:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "31:1-31:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "PCD",
            "id" : "PCD",
            "display" : "PCD",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "31:24-31:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "32:1-32:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "PCM",
            "id" : "PCM",
            "display" : "PCM",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "32:24-32:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "33:1-33:52",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "PCV",
            "id" : "PCV",
            "display" : "PCV",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "33:24-33:38",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         }, {
            "locator" : "34:1-34:50",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "PHS",
            "id" : "PHS",
            "display" : "PHS",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "34:24-34:36",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "EventTiming"
            }
         }, {
            "locator" : "35:1-35:55",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
            "name" : "WAKE",
            "id" : "WAKE",
            "display" : "WAKE",
            "accessLevel" : "Public",
            "codeSystem" : {
               "locator" : "35:26-35:40",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}CodeSystem",
               "name" : "V3TimingEvent"
            }
         } ]
      },
      "contexts" : {
         "def" : [ {
            "locator" : "39:1-39:15",
            "name" : "Patient"
         } ]
      },
      "statements" : {
         "def" : [ {
            "locator" : "39:1-39:15",
            "name" : "Patient",
            "context" : "Patient",
            "expression" : {
               "type" : "SingletonFrom",
               "operand" : {
                  "locator" : "39:1-39:15",
                  "dataType" : "{http://hl7.org/fhir}Patient",
                  "templateId" : "http://hl7.org/fhir/StructureDefinition/Patient",
                  "type" : "Retrieve"
               }
            }
         }, {
            "locator" : "42:1-66:5",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
            "name" : "ToDaily",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "locator" : "43:3-66:5",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
               "type" : "Case",
               "comparand" : {
                  "locator" : "43:8-43:18",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                  "path" : "unit",
                  "type" : "Property",
                  "source" : {
                     "locator" : "43:8-43:13",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "name" : "period",
                     "type" : "OperandRef"
                  }
               },
               "caseItem" : [ {
                  "locator" : "44:5-44:51",
                  "when" : {
                     "locator" : "44:10-44:12",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "h",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "44:19-44:51",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "44:19-44:27",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "name" : "frequency",
                           "type" : "OperandRef"
                        }
                     }, {
                        "locator" : "44:31-44:51",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Divide",
                        "operand" : [ {
                           "locator" : "44:32-44:35",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "value" : "24.0",
                           "type" : "Literal"
                        }, {
                           "locator" : "44:39-44:50",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "path" : "value",
                           "type" : "Property",
                           "source" : {
                              "locator" : "44:39-44:44",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "name" : "period",
                              "type" : "OperandRef"
                           }
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "45:5-45:58",
                  "when" : {
                     "locator" : "45:10-45:14",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "min",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "45:21-45:58",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "45:21-45:53",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "45:21-45:29",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "45:33-45:53",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "45:34-45:37",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "45:41-45:52",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "45:41-45:46",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "45:57-45:58",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "46:5-46:61",
                  "when" : {
                     "locator" : "46:10-46:12",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "s",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "46:19-46:61",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "46:19-46:56",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "locator" : "46:19-46:51",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Multiply",
                           "operand" : [ {
                              "type" : "ToDecimal",
                              "operand" : {
                                 "locator" : "46:19-46:27",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                 "name" : "frequency",
                                 "type" : "OperandRef"
                              }
                           }, {
                              "locator" : "46:31-46:51",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "type" : "Divide",
                              "operand" : [ {
                                 "locator" : "46:32-46:35",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "value" : "24.0",
                                 "type" : "Literal"
                              }, {
                                 "locator" : "46:39-46:50",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "path" : "value",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "46:39-46:44",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "name" : "period",
                                    "type" : "OperandRef"
                                 }
                              } ]
                           } ]
                        }, {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "46:55-46:56",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "60",
                              "type" : "Literal"
                           }
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "46:60-46:61",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "47:5-47:56",
                  "when" : {
                     "locator" : "47:10-47:12",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "d",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "47:19-47:56",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "47:19-47:51",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "47:19-47:27",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "47:31-47:51",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "47:32-47:35",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "47:39-47:50",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "47:39-47:44",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "47:55-47:56",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "24",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "48:5-48:63",
                  "when" : {
                     "locator" : "48:10-48:13",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "wk",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "48:20-48:63",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "48:20-48:52",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "48:20-48:28",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "48:32-48:52",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "48:33-48:36",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "48:40-48:51",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "48:40-48:45",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "48:56-48:63",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "48:57-48:58",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "48:62",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "7",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "49:5-49:64",
                  "when" : {
                     "locator" : "49:10-49:13",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "mo",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "49:20-49:64",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "49:20-49:52",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "49:20-49:28",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "49:32-49:52",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "49:33-49:36",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "49:40-49:51",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "49:40-49:45",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "49:56-49:64",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "49:57-49:58",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "49:62-49:63",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "30",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "50:5-50:64",
                  "when" : {
                     "locator" : "50:10-50:12",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "a",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "50:19-50:64",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "50:19-50:51",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "50:19-50:27",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "50:31-50:51",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "50:32-50:35",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "50:39-50:50",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "50:39-50:44",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "50:55-50:64",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "50:56-50:57",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "50:61-50:63",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "365",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "51:5-51:54",
                  "when" : {
                     "locator" : "51:10-51:15",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "hour",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "51:22-51:54",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "51:22-51:30",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "name" : "frequency",
                           "type" : "OperandRef"
                        }
                     }, {
                        "locator" : "51:34-51:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Divide",
                        "operand" : [ {
                           "locator" : "51:35-51:38",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "value" : "24.0",
                           "type" : "Literal"
                        }, {
                           "locator" : "51:42-51:53",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "path" : "value",
                           "type" : "Property",
                           "source" : {
                              "locator" : "51:42-51:47",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "name" : "period",
                              "type" : "OperandRef"
                           }
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "52:5-52:61",
                  "when" : {
                     "locator" : "52:10-52:17",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "minute",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "52:24-52:61",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "52:24-52:56",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "52:24-52:32",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "52:36-52:56",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "52:37-52:40",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "52:44-52:55",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "52:44-52:49",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "52:60-52:61",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "53:5-53:66",
                  "when" : {
                     "locator" : "53:10-53:17",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "second",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "53:24-53:66",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "53:24-53:61",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "locator" : "53:24-53:56",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Multiply",
                           "operand" : [ {
                              "type" : "ToDecimal",
                              "operand" : {
                                 "locator" : "53:24-53:32",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                 "name" : "frequency",
                                 "type" : "OperandRef"
                              }
                           }, {
                              "locator" : "53:36-53:56",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "type" : "Divide",
                              "operand" : [ {
                                 "locator" : "53:37-53:40",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "value" : "24.0",
                                 "type" : "Literal"
                              }, {
                                 "locator" : "53:44-53:55",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "path" : "value",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "53:44-53:49",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "name" : "period",
                                    "type" : "OperandRef"
                                 }
                              } ]
                           } ]
                        }, {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "53:60-53:61",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "60",
                              "type" : "Literal"
                           }
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "53:65-53:66",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "54:5-54:58",
                  "when" : {
                     "locator" : "54:10-54:14",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "day",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "54:21-54:58",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "54:21-54:53",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "54:21-54:29",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "54:33-54:53",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "54:34-54:37",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "54:41-54:52",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "54:41-54:46",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "54:57-54:58",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "24",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "55:5-55:65",
                  "when" : {
                     "locator" : "55:10-55:15",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "week",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "55:22-55:65",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "55:22-55:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "55:22-55:30",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "55:34-55:54",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "55:35-55:38",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "55:42-55:53",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "55:42-55:47",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "55:58-55:65",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "55:59-55:60",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "55:64",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "7",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "56:5-56:67",
                  "when" : {
                     "locator" : "56:10-56:16",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "month",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "56:23-56:67",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "56:23-56:55",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "56:23-56:31",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "56:35-56:55",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "56:36-56:39",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "56:43-56:54",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "56:43-56:48",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "56:59-56:67",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "56:60-56:61",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "56:65-56:66",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "30",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "57:5-57:67",
                  "when" : {
                     "locator" : "57:10-57:15",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "year",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "57:22-57:67",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "57:22-57:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "57:22-57:30",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "57:34-57:54",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "57:35-57:38",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "57:42-57:53",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "57:42-57:47",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "57:58-57:67",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "57:59-57:60",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "57:64-57:66",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "365",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "58:5-58:55",
                  "when" : {
                     "locator" : "58:10-58:16",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "hours",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "58:23-58:55",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "58:23-58:31",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "name" : "frequency",
                           "type" : "OperandRef"
                        }
                     }, {
                        "locator" : "58:35-58:55",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Divide",
                        "operand" : [ {
                           "locator" : "58:36-58:39",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "value" : "24.0",
                           "type" : "Literal"
                        }, {
                           "locator" : "58:43-58:54",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "path" : "value",
                           "type" : "Property",
                           "source" : {
                              "locator" : "58:43-58:48",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "name" : "period",
                              "type" : "OperandRef"
                           }
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "59:5-59:62",
                  "when" : {
                     "locator" : "59:10-59:18",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "minutes",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "59:25-59:62",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "59:25-59:57",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "59:25-59:33",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "59:37-59:57",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "59:38-59:41",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "59:45-59:56",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "59:45-59:50",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "59:61-59:62",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "60:5-60:67",
                  "when" : {
                     "locator" : "60:10-60:18",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "seconds",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "60:25-60:67",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Multiply",
                     "operand" : [ {
                        "locator" : "60:25-60:62",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "locator" : "60:25-60:57",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Multiply",
                           "operand" : [ {
                              "type" : "ToDecimal",
                              "operand" : {
                                 "locator" : "60:25-60:33",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                 "name" : "frequency",
                                 "type" : "OperandRef"
                              }
                           }, {
                              "locator" : "60:37-60:57",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "type" : "Divide",
                              "operand" : [ {
                                 "locator" : "60:38-60:41",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "value" : "24.0",
                                 "type" : "Literal"
                              }, {
                                 "locator" : "60:45-60:56",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                 "path" : "value",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "60:45-60:50",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "name" : "period",
                                    "type" : "OperandRef"
                                 }
                              } ]
                           } ]
                        }, {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "60:61-60:62",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "60",
                              "type" : "Literal"
                           }
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "60:66-60:67",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "60",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "61:5-61:59",
                  "when" : {
                     "locator" : "61:10-61:15",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "days",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "61:22-61:59",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "61:22-61:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "61:22-61:30",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "61:34-61:54",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "61:35-61:38",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "61:42-61:53",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "61:42-61:47",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "61:58-61:59",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                           "value" : "24",
                           "type" : "Literal"
                        }
                     } ]
                  }
               }, {
                  "locator" : "62:5-62:66",
                  "when" : {
                     "locator" : "62:10-62:16",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "weeks",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "62:23-62:66",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "62:23-62:55",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "62:23-62:31",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "62:35-62:55",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "62:36-62:39",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "62:43-62:54",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "62:43-62:48",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "62:59-62:66",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "62:60-62:61",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "62:65",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "7",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "63:5-63:68",
                  "when" : {
                     "locator" : "63:10-63:17",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "months",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "63:24-63:68",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "63:24-63:56",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "63:24-63:32",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "63:36-63:56",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "63:37-63:40",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "63:44-63:55",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "63:44-63:49",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "63:60-63:68",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "63:61-63:62",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "63:66-63:67",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "30",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               }, {
                  "locator" : "64:5-64:68",
                  "when" : {
                     "locator" : "64:10-64:16",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                     "valueType" : "{urn:hl7-org:elm-types:r1}String",
                     "value" : "years",
                     "type" : "Literal"
                  },
                  "then" : {
                     "locator" : "64:23-64:68",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Divide",
                     "operand" : [ {
                        "locator" : "64:23-64:55",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "type" : "Multiply",
                        "operand" : [ {
                           "type" : "ToDecimal",
                           "operand" : {
                              "locator" : "64:23-64:31",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "name" : "frequency",
                              "type" : "OperandRef"
                           }
                        }, {
                           "locator" : "64:35-64:55",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                           "type" : "Divide",
                           "operand" : [ {
                              "locator" : "64:36-64:39",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "value" : "24.0",
                              "type" : "Literal"
                           }, {
                              "locator" : "64:43-64:54",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                              "path" : "value",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "64:43-64:48",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           } ]
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "64:59-64:68",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Multiply",
                           "operand" : [ {
                              "locator" : "64:60-64:61",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "24",
                              "type" : "Literal"
                           }, {
                              "locator" : "64:65-64:67",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                              "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                              "value" : "365",
                              "type" : "Literal"
                           } ]
                        }
                     } ]
                  }
               } ],
               "else" : {
                  "asType" : "{urn:hl7-org:elm-types:r1}Decimal",
                  "type" : "As",
                  "operand" : {
                     "locator" : "65:10-65:103",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                     "type" : "Message",
                     "source" : {
                        "locator" : "65:18-65:21",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                        "type" : "Null"
                     },
                     "condition" : {
                        "locator" : "65:24-65:27",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "valueType" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "value" : "true",
                        "type" : "Literal"
                     },
                     "code" : {
                        "locator" : "65:30-65:59",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String",
                        "value" : "CMDLogic.ToDaily.UnknownUnit",
                        "type" : "Literal"
                     },
                     "severity" : {
                        "locator" : "65:62-65:71",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "name" : "ErrorLevel",
                        "type" : "ParameterRef"
                     },
                     "message" : {
                        "locator" : "65:74-65:102",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "type" : "Concatenate",
                        "operand" : [ {
                           "type" : "Coalesce",
                           "operand" : [ {
                              "locator" : "65:74-65:88",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "Unknown unit ",
                              "type" : "Literal"
                           }, {
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "",
                              "type" : "Literal"
                           } ]
                        }, {
                           "type" : "Coalesce",
                           "operand" : [ {
                              "locator" : "65:92-65:102",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                              "path" : "unit",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "65:92-65:97",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "period",
                                 "type" : "OperandRef"
                              }
                           }, {
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "",
                              "type" : "Literal"
                           } ]
                        } ]
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "frequency",
               "operandTypeSpecifier" : {
                  "locator" : "42:37-42:50",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                  "name" : "{urn:hl7-org:elm-types:r1}Integer",
                  "type" : "NamedTypeSpecifier"
               }
            }, {
               "name" : "period",
               "operandTypeSpecifier" : {
                  "locator" : "42:60-42:74",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "name" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "72:1-77:5",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
            "name" : "ToDaily",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "locator" : "73:3-77:5",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
               "type" : "Case",
               "comparand" : {
                  "locator" : "73:8-73:16",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
                  "name" : "frequency",
                  "type" : "OperandRef"
               },
               "caseItem" : [ {
                  "locator" : "74:5-74:21",
                  "when" : {
                     "locator" : "74:10-74:12",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
                     "name" : "C",
                     "type" : "CodeRef"
                  },
                  "then" : {
                     "locator" : "74:19-74:21",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "value" : "3.0",
                     "type" : "Literal"
                  }
               } ],
               "else" : {
                  "asType" : "{urn:hl7-org:elm-types:r1}Decimal",
                  "type" : "As",
                  "operand" : {
                     "locator" : "76:10-76:125",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                     "type" : "Message",
                     "source" : {
                        "locator" : "76:18-76:21",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                        "type" : "Null"
                     },
                     "condition" : {
                        "locator" : "76:24-76:27",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "valueType" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "value" : "true",
                        "type" : "Literal"
                     },
                     "code" : {
                        "locator" : "76:30-76:68",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "valueType" : "{urn:hl7-org:elm-types:r1}String",
                        "value" : "CMDLogic.ToDaily.UnknownFrequencyCode",
                        "type" : "Literal"
                     },
                     "severity" : {
                        "locator" : "76:71-76:80",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "name" : "ErrorLevel",
                        "type" : "ParameterRef"
                     },
                     "message" : {
                        "locator" : "76:83-76:124",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                        "type" : "Concatenate",
                        "operand" : [ {
                           "type" : "Coalesce",
                           "operand" : [ {
                              "locator" : "76:83-76:107",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "Unknown frequency code ",
                              "type" : "Literal"
                           }, {
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "",
                              "type" : "Literal"
                           } ]
                        }, {
                           "type" : "Coalesce",
                           "operand" : [ {
                              "locator" : "76:111-76:124",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                              "path" : "code",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "76:111-76:119",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
                                 "name" : "frequency",
                                 "type" : "OperandRef"
                              }
                           }, {
                              "valueType" : "{urn:hl7-org:elm-types:r1}String",
                              "value" : "",
                              "type" : "Literal"
                           } ]
                        } ]
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "frequency",
               "operandTypeSpecifier" : {
                  "locator" : "72:37-72:40",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Code",
                  "name" : "{urn:hl7-org:elm-types:r1}Code",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "154:1-180:110",
            "name" : "MedicationRequestPeriod",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "resultTypeSpecifier" : {
               "type" : "IntervalTypeSpecifier",
               "pointType" : {
                  "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "type" : "NamedTypeSpecifier"
               }
            },
            "expression" : {
               "locator" : "155:3-180:110",
               "type" : "Query",
               "resultTypeSpecifier" : {
                  "type" : "IntervalTypeSpecifier",
                  "pointType" : {
                     "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "NamedTypeSpecifier"
                  }
               },
               "source" : [ {
                  "locator" : "155:3-155:11",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                  "alias" : "R",
                  "expression" : {
                     "locator" : "155:3-155:9",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                     "name" : "Request",
                     "type" : "OperandRef"
                  }
               } ],
               "let" : [ {
                  "locator" : "157:7-157:48",
                  "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                  "identifier" : "dosage",
                  "expression" : {
                     "locator" : "157:15-157:48",
                     "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                     "type" : "SingletonFrom",
                     "operand" : {
                        "locator" : "157:30-157:48",
                        "path" : "dosageInstruction",
                        "scope" : "R",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "name" : "{http://hl7.org/fhir}Dosage",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     }
                  }
               }, {
                  "locator" : "158:7-158:52",
                  "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                  "identifier" : "doseAndRate",
                  "expression" : {
                     "locator" : "158:20-158:52",
                     "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                     "type" : "SingletonFrom",
                     "operand" : {
                        "locator" : "158:35-158:52",
                        "path" : "doseAndRate",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "name" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                              "type" : "NamedTypeSpecifier"
                           }
                        },
                        "source" : {
                           "locator" : "158:35-158:40",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                           "name" : "dosage",
                           "type" : "QueryLetRef"
                        }
                     }
                  }
               }, {
                  "locator" : "159:7-159:42",
                  "resultTypeName" : "{http://hl7.org/fhir}Range",
                  "identifier" : "doseRange",
                  "expression" : {
                     "locator" : "159:18-159:42",
                     "resultTypeName" : "{http://hl7.org/fhir}Range",
                     "strict" : false,
                     "type" : "As",
                     "operand" : {
                        "locator" : "159:18-159:33",
                        "path" : "dose",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}Range",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}SimpleQuantity",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        },
                        "source" : {
                           "locator" : "159:18-159:28",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                           "name" : "doseAndRate",
                           "type" : "QueryLetRef"
                        }
                     },
                     "asTypeSpecifier" : {
                        "locator" : "159:38-159:42",
                        "resultTypeName" : "{http://hl7.org/fhir}Range",
                        "name" : "{http://hl7.org/fhir}Range",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }, {
                  "locator" : "160:7-160:54",
                  "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                  "identifier" : "doseQuantity",
                  "expression" : {
                     "locator" : "160:21-160:54",
                     "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                     "strict" : false,
                     "type" : "As",
                     "operand" : {
                        "locator" : "160:21-160:36",
                        "path" : "dose",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}Range",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}SimpleQuantity",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        },
                        "source" : {
                           "locator" : "160:21-160:31",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                           "name" : "doseAndRate",
                           "type" : "QueryLetRef"
                        }
                     },
                     "asTypeSpecifier" : {
                        "locator" : "160:41-160:54",
                        "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                        "name" : "{http://hl7.org/fhir}SimpleQuantity",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }, {
                  "locator" : "161:7-161:52",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "identifier" : "dose",
                  "expression" : {
                     "locator" : "161:13-161:52",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "161:22-161:37",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                        "type" : "End",
                        "operand" : {
                           "name" : "ToInterval",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "161:29-161:37",
                              "resultTypeName" : "{http://hl7.org/fhir}Range",
                              "name" : "doseRange",
                              "type" : "QueryLetRef"
                           } ]
                        }
                     }, {
                        "name" : "ToQuantity",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "locator" : "161:40-161:51",
                           "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                           "name" : "doseQuantity",
                           "type" : "QueryLetRef"
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "162:7-162:27",
                  "resultTypeName" : "{http://hl7.org/fhir}Timing",
                  "identifier" : "timing",
                  "expression" : {
                     "locator" : "162:15-162:27",
                     "resultTypeName" : "{http://hl7.org/fhir}Timing",
                     "path" : "timing",
                     "type" : "Property",
                     "source" : {
                        "locator" : "162:15-162:20",
                        "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                        "name" : "dosage",
                        "type" : "QueryLetRef"
                     }
                  }
               }, {
                  "locator" : "163:7-163:78",
                  "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                  "identifier" : "frequency",
                  "expression" : {
                     "locator" : "163:18-163:78",
                     "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "163:27-163:52",
                        "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                        "path" : "frequencyMax",
                        "type" : "Property",
                        "source" : {
                           "locator" : "163:27-163:39",
                           "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                           "path" : "repeat",
                           "type" : "Property",
                           "source" : {
                              "locator" : "163:27-163:32",
                              "resultTypeName" : "{http://hl7.org/fhir}Timing",
                              "name" : "timing",
                              "type" : "QueryLetRef"
                           }
                        }
                     }, {
                        "locator" : "163:55-163:77",
                        "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                        "path" : "frequency",
                        "type" : "Property",
                        "source" : {
                           "locator" : "163:55-163:67",
                           "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                           "path" : "repeat",
                           "type" : "Property",
                           "source" : {
                              "locator" : "163:55-163:60",
                              "resultTypeName" : "{http://hl7.org/fhir}Timing",
                              "name" : "timing",
                              "type" : "QueryLetRef"
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "164:7-164:99",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "identifier" : "period",
                  "expression" : {
                     "locator" : "164:15-164:99",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "classType" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "type" : "Instance",
                     "element" : [ {
                        "name" : "value",
                        "value" : {
                           "name" : "ToDecimal",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "164:40-164:59",
                              "resultTypeName" : "{http://hl7.org/fhir}decimal",
                              "path" : "period",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "164:40-164:52",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "164:40-164:45",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           } ]
                        }
                     }, {
                        "name" : "unit",
                        "value" : {
                           "locator" : "164:68-164:97",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                           "path" : "value",
                           "type" : "Property",
                           "source" : {
                              "locator" : "164:68-164:91",
                              "resultTypeName" : "{http://hl7.org/fhir}UnitsOfTime",
                              "path" : "periodUnit",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "164:68-164:80",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "164:68-164:73",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "165:7-165:92",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                  "identifier" : "dosesPerDay",
                  "expression" : {
                     "locator" : "165:20-165:92",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "165:29-165:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "name" : "ToDaily",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "name" : "ToInteger",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "165:37-165:45",
                              "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                              "name" : "frequency",
                              "type" : "QueryLetRef"
                           } ]
                        }, {
                           "locator" : "165:48-165:53",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                           "name" : "period",
                           "type" : "QueryLetRef"
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "165:57-165:86",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Count",
                           "source" : {
                              "locator" : "165:63-165:85",
                              "path" : "timeOfDay",
                              "type" : "Property",
                              "resultTypeSpecifier" : {
                                 "type" : "ListTypeSpecifier",
                                 "elementType" : {
                                    "name" : "{http://hl7.org/fhir}time",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              },
                              "source" : {
                                 "locator" : "165:63-165:75",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "165:63-165:68",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           }
                        }
                     }, {
                        "locator" : "165:89-165:91",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "value" : "1.0",
                        "type" : "Literal"
                     } ]
                  }
               }, {
                  "locator" : "166:7-166:50",
                  "resultTypeName" : "{http://hl7.org/fhir}Period",
                  "identifier" : "boundsPeriod",
                  "expression" : {
                     "locator" : "166:21-166:50",
                     "resultTypeName" : "{http://hl7.org/fhir}Period",
                     "strict" : false,
                     "type" : "As",
                     "operand" : {
                        "locator" : "166:21-166:40",
                        "path" : "bounds",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}Duration",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}Range",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}Period",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        },
                        "source" : {
                           "locator" : "166:21-166:33",
                           "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                           "path" : "repeat",
                           "type" : "Property",
                           "source" : {
                              "locator" : "166:21-166:26",
                              "resultTypeName" : "{http://hl7.org/fhir}Timing",
                              "name" : "timing",
                              "type" : "QueryLetRef"
                           }
                        }
                     },
                     "asTypeSpecifier" : {
                        "locator" : "166:45-166:50",
                        "resultTypeName" : "{http://hl7.org/fhir}Period",
                        "name" : "{http://hl7.org/fhir}Period",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }, {
                  "locator" : "167:7-167:58",
                  "resultTypeName" : "{http://hl7.org/fhir}Duration",
                  "identifier" : "daysSupply",
                  "expression" : {
                     "locator" : "167:19-167:58",
                     "resultTypeName" : "{http://hl7.org/fhir}Duration",
                     "path" : "expectedSupplyDuration",
                     "type" : "Property",
                     "source" : {
                        "locator" : "167:19-167:35",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest.DispenseRequest",
                        "path" : "dispenseRequest",
                        "scope" : "R",
                        "type" : "Property"
                     }
                  }
               }, {
                  "locator" : "168:7-168:42",
                  "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                  "identifier" : "quantity",
                  "expression" : {
                     "locator" : "168:17-168:42",
                     "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                     "path" : "quantity",
                     "type" : "Property",
                     "source" : {
                        "locator" : "168:17-168:33",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest.DispenseRequest",
                        "path" : "dispenseRequest",
                        "scope" : "R",
                        "type" : "Property"
                     }
                  }
               }, {
                  "locator" : "169:7-169:68",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                  "identifier" : "refills",
                  "expression" : {
                     "locator" : "169:16-169:68",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "name" : "ToInteger",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "locator" : "169:25-169:64",
                           "resultTypeName" : "{http://hl7.org/fhir}unsignedInt",
                           "path" : "numberOfRepeatsAllowed",
                           "type" : "Property",
                           "source" : {
                              "locator" : "169:25-169:41",
                              "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest.DispenseRequest",
                              "path" : "dispenseRequest",
                              "scope" : "R",
                              "type" : "Property"
                           }
                        } ]
                     }, {
                        "locator" : "169:67",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                        "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                        "value" : "0",
                        "type" : "Literal"
                     } ]
                  }
               }, {
                  "locator" : "170:7-175:9",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "identifier" : "startDate",
                  "expression" : {
                     "locator" : "171:9-175:9",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "172:11-172:31",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "Start",
                        "operand" : {
                           "name" : "ToInterval",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "172:20-172:31",
                              "resultTypeName" : "{http://hl7.org/fhir}Period",
                              "name" : "boundsPeriod",
                              "type" : "QueryLetRef"
                           } ]
                        }
                     }, {
                        "locator" : "173:11-173:51",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "Start",
                        "operand" : {
                           "name" : "ToInterval",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "173:20-173:51",
                              "resultTypeName" : "{http://hl7.org/fhir}Period",
                              "path" : "validityPeriod",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "173:20-173:36",
                                 "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest.DispenseRequest",
                                 "path" : "dispenseRequest",
                                 "scope" : "R",
                                 "type" : "Property"
                              }
                           } ]
                        }
                     }, {
                        "name" : "ToDateTime",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "locator" : "174:11-174:22",
                           "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                           "path" : "authoredOn",
                           "scope" : "R",
                           "type" : "Property"
                        } ]
                     } ]
                  }
               } ],
               "relationship" : [ ],
               "return" : {
                  "locator" : "176:5-180:110",
                  "resultTypeSpecifier" : {
                     "type" : "IntervalTypeSpecifier",
                     "pointType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "expression" : {
                     "locator" : "177:7-180:110",
                     "type" : "If",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "condition" : {
                        "locator" : "177:10-177:84",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "type" : "Not",
                        "operand" : {
                           "locator" : "177:14-177:84",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                           "type" : "Or",
                           "operand" : [ {
                              "locator" : "177:15-177:41",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "IsNull",
                              "operand" : {
                                 "locator" : "177:15-177:33",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "End",
                                 "operand" : {
                                    "name" : "ToInterval",
                                    "libraryName" : "FHIRHelpers",
                                    "type" : "FunctionRef",
                                    "operand" : [ {
                                       "locator" : "177:22-177:33",
                                       "resultTypeName" : "{http://hl7.org/fhir}Period",
                                       "name" : "boundsPeriod",
                                       "type" : "QueryLetRef"
                                    } ]
                                 }
                              }
                           }, {
                              "locator" : "177:46-177:83",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "Equal",
                              "operand" : [ {
                                 "locator" : "177:46-177:64",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "End",
                                 "operand" : {
                                    "name" : "ToInterval",
                                    "libraryName" : "FHIRHelpers",
                                    "type" : "FunctionRef",
                                    "operand" : [ {
                                       "locator" : "177:53-177:64",
                                       "resultTypeName" : "{http://hl7.org/fhir}Period",
                                       "name" : "boundsPeriod",
                                       "type" : "QueryLetRef"
                                    } ]
                                 }
                              }, {
                                 "locator" : "177:68-177:83",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "valueType" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "MaxValue"
                              } ]
                           } ]
                        }
                     },
                     "then" : {
                        "locator" : "178:9-178:48",
                        "lowClosed" : true,
                        "highClosed" : true,
                        "type" : "Interval",
                        "resultTypeSpecifier" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        },
                        "low" : {
                           "locator" : "178:18-178:26",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "name" : "startDate",
                           "type" : "QueryLetRef"
                        },
                        "high" : {
                           "locator" : "178:29-178:47",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "End",
                           "operand" : {
                              "name" : "ToInterval",
                              "libraryName" : "FHIRHelpers",
                              "type" : "FunctionRef",
                              "operand" : [ {
                                 "locator" : "178:36-178:47",
                                 "resultTypeName" : "{http://hl7.org/fhir}Period",
                                 "name" : "boundsPeriod",
                                 "type" : "QueryLetRef"
                              } ]
                           }
                        }
                     },
                     "else" : {
                        "locator" : "180:9-180:110",
                        "lowClosed" : true,
                        "highClosed" : true,
                        "type" : "Interval",
                        "resultTypeSpecifier" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        },
                        "low" : {
                           "locator" : "180:18-180:26",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "name" : "startDate",
                           "type" : "QueryLetRef"
                        },
                        "high" : {
                           "locator" : "180:29-180:109",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "Add",
                           "operand" : [ {
                              "locator" : "180:29-180:37",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "name" : "startDate",
                              "type" : "QueryLetRef"
                           }, {
                              "locator" : "180:41-180:109",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "type" : "Multiply",
                              "operand" : [ {
                                 "locator" : "180:41-180:93",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "type" : "Coalesce",
                                 "operand" : [ {
                                    "name" : "ToQuantity",
                                    "libraryName" : "FHIRHelpers",
                                    "type" : "FunctionRef",
                                    "operand" : [ {
                                       "locator" : "180:50-180:59",
                                       "resultTypeName" : "{http://hl7.org/fhir}Duration",
                                       "name" : "daysSupply",
                                       "type" : "QueryLetRef"
                                    } ]
                                 }, {
                                    "locator" : "180:62-180:92",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "type" : "Divide",
                                    "operand" : [ {
                                       "name" : "ToQuantity",
                                       "libraryName" : "FHIRHelpers",
                                       "type" : "FunctionRef",
                                       "operand" : [ {
                                          "locator" : "180:62-180:69",
                                          "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                                          "name" : "quantity",
                                          "type" : "QueryLetRef"
                                       } ]
                                    }, {
                                       "locator" : "180:73-180:92",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                       "type" : "Multiply",
                                       "operand" : [ {
                                          "locator" : "180:74-180:77",
                                          "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                          "name" : "dose",
                                          "type" : "QueryLetRef"
                                       }, {
                                          "type" : "ToQuantity",
                                          "operand" : {
                                             "locator" : "180:81-180:91",
                                             "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                             "name" : "dosesPerDay",
                                             "type" : "QueryLetRef"
                                          }
                                       } ]
                                    } ]
                                 } ]
                              }, {
                                 "type" : "ToQuantity",
                                 "operand" : {
                                    "locator" : "180:97-180:109",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                    "type" : "Add",
                                    "operand" : [ {
                                       "locator" : "180:98",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                       "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                                       "value" : "1",
                                       "type" : "Literal"
                                    }, {
                                       "locator" : "180:102-180:108",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                       "name" : "refills",
                                       "type" : "QueryLetRef"
                                    } ]
                                 }
                              } ]
                           } ]
                        }
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "Request",
               "operandTypeSpecifier" : {
                  "locator" : "154:51-154:69",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                  "name" : "{http://hl7.org/fhir}MedicationRequest",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "262:1-280:98",
            "name" : "MedicationDispensePeriod",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "resultTypeSpecifier" : {
               "type" : "IntervalTypeSpecifier",
               "pointType" : {
                  "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "type" : "NamedTypeSpecifier"
               }
            },
            "expression" : {
               "locator" : "263:3-280:98",
               "type" : "Query",
               "resultTypeSpecifier" : {
                  "type" : "IntervalTypeSpecifier",
                  "pointType" : {
                     "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "NamedTypeSpecifier"
                  }
               },
               "source" : [ {
                  "locator" : "263:3-263:12",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                  "alias" : "D",
                  "expression" : {
                     "locator" : "263:3-263:10",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                     "name" : "Dispense",
                     "type" : "OperandRef"
                  }
               } ],
               "let" : [ {
                  "locator" : "265:7-265:48",
                  "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                  "identifier" : "dosage",
                  "expression" : {
                     "locator" : "265:15-265:48",
                     "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                     "type" : "SingletonFrom",
                     "operand" : {
                        "locator" : "265:30-265:48",
                        "path" : "dosageInstruction",
                        "scope" : "D",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "name" : "{http://hl7.org/fhir}Dosage",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     }
                  }
               }, {
                  "locator" : "266:7-266:52",
                  "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                  "identifier" : "doseAndRate",
                  "expression" : {
                     "locator" : "266:20-266:52",
                     "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                     "type" : "SingletonFrom",
                     "operand" : {
                        "locator" : "266:35-266:52",
                        "path" : "doseAndRate",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "name" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                              "type" : "NamedTypeSpecifier"
                           }
                        },
                        "source" : {
                           "locator" : "266:35-266:40",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                           "name" : "dosage",
                           "type" : "QueryLetRef"
                        }
                     }
                  }
               }, {
                  "locator" : "267:7-267:42",
                  "resultTypeName" : "{http://hl7.org/fhir}Range",
                  "identifier" : "doseRange",
                  "expression" : {
                     "locator" : "267:18-267:42",
                     "resultTypeName" : "{http://hl7.org/fhir}Range",
                     "strict" : false,
                     "type" : "As",
                     "operand" : {
                        "locator" : "267:18-267:33",
                        "path" : "dose",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}Range",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}SimpleQuantity",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        },
                        "source" : {
                           "locator" : "267:18-267:28",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                           "name" : "doseAndRate",
                           "type" : "QueryLetRef"
                        }
                     },
                     "asTypeSpecifier" : {
                        "locator" : "267:38-267:42",
                        "resultTypeName" : "{http://hl7.org/fhir}Range",
                        "name" : "{http://hl7.org/fhir}Range",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }, {
                  "locator" : "268:7-268:54",
                  "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                  "identifier" : "doseQuantity",
                  "expression" : {
                     "locator" : "268:21-268:54",
                     "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                     "strict" : false,
                     "type" : "As",
                     "operand" : {
                        "locator" : "268:21-268:36",
                        "path" : "dose",
                        "type" : "Property",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}Range",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}SimpleQuantity",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        },
                        "source" : {
                           "locator" : "268:21-268:31",
                           "resultTypeName" : "{http://hl7.org/fhir}Dosage.DoseAndRate",
                           "name" : "doseAndRate",
                           "type" : "QueryLetRef"
                        }
                     },
                     "asTypeSpecifier" : {
                        "locator" : "268:41-268:54",
                        "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                        "name" : "{http://hl7.org/fhir}SimpleQuantity",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }, {
                  "locator" : "269:7-269:52",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "identifier" : "dose",
                  "expression" : {
                     "locator" : "269:13-269:52",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "269:22-269:37",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                        "type" : "End",
                        "operand" : {
                           "name" : "ToInterval",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "269:29-269:37",
                              "resultTypeName" : "{http://hl7.org/fhir}Range",
                              "name" : "doseRange",
                              "type" : "QueryLetRef"
                           } ]
                        }
                     }, {
                        "name" : "ToQuantity",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "locator" : "269:40-269:51",
                           "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                           "name" : "doseQuantity",
                           "type" : "QueryLetRef"
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "270:7-270:27",
                  "resultTypeName" : "{http://hl7.org/fhir}Timing",
                  "identifier" : "timing",
                  "expression" : {
                     "locator" : "270:15-270:27",
                     "resultTypeName" : "{http://hl7.org/fhir}Timing",
                     "path" : "timing",
                     "type" : "Property",
                     "source" : {
                        "locator" : "270:15-270:20",
                        "resultTypeName" : "{http://hl7.org/fhir}Dosage",
                        "name" : "dosage",
                        "type" : "QueryLetRef"
                     }
                  }
               }, {
                  "locator" : "271:7-271:78",
                  "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                  "identifier" : "frequency",
                  "expression" : {
                     "locator" : "271:18-271:78",
                     "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "271:27-271:52",
                        "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                        "path" : "frequencyMax",
                        "type" : "Property",
                        "source" : {
                           "locator" : "271:27-271:39",
                           "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                           "path" : "repeat",
                           "type" : "Property",
                           "source" : {
                              "locator" : "271:27-271:32",
                              "resultTypeName" : "{http://hl7.org/fhir}Timing",
                              "name" : "timing",
                              "type" : "QueryLetRef"
                           }
                        }
                     }, {
                        "locator" : "271:55-271:77",
                        "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                        "path" : "frequency",
                        "type" : "Property",
                        "source" : {
                           "locator" : "271:55-271:67",
                           "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                           "path" : "repeat",
                           "type" : "Property",
                           "source" : {
                              "locator" : "271:55-271:60",
                              "resultTypeName" : "{http://hl7.org/fhir}Timing",
                              "name" : "timing",
                              "type" : "QueryLetRef"
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "272:7-272:99",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "identifier" : "period",
                  "expression" : {
                     "locator" : "272:15-272:99",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "classType" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "type" : "Instance",
                     "element" : [ {
                        "name" : "value",
                        "value" : {
                           "name" : "ToDecimal",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "272:40-272:59",
                              "resultTypeName" : "{http://hl7.org/fhir}decimal",
                              "path" : "period",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "272:40-272:52",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "272:40-272:45",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           } ]
                        }
                     }, {
                        "name" : "unit",
                        "value" : {
                           "locator" : "272:68-272:97",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                           "path" : "value",
                           "type" : "Property",
                           "source" : {
                              "locator" : "272:68-272:91",
                              "resultTypeName" : "{http://hl7.org/fhir}UnitsOfTime",
                              "path" : "periodUnit",
                              "type" : "Property",
                              "source" : {
                                 "locator" : "272:68-272:80",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "272:68-272:73",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "273:7-273:92",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                  "identifier" : "dosesPerDay",
                  "expression" : {
                     "locator" : "273:20-273:92",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "273:29-273:54",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "name" : "ToDaily",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "name" : "ToInteger",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "273:37-273:45",
                              "resultTypeName" : "{http://hl7.org/fhir}positiveInt",
                              "name" : "frequency",
                              "type" : "QueryLetRef"
                           } ]
                        }, {
                           "locator" : "273:48-273:53",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                           "name" : "period",
                           "type" : "QueryLetRef"
                        } ]
                     }, {
                        "type" : "ToDecimal",
                        "operand" : {
                           "locator" : "273:57-273:86",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "Count",
                           "source" : {
                              "locator" : "273:63-273:85",
                              "path" : "timeOfDay",
                              "type" : "Property",
                              "resultTypeSpecifier" : {
                                 "type" : "ListTypeSpecifier",
                                 "elementType" : {
                                    "name" : "{http://hl7.org/fhir}time",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              },
                              "source" : {
                                 "locator" : "273:63-273:75",
                                 "resultTypeName" : "{http://hl7.org/fhir}Timing.Repeat",
                                 "path" : "repeat",
                                 "type" : "Property",
                                 "source" : {
                                    "locator" : "273:63-273:68",
                                    "resultTypeName" : "{http://hl7.org/fhir}Timing",
                                    "name" : "timing",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           }
                        }
                     }, {
                        "locator" : "273:89-273:91",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "valueType" : "{urn:hl7-org:elm-types:r1}Decimal",
                        "value" : "1.0",
                        "type" : "Literal"
                     } ]
                  }
               }, {
                  "locator" : "274:7-278:9",
                  "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                  "identifier" : "startDate",
                  "expression" : {
                     "locator" : "275:9-278:9",
                     "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                     "type" : "Coalesce",
                     "operand" : [ {
                        "locator" : "276:11-276:26",
                        "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                        "path" : "whenHandedOver",
                        "scope" : "D",
                        "type" : "Property"
                     }, {
                        "locator" : "277:11-277:24",
                        "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                        "path" : "whenPrepared",
                        "scope" : "D",
                        "type" : "Property"
                     } ]
                  }
               } ],
               "relationship" : [ ],
               "return" : {
                  "locator" : "279:5-280:98",
                  "resultTypeSpecifier" : {
                     "type" : "IntervalTypeSpecifier",
                     "pointType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "expression" : {
                     "locator" : "280:9-280:98",
                     "lowClosed" : true,
                     "highClosed" : true,
                     "type" : "Interval",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "low" : {
                        "name" : "ToDateTime",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "locator" : "280:18-280:26",
                           "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                           "name" : "startDate",
                           "type" : "QueryLetRef"
                        } ]
                     },
                     "high" : {
                        "locator" : "280:29-280:97",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "Add",
                        "operand" : [ {
                           "name" : "ToDateTime",
                           "libraryName" : "FHIRHelpers",
                           "type" : "FunctionRef",
                           "operand" : [ {
                              "locator" : "280:29-280:37",
                              "resultTypeName" : "{http://hl7.org/fhir}dateTime",
                              "name" : "startDate",
                              "type" : "QueryLetRef"
                           } ]
                        }, {
                           "locator" : "280:41-280:97",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                           "type" : "Coalesce",
                           "operand" : [ {
                              "name" : "ToQuantity",
                              "libraryName" : "FHIRHelpers",
                              "type" : "FunctionRef",
                              "operand" : [ {
                                 "locator" : "280:50-280:61",
                                 "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                                 "path" : "daysSupply",
                                 "scope" : "D",
                                 "type" : "Property"
                              } ]
                           }, {
                              "locator" : "280:64-280:96",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "type" : "Divide",
                              "operand" : [ {
                                 "name" : "ToQuantity",
                                 "libraryName" : "FHIRHelpers",
                                 "type" : "FunctionRef",
                                 "operand" : [ {
                                    "locator" : "280:64-280:73",
                                    "resultTypeName" : "{http://hl7.org/fhir}SimpleQuantity",
                                    "path" : "quantity",
                                    "scope" : "D",
                                    "type" : "Property"
                                 } ]
                              }, {
                                 "locator" : "280:77-280:96",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "type" : "Multiply",
                                 "operand" : [ {
                                    "locator" : "280:78-280:81",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "name" : "dose",
                                    "type" : "QueryLetRef"
                                 }, {
                                    "type" : "ToQuantity",
                                    "operand" : {
                                       "locator" : "280:85-280:95",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}Decimal",
                                       "name" : "dosesPerDay",
                                       "type" : "QueryLetRef"
                                    }
                                 } ]
                              } ]
                           } ]
                        } ]
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "Dispense",
               "operandTypeSpecifier" : {
                  "locator" : "262:53-262:72",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                  "name" : "{http://hl7.org/fhir}MedicationDispense",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "286:1-287:9",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
            "name" : "TherapeuticDuration",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "locator" : "287:3-287:9",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
               "value" : 14,
               "unit" : "days",
               "type" : "Quantity"
            },
            "operand" : [ {
               "name" : "medication",
               "operandTypeSpecifier" : {
                  "locator" : "286:50-286:56",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Concept",
                  "name" : "{urn:hl7-org:elm-types:r1}Concept",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "306:1-315:12",
            "name" : "MedicationAdministrationPeriod",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "resultTypeSpecifier" : {
               "type" : "IntervalTypeSpecifier",
               "pointType" : {
                  "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "type" : "NamedTypeSpecifier"
               }
            },
            "expression" : {
               "locator" : "307:3-315:12",
               "type" : "Query",
               "resultTypeSpecifier" : {
                  "type" : "IntervalTypeSpecifier",
                  "pointType" : {
                     "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "NamedTypeSpecifier"
                  }
               },
               "source" : [ {
                  "locator" : "307:3-307:18",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                  "alias" : "M",
                  "expression" : {
                     "locator" : "307:3-307:16",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                     "name" : "Administration",
                     "type" : "OperandRef"
                  }
               } ],
               "let" : [ {
                  "locator" : "309:7-309:73",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                  "identifier" : "therapeuticDuration",
                  "expression" : {
                     "locator" : "309:28-309:73",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                     "name" : "TherapeuticDuration",
                     "type" : "FunctionRef",
                     "operand" : [ {
                        "name" : "ToConcept",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "asType" : "{http://hl7.org/fhir}CodeableConcept",
                           "type" : "As",
                           "operand" : {
                              "locator" : "309:48-309:72",
                              "path" : "medication",
                              "type" : "Property",
                              "resultTypeSpecifier" : {
                                 "type" : "ChoiceTypeSpecifier",
                                 "choice" : [ {
                                    "name" : "{http://hl7.org/fhir}CodeableConcept",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}Reference",
                                    "type" : "NamedTypeSpecifier"
                                 } ]
                              },
                              "source" : {
                                 "locator" : "309:48-309:61",
                                 "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "name" : "Administration",
                                 "type" : "OperandRef"
                              }
                           }
                        } ]
                     } ]
                  }
               }, {
                  "locator" : "310:7-310:50",
                  "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "identifier" : "startDate",
                  "expression" : {
                     "locator" : "310:18-310:50",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "Start",
                     "operand" : {
                        "name" : "ToInterval",
                        "libraryName" : "FHIRHelpers",
                        "type" : "FunctionRef",
                        "operand" : [ {
                           "asType" : "{http://hl7.org/fhir}Period",
                           "type" : "As",
                           "operand" : {
                              "locator" : "310:27-310:50",
                              "path" : "effective",
                              "type" : "Property",
                              "resultTypeSpecifier" : {
                                 "type" : "ChoiceTypeSpecifier",
                                 "choice" : [ {
                                    "name" : "{http://hl7.org/fhir}dateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}Period",
                                    "type" : "NamedTypeSpecifier"
                                 } ]
                              },
                              "source" : {
                                 "locator" : "310:27-310:40",
                                 "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "name" : "Administration",
                                 "type" : "OperandRef"
                              }
                           }
                        } ]
                     }
                  }
               } ],
               "relationship" : [ ],
               "return" : {
                  "locator" : "311:5-315:12",
                  "resultTypeSpecifier" : {
                     "type" : "IntervalTypeSpecifier",
                     "pointType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "expression" : {
                     "locator" : "312:7-315:12",
                     "type" : "If",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "condition" : {
                        "locator" : "312:10-312:66",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "type" : "And",
                        "operand" : [ {
                           "locator" : "312:10-312:30",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                           "type" : "Not",
                           "operand" : {
                              "locator" : "312:10-312:30",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "IsNull",
                              "operand" : {
                                 "locator" : "312:10-312:18",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "name" : "startDate",
                                 "type" : "QueryLetRef"
                              }
                           }
                        }, {
                           "locator" : "312:36-312:66",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                           "type" : "Not",
                           "operand" : {
                              "locator" : "312:36-312:66",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "IsNull",
                              "operand" : {
                                 "locator" : "312:36-312:54",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                 "name" : "therapeuticDuration",
                                 "type" : "QueryLetRef"
                              }
                           }
                        } ]
                     },
                     "then" : {
                        "locator" : "313:9-313:60",
                        "lowClosed" : true,
                        "highClosed" : true,
                        "type" : "Interval",
                        "resultTypeSpecifier" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        },
                        "low" : {
                           "locator" : "313:18-313:26",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "name" : "startDate",
                           "type" : "QueryLetRef"
                        },
                        "high" : {
                           "locator" : "313:29-313:59",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "Add",
                           "operand" : [ {
                              "locator" : "313:29-313:37",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "name" : "startDate",
                              "type" : "QueryLetRef"
                           }, {
                              "locator" : "313:41-313:59",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                              "name" : "therapeuticDuration",
                              "type" : "QueryLetRef"
                           } ]
                        }
                     },
                     "else" : {
                        "type" : "As",
                        "operand" : {
                           "locator" : "315:9-315:12",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                           "type" : "Null"
                        },
                        "asTypeSpecifier" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "Administration",
               "operandTypeSpecifier" : {
                  "locator" : "306:65-306:90",
                  "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                  "name" : "{http://hl7.org/fhir}MedicationAdministration",
                  "type" : "NamedTypeSpecifier"
               }
            } ]
         }, {
            "locator" : "327:1-328:99",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
            "name" : "CumulativeDuration",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "locator" : "328:3-328:99",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
               "type" : "Sum",
               "source" : {
                  "locator" : "328:7-328:98",
                  "type" : "Query",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}Integer",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "source" : [ {
                     "locator" : "328:7-328:36",
                     "alias" : "X",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     },
                     "expression" : {
                        "locator" : "328:7-328:34",
                        "type" : "Collapse",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        },
                        "operand" : [ {
                           "locator" : "328:17-328:25",
                           "name" : "Intervals",
                           "type" : "OperandRef",
                           "resultTypeSpecifier" : {
                              "type" : "ListTypeSpecifier",
                              "elementType" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              }
                           }
                        }, {
                           "value" : 1.0,
                           "unit" : "day",
                           "type" : "Quantity"
                        } ]
                     }
                  } ],
                  "relationship" : [ ],
                  "return" : {
                     "locator" : "328:38-328:98",
                     "distinct" : false,
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}Integer",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "expression" : {
                        "locator" : "328:49-328:98",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                        "precision" : "Day",
                        "type" : "DifferenceBetween",
                        "operand" : [ {
                           "locator" : "328:76-328:85",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "Start",
                           "operand" : {
                              "locator" : "328:85",
                              "name" : "X",
                              "type" : "AliasRef",
                              "resultTypeSpecifier" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              }
                           }
                        }, {
                           "locator" : "328:91-328:98",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "End",
                           "operand" : {
                              "locator" : "328:98",
                              "name" : "X",
                              "type" : "AliasRef",
                              "resultTypeSpecifier" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              }
                           }
                        } ]
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "Intervals",
               "operandTypeSpecifier" : {
                  "locator" : "327:48-327:71",
                  "type" : "ListTypeSpecifier",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     }
                  },
                  "elementType" : {
                     "locator" : "327:53-327:70",
                     "type" : "IntervalTypeSpecifier",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "pointType" : {
                        "locator" : "327:62-327:69",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }
            } ]
         }, {
            "locator" : "331:1-340:8",
            "name" : "RolloutIntervals",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "resultTypeSpecifier" : {
               "type" : "ListTypeSpecifier",
               "elementType" : {
                  "type" : "IntervalTypeSpecifier",
                  "pointType" : {
                     "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "NamedTypeSpecifier"
                  }
               }
            },
            "expression" : {
               "locator" : "332:3-340:8",
               "type" : "Query",
               "resultTypeSpecifier" : {
                  "type" : "ListTypeSpecifier",
                  "elementType" : {
                     "type" : "IntervalTypeSpecifier",
                     "pointType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               },
               "source" : [ {
                  "locator" : "332:3-332:13",
                  "alias" : "I",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     }
                  },
                  "expression" : {
                     "locator" : "332:3-332:11",
                     "name" : "intervals",
                     "type" : "OperandRef",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     }
                  }
               } ],
               "relationship" : [ ],
               "aggregate" : {
                  "locator" : "333:5-340:8",
                  "identifier" : "R",
                  "distinct" : false,
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     }
                  },
                  "expression" : {
                     "locator" : "334:7-340:8",
                     "type" : "Union",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     },
                     "operand" : [ {
                        "locator" : "334:7",
                        "name" : "R",
                        "type" : "QueryLetRef",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        }
                     }, {
                        "locator" : "334:15-340:8",
                        "type" : "List",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        },
                        "element" : [ {
                           "locator" : "335:9-339:31",
                           "type" : "Query",
                           "resultTypeSpecifier" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           },
                           "source" : [ {
                              "locator" : "335:9-335:11",
                              "alias" : "X",
                              "resultTypeSpecifier" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              },
                              "expression" : {
                                 "locator" : "335:9",
                                 "name" : "I",
                                 "type" : "AliasRef",
                                 "resultTypeSpecifier" : {
                                    "type" : "IntervalTypeSpecifier",
                                    "pointType" : {
                                       "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                       "type" : "NamedTypeSpecifier"
                                    }
                                 }
                              }
                           } ],
                           "let" : [ {
                              "locator" : "337:13-337:58",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "identifier" : "S",
                              "expression" : {
                                 "locator" : "337:16-337:58",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "Max",
                                 "source" : {
                                    "locator" : "337:20-337:57",
                                    "type" : "List",
                                    "resultTypeSpecifier" : {
                                       "type" : "ListTypeSpecifier",
                                       "elementType" : {
                                          "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                          "type" : "NamedTypeSpecifier"
                                       }
                                    },
                                    "element" : [ {
                                       "locator" : "337:22-337:43",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                       "type" : "Add",
                                       "operand" : [ {
                                          "locator" : "337:22-337:35",
                                          "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                          "type" : "End",
                                          "operand" : {
                                             "locator" : "337:29-337:35",
                                             "type" : "Last",
                                             "resultTypeSpecifier" : {
                                                "type" : "IntervalTypeSpecifier",
                                                "pointType" : {
                                                   "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                                   "type" : "NamedTypeSpecifier"
                                                }
                                             },
                                             "source" : {
                                                "locator" : "337:34",
                                                "name" : "R",
                                                "type" : "QueryLetRef",
                                                "resultTypeSpecifier" : {
                                                   "type" : "ListTypeSpecifier",
                                                   "elementType" : {
                                                      "type" : "IntervalTypeSpecifier",
                                                      "pointType" : {
                                                         "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                                         "type" : "NamedTypeSpecifier"
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }, {
                                          "locator" : "337:39-337:43",
                                          "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                          "value" : 1,
                                          "unit" : "day",
                                          "type" : "Quantity"
                                       } ]
                                    }, {
                                       "locator" : "337:46-337:55",
                                       "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                       "type" : "Start",
                                       "operand" : {
                                          "locator" : "337:55",
                                          "name" : "X",
                                          "type" : "AliasRef",
                                          "resultTypeSpecifier" : {
                                             "type" : "IntervalTypeSpecifier",
                                             "pointType" : {
                                                "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                                "type" : "NamedTypeSpecifier"
                                             }
                                          }
                                       }
                                    } ]
                                 }
                              }
                           }, {
                              "locator" : "338:13-338:93",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "identifier" : "E",
                              "expression" : {
                                 "locator" : "338:16-338:93",
                                 "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "Add",
                                 "operand" : [ {
                                    "locator" : "338:16",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "name" : "S",
                                    "type" : "QueryLetRef"
                                 }, {
                                    "locator" : "338:20-338:93",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "classType" : "{urn:hl7-org:elm-types:r1}Quantity",
                                    "type" : "Instance",
                                    "element" : [ {
                                       "name" : "value",
                                       "value" : {
                                          "type" : "ToDecimal",
                                          "operand" : {
                                             "locator" : "338:45-338:78",
                                             "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                             "type" : "Coalesce",
                                             "operand" : [ {
                                                "locator" : "338:54-338:74",
                                                "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                                "precision" : "Day",
                                                "type" : "DurationBetween",
                                                "operand" : [ {
                                                   "type" : "Start",
                                                   "operand" : {
                                                      "locator" : "338:74",
                                                      "name" : "X",
                                                      "type" : "AliasRef",
                                                      "resultTypeSpecifier" : {
                                                         "type" : "IntervalTypeSpecifier",
                                                         "pointType" : {
                                                            "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                                            "type" : "NamedTypeSpecifier"
                                                         }
                                                      }
                                                   }
                                                }, {
                                                   "type" : "End",
                                                   "operand" : {
                                                      "locator" : "338:74",
                                                      "name" : "X",
                                                      "type" : "AliasRef",
                                                      "resultTypeSpecifier" : {
                                                         "type" : "IntervalTypeSpecifier",
                                                         "pointType" : {
                                                            "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                                            "type" : "NamedTypeSpecifier"
                                                         }
                                                      }
                                                   }
                                                } ]
                                             }, {
                                                "locator" : "338:77",
                                                "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
                                                "valueType" : "{urn:hl7-org:elm-types:r1}Integer",
                                                "value" : "0",
                                                "type" : "Literal"
                                             } ]
                                          }
                                       }
                                    }, {
                                       "name" : "unit",
                                       "value" : {
                                          "locator" : "338:87-338:91",
                                          "resultTypeName" : "{urn:hl7-org:elm-types:r1}String",
                                          "valueType" : "{urn:hl7-org:elm-types:r1}String",
                                          "value" : "day",
                                          "type" : "Literal"
                                       }
                                    } ]
                                 } ]
                              }
                           } ],
                           "relationship" : [ ],
                           "return" : {
                              "locator" : "339:11-339:31",
                              "resultTypeSpecifier" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              },
                              "expression" : {
                                 "locator" : "339:18-339:31",
                                 "lowClosed" : true,
                                 "highClosed" : true,
                                 "type" : "Interval",
                                 "resultTypeSpecifier" : {
                                    "type" : "IntervalTypeSpecifier",
                                    "pointType" : {
                                       "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                       "type" : "NamedTypeSpecifier"
                                    }
                                 },
                                 "low" : {
                                    "locator" : "339:27",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "name" : "S",
                                    "type" : "QueryLetRef"
                                 },
                                 "high" : {
                                    "locator" : "339:30",
                                    "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "name" : "E",
                                    "type" : "QueryLetRef"
                                 }
                              }
                           }
                        } ]
                     } ]
                  },
                  "starting" : {
                     "locator" : "333:21-333:63",
                     "strict" : false,
                     "type" : "As",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     },
                     "operand" : {
                        "locator" : "333:31-333:34",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                        "type" : "Null"
                     },
                     "asTypeSpecifier" : {
                        "locator" : "333:39-333:62",
                        "type" : "ListTypeSpecifier",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        },
                        "elementType" : {
                           "locator" : "333:44-333:61",
                           "type" : "IntervalTypeSpecifier",
                           "resultTypeSpecifier" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           },
                           "pointType" : {
                              "locator" : "333:53-333:60",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "intervals",
               "operandTypeSpecifier" : {
                  "locator" : "331:46-331:69",
                  "type" : "ListTypeSpecifier",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     }
                  },
                  "elementType" : {
                     "locator" : "331:51-331:68",
                     "type" : "IntervalTypeSpecifier",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "pointType" : {
                        "locator" : "331:60-331:67",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }
            } ]
         }, {
            "locator" : "344:1-353:5",
            "name" : "MedicationPeriod",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "resultTypeSpecifier" : {
               "type" : "IntervalTypeSpecifier",
               "pointType" : {
                  "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                  "type" : "NamedTypeSpecifier"
               }
            },
            "expression" : {
               "locator" : "348:3-353:5",
               "type" : "Case",
               "resultTypeSpecifier" : {
                  "type" : "IntervalTypeSpecifier",
                  "pointType" : {
                     "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                     "type" : "NamedTypeSpecifier"
                  }
               },
               "caseItem" : [ {
                  "locator" : "349:5-349:81",
                  "when" : {
                     "locator" : "349:10-349:40",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                     "type" : "Is",
                     "operand" : {
                        "locator" : "349:10-349:19",
                        "name" : "medication",
                        "type" : "OperandRef",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}MedicationRequest",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationDispense",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationAdministration",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        }
                     },
                     "isTypeSpecifier" : {
                        "locator" : "349:24-349:40",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                        "name" : "{http://hl7.org/fhir}MedicationRequest",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "then" : {
                     "locator" : "349:47-349:81",
                     "name" : "MedicationRequestPeriod",
                     "type" : "FunctionRef",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "operand" : [ {
                        "asType" : "{http://hl7.org/fhir}MedicationRequest",
                        "type" : "As",
                        "operand" : {
                           "locator" : "349:71-349:80",
                           "name" : "medication",
                           "type" : "OperandRef",
                           "resultTypeSpecifier" : {
                              "type" : "ChoiceTypeSpecifier",
                              "choice" : [ {
                                 "name" : "{http://hl7.org/fhir}MedicationRequest",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              } ]
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "350:5-350:83",
                  "when" : {
                     "locator" : "350:10-350:41",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                     "type" : "Is",
                     "operand" : {
                        "locator" : "350:10-350:19",
                        "name" : "medication",
                        "type" : "OperandRef",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}MedicationRequest",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationDispense",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationAdministration",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        }
                     },
                     "isTypeSpecifier" : {
                        "locator" : "350:24-350:41",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                        "name" : "{http://hl7.org/fhir}MedicationDispense",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "then" : {
                     "locator" : "350:48-350:83",
                     "name" : "MedicationDispensePeriod",
                     "type" : "FunctionRef",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "operand" : [ {
                        "asType" : "{http://hl7.org/fhir}MedicationDispense",
                        "type" : "As",
                        "operand" : {
                           "locator" : "350:73-350:82",
                           "name" : "medication",
                           "type" : "OperandRef",
                           "resultTypeSpecifier" : {
                              "type" : "ChoiceTypeSpecifier",
                              "choice" : [ {
                                 "name" : "{http://hl7.org/fhir}MedicationRequest",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              } ]
                           }
                        }
                     } ]
                  }
               }, {
                  "locator" : "351:5-351:95",
                  "when" : {
                     "locator" : "351:10-351:47",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                     "type" : "Is",
                     "operand" : {
                        "locator" : "351:10-351:19",
                        "name" : "medication",
                        "type" : "OperandRef",
                        "resultTypeSpecifier" : {
                           "type" : "ChoiceTypeSpecifier",
                           "choice" : [ {
                              "name" : "{http://hl7.org/fhir}MedicationRequest",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationDispense",
                              "type" : "NamedTypeSpecifier"
                           }, {
                              "name" : "{http://hl7.org/fhir}MedicationAdministration",
                              "type" : "NamedTypeSpecifier"
                           } ]
                        }
                     },
                     "isTypeSpecifier" : {
                        "locator" : "351:24-351:47",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                        "name" : "{http://hl7.org/fhir}MedicationAdministration",
                        "type" : "NamedTypeSpecifier"
                     }
                  },
                  "then" : {
                     "locator" : "351:54-351:95",
                     "name" : "MedicationAdministrationPeriod",
                     "type" : "FunctionRef",
                     "resultTypeSpecifier" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "operand" : [ {
                        "asType" : "{http://hl7.org/fhir}MedicationAdministration",
                        "type" : "As",
                        "operand" : {
                           "locator" : "351:85-351:94",
                           "name" : "medication",
                           "type" : "OperandRef",
                           "resultTypeSpecifier" : {
                              "type" : "ChoiceTypeSpecifier",
                              "choice" : [ {
                                 "name" : "{http://hl7.org/fhir}MedicationRequest",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              } ]
                           }
                        }
                     } ]
                  }
               } ],
               "else" : {
                  "type" : "As",
                  "operand" : {
                     "locator" : "352:10-352:13",
                     "resultTypeName" : "{urn:hl7-org:elm-types:r1}Any",
                     "type" : "Null"
                  },
                  "asTypeSpecifier" : {
                     "type" : "IntervalTypeSpecifier",
                     "pointType" : {
                        "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                        "type" : "NamedTypeSpecifier"
                     }
                  }
               }
            },
            "operand" : [ {
               "name" : "medication",
               "operandTypeSpecifier" : {
                  "locator" : "344:47-347:3",
                  "type" : "ChoiceTypeSpecifier",
                  "resultTypeSpecifier" : {
                     "type" : "ChoiceTypeSpecifier",
                     "choice" : [ {
                        "name" : "{http://hl7.org/fhir}MedicationRequest",
                        "type" : "NamedTypeSpecifier"
                     }, {
                        "name" : "{http://hl7.org/fhir}MedicationDispense",
                        "type" : "NamedTypeSpecifier"
                     }, {
                        "name" : "{http://hl7.org/fhir}MedicationAdministration",
                        "type" : "NamedTypeSpecifier"
                     } ]
                  },
                  "choice" : [ {
                     "locator" : "344:54-344:72",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                     "name" : "{http://hl7.org/fhir}MedicationRequest",
                     "type" : "NamedTypeSpecifier"
                  }, {
                     "locator" : "345:5-345:24",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                     "name" : "{http://hl7.org/fhir}MedicationDispense",
                     "type" : "NamedTypeSpecifier"
                  }, {
                     "locator" : "346:5-346:30",
                     "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                     "name" : "{http://hl7.org/fhir}MedicationAdministration",
                     "type" : "NamedTypeSpecifier"
                  } ]
               }
            } ]
         }, {
            "locator" : "366:1-382:3",
            "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
            "name" : "CumulativeMedicationDuration",
            "context" : "Patient",
            "accessLevel" : "Public",
            "type" : "FunctionDef",
            "expression" : {
               "locator" : "370:3-382:3",
               "resultTypeName" : "{urn:hl7-org:elm-types:r1}Integer",
               "name" : "CumulativeDuration",
               "type" : "FunctionRef",
               "operand" : [ {
                  "locator" : "370:22-381:7",
                  "type" : "Union",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "IntervalTypeSpecifier",
                        "pointType" : {
                           "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                           "type" : "NamedTypeSpecifier"
                        }
                     }
                  },
                  "operand" : [ {
                     "locator" : "370:22-374:5",
                     "type" : "Query",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     },
                     "source" : [ {
                        "locator" : "371:7-371:19",
                        "alias" : "M",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "ChoiceTypeSpecifier",
                              "choice" : [ {
                                 "name" : "{http://hl7.org/fhir}MedicationRequest",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              } ]
                           }
                        },
                        "expression" : {
                           "locator" : "371:7-371:17",
                           "name" : "Medications",
                           "type" : "OperandRef",
                           "resultTypeSpecifier" : {
                              "type" : "ListTypeSpecifier",
                              "elementType" : {
                                 "type" : "ChoiceTypeSpecifier",
                                 "choice" : [ {
                                    "name" : "{http://hl7.org/fhir}MedicationRequest",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationDispense",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                    "type" : "NamedTypeSpecifier"
                                 } ]
                              }
                           }
                        }
                     } ],
                     "relationship" : [ ],
                     "where" : {
                        "locator" : "372:9-372:36",
                        "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                        "type" : "Is",
                        "operand" : {
                           "locator" : "372:15",
                           "name" : "M",
                           "type" : "AliasRef",
                           "resultTypeSpecifier" : {
                              "type" : "ChoiceTypeSpecifier",
                              "choice" : [ {
                                 "name" : "{http://hl7.org/fhir}MedicationRequest",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }, {
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              } ]
                           }
                        },
                        "isTypeSpecifier" : {
                           "locator" : "372:20-372:36",
                           "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                           "name" : "{http://hl7.org/fhir}MedicationRequest",
                           "type" : "NamedTypeSpecifier"
                        }
                     },
                     "return" : {
                        "locator" : "373:9-373:34",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        },
                        "expression" : {
                           "locator" : "373:16-373:34",
                           "name" : "MedicationPeriod",
                           "type" : "FunctionRef",
                           "resultTypeSpecifier" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           },
                           "operand" : [ {
                              "locator" : "373:33",
                              "name" : "M",
                              "type" : "AliasRef",
                              "resultTypeSpecifier" : {
                                 "type" : "ChoiceTypeSpecifier",
                                 "choice" : [ {
                                    "name" : "{http://hl7.org/fhir}MedicationRequest",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationDispense",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                    "type" : "NamedTypeSpecifier"
                                 } ]
                              }
                           } ]
                        }
                     }
                  }, {
                     "locator" : "375:13-381:7",
                     "name" : "RolloutIntervals",
                     "type" : "FunctionRef",
                     "resultTypeSpecifier" : {
                        "type" : "ListTypeSpecifier",
                        "elementType" : {
                           "type" : "IntervalTypeSpecifier",
                           "pointType" : {
                              "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                              "type" : "NamedTypeSpecifier"
                           }
                        }
                     },
                     "operand" : [ {
                        "locator" : "377:11-379:38",
                        "type" : "Query",
                        "resultTypeSpecifier" : {
                           "type" : "ListTypeSpecifier",
                           "elementType" : {
                              "type" : "IntervalTypeSpecifier",
                              "pointType" : {
                                 "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }
                        },
                        "source" : [ {
                           "locator" : "377:11-377:23",
                           "alias" : "M",
                           "resultTypeSpecifier" : {
                              "type" : "ListTypeSpecifier",
                              "elementType" : {
                                 "type" : "ChoiceTypeSpecifier",
                                 "choice" : [ {
                                    "name" : "{http://hl7.org/fhir}MedicationRequest",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationDispense",
                                    "type" : "NamedTypeSpecifier"
                                 }, {
                                    "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                    "type" : "NamedTypeSpecifier"
                                 } ]
                              }
                           },
                           "expression" : {
                              "locator" : "377:11-377:21",
                              "name" : "Medications",
                              "type" : "OperandRef",
                              "resultTypeSpecifier" : {
                                 "type" : "ListTypeSpecifier",
                                 "elementType" : {
                                    "type" : "ChoiceTypeSpecifier",
                                    "choice" : [ {
                                       "name" : "{http://hl7.org/fhir}MedicationRequest",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationDispense",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                       "type" : "NamedTypeSpecifier"
                                    } ]
                                 }
                              }
                           }
                        } ],
                        "relationship" : [ ],
                        "where" : {
                           "locator" : "378:13-378:74",
                           "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                           "type" : "Or",
                           "operand" : [ {
                              "locator" : "378:19-378:41",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "Is",
                              "operand" : {
                                 "locator" : "378:19",
                                 "name" : "M",
                                 "type" : "AliasRef",
                                 "resultTypeSpecifier" : {
                                    "type" : "ChoiceTypeSpecifier",
                                    "choice" : [ {
                                       "name" : "{http://hl7.org/fhir}MedicationRequest",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationDispense",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                       "type" : "NamedTypeSpecifier"
                                    } ]
                                 }
                              },
                              "isTypeSpecifier" : {
                                 "locator" : "378:24-378:41",
                                 "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                                 "name" : "{http://hl7.org/fhir}MedicationDispense",
                                 "type" : "NamedTypeSpecifier"
                              }
                           }, {
                              "locator" : "378:46-378:74",
                              "resultTypeName" : "{urn:hl7-org:elm-types:r1}Boolean",
                              "type" : "Is",
                              "operand" : {
                                 "locator" : "378:46",
                                 "name" : "M",
                                 "type" : "AliasRef",
                                 "resultTypeSpecifier" : {
                                    "type" : "ChoiceTypeSpecifier",
                                    "choice" : [ {
                                       "name" : "{http://hl7.org/fhir}MedicationRequest",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationDispense",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                       "type" : "NamedTypeSpecifier"
                                    } ]
                                 }
                              },
                              "isTypeSpecifier" : {
                                 "locator" : "378:51-378:74",
                                 "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                 "type" : "NamedTypeSpecifier"
                              }
                           } ]
                        },
                        "return" : {
                           "locator" : "379:13-379:38",
                           "resultTypeSpecifier" : {
                              "type" : "ListTypeSpecifier",
                              "elementType" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              }
                           },
                           "expression" : {
                              "locator" : "379:20-379:38",
                              "name" : "MedicationPeriod",
                              "type" : "FunctionRef",
                              "resultTypeSpecifier" : {
                                 "type" : "IntervalTypeSpecifier",
                                 "pointType" : {
                                    "name" : "{urn:hl7-org:elm-types:r1}DateTime",
                                    "type" : "NamedTypeSpecifier"
                                 }
                              },
                              "operand" : [ {
                                 "locator" : "379:37",
                                 "name" : "M",
                                 "type" : "AliasRef",
                                 "resultTypeSpecifier" : {
                                    "type" : "ChoiceTypeSpecifier",
                                    "choice" : [ {
                                       "name" : "{http://hl7.org/fhir}MedicationRequest",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationDispense",
                                       "type" : "NamedTypeSpecifier"
                                    }, {
                                       "name" : "{http://hl7.org/fhir}MedicationAdministration",
                                       "type" : "NamedTypeSpecifier"
                                    } ]
                                 }
                              } ]
                           }
                        }
                     } ]
                  } ]
               } ]
            },
            "operand" : [ {
               "name" : "Medications",
               "operandTypeSpecifier" : {
                  "locator" : "366:60-369:4",
                  "type" : "ListTypeSpecifier",
                  "resultTypeSpecifier" : {
                     "type" : "ListTypeSpecifier",
                     "elementType" : {
                        "type" : "ChoiceTypeSpecifier",
                        "choice" : [ {
                           "name" : "{http://hl7.org/fhir}MedicationRequest",
                           "type" : "NamedTypeSpecifier"
                        }, {
                           "name" : "{http://hl7.org/fhir}MedicationDispense",
                           "type" : "NamedTypeSpecifier"
                        }, {
                           "name" : "{http://hl7.org/fhir}MedicationAdministration",
                           "type" : "NamedTypeSpecifier"
                        } ]
                     }
                  },
                  "elementType" : {
                     "locator" : "366:65-369:3",
                     "type" : "ChoiceTypeSpecifier",
                     "resultTypeSpecifier" : {
                        "type" : "ChoiceTypeSpecifier",
                        "choice" : [ {
                           "name" : "{http://hl7.org/fhir}MedicationRequest",
                           "type" : "NamedTypeSpecifier"
                        }, {
                           "name" : "{http://hl7.org/fhir}MedicationDispense",
                           "type" : "NamedTypeSpecifier"
                        }, {
                           "name" : "{http://hl7.org/fhir}MedicationAdministration",
                           "type" : "NamedTypeSpecifier"
                        } ]
                     },
                     "choice" : [ {
                        "locator" : "366:72-366:90",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationRequest",
                        "name" : "{http://hl7.org/fhir}MedicationRequest",
                        "type" : "NamedTypeSpecifier"
                     }, {
                        "locator" : "367:5-367:24",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationDispense",
                        "name" : "{http://hl7.org/fhir}MedicationDispense",
                        "type" : "NamedTypeSpecifier"
                     }, {
                        "locator" : "368:5-368:30",
                        "resultTypeName" : "{http://hl7.org/fhir}MedicationAdministration",
                        "name" : "{http://hl7.org/fhir}MedicationAdministration",
                        "type" : "NamedTypeSpecifier"
                     } ]
                  }
               }
            } ]
         } ]
      }
   }
}

"
    },
    {
      "id": "CumulativeMedicationDurationFHIR4-1.0.000+cql",
      "contentType": "text/cql",
      "data": "library CumulativeMedicationDurationFHIR4 version '1.0.000'

using FHIR version '4.0.1'

include FHIRHelpers version '4.0.001' called FHIRHelpers

codesystem "V3TimingEvent": 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent' 
codesystem "EventTiming": 'http://hl7.org/fhir/event-timing' 

code "AC": 'AC' from "V3TimingEvent" display 'AC'
code "ACD": 'ACD' from "V3TimingEvent" display 'ACD'
code "ACM": 'ACM' from "V3TimingEvent" display 'ACM'
code "ACV": 'ACV' from "V3TimingEvent" display 'ACV'
code "AFT": 'AFT' from "EventTiming" display 'AFT'
code "AFT.early": 'AFT.early' from "EventTiming" display 'AFT.early'
code "AFT.late": 'AFT.late' from "EventTiming" display 'AFT.late'
code "C": 'C' from "V3TimingEvent" display 'C'
code "CD": 'CD' from "V3TimingEvent" display 'CD'
code "CM": 'CM' from "V3TimingEvent" display 'CM'
code "CV": 'CV' from "V3TimingEvent" display 'CV'
code "EVE": 'EVE' from "EventTiming" display 'EVE'
code "EVE.early": 'EVE.early' from "EventTiming" display 'EVE.early'
code "EVE.late": 'EVE.late' from "EventTiming" display 'EVE.late'
code "HS": 'HS' from "V3TimingEvent" display 'HS'
code "MORN": 'MORN' from "EventTiming" display 'MORN'
code "MORN.early": 'MORN.early' from "EventTiming" display 'MORN.early'
code "MORN.late": 'MORN.late' from "EventTiming" display 'MORN.late'
code "NIGHT": 'NIGHT' from "EventTiming" display 'NIGHT'
code "NOON": 'NOON' from "EventTiming" display 'NOON'
code "PC": 'PC' from "V3TimingEvent" display 'PC'
code "PCD": 'PCD' from "V3TimingEvent" display 'PCD'
code "PCM": 'PCM' from "V3TimingEvent" display 'PCM'
code "PCV": 'PCV' from "V3TimingEvent" display 'PCV'
code "PHS": 'PHS' from "EventTiming" display 'PHS'
code "WAKE": 'WAKE' from "V3TimingEvent" display 'WAKE'

parameter "ErrorLevel" String default 'Warning'

context Patient

/*Calculates daily frequency given frequency within a period*/
define function "ToDaily"(frequency System.Integer, period System.Quantity ):
  case period.unit
    when 'h' then frequency * (24.0 / period.value)
    when 'min' then frequency * (24.0 / period.value) * 60
    when 's' then frequency * (24.0 / period.value) * 60 * 60
    when 'd' then frequency * (24.0 / period.value) / 24
    when 'wk' then frequency * (24.0 / period.value) / (24 * 7)
    when 'mo' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */
    when 'a' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */
    when 'hour' then frequency * (24.0 / period.value)
    when 'minute' then frequency * (24.0 / period.value) * 60
    when 'second' then frequency * (24.0 / period.value) * 60 * 60
    when 'day' then frequency * (24.0 / period.value) / 24
    when 'week' then frequency * (24.0 / period.value) / (24 * 7)
    when 'month' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */
    when 'year' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */
    when 'hours' then frequency * (24.0 / period.value)
    when 'minutes' then frequency * (24.0 / period.value) * 60
    when 'seconds' then frequency * (24.0 / period.value) * 60 * 60
    when 'days' then frequency * (24.0 / period.value) / 24
    when 'weeks' then frequency * (24.0 / period.value) / (24 * 7)
    when 'months' then frequency * (24.0 / period.value) / (24 * 30) /* assuming 30 days in month */
    when 'years' then frequency * (24.0 / period.value) / (24 * 365) /* assuming 365 days in year */
    else Message(null, true, 'CMDLogic.ToDaily.UnknownUnit', ErrorLevel, 'Unknown unit ' & period.unit)
  end

/*Returns a daily frequency for the given code representation of frequency.
  The function expects codes from the [EventTiming](http://hl7.org/fhir/codesystem-event-timing.html) or
  [V3TimingEvent](http://hl7.org/fhir/v3/TimingEvent/cs.html) code systems.
  // TODO: Determine whether or not we should use timing.code at all....*/
define function "ToDaily"(frequency Code ):
  case frequency
    when "C" then 3.0
    // etc.
    else Message(null, true, 'CMDLogic.ToDaily.UnknownFrequencyCode', ErrorLevel, 'Unknown frequency code ' & frequency.code)
  end
  
  /*
  Now that we have a ToDaily function, we can approach calculation of the
  duration of medication for an order. First, consider the definitions
  for each element:
  
  * 1 and only 1 dosageInstruction
  * 1 and only 1 doseAndRate
  * 1 timing with 1 repeat
  * frequency, frequencyMax, defaulting to 1
  * period, periodUnit, defaulting to 1 'd'
  * doseQuantity or doseRange
  * timeOfDay
  
  * authoredOn: The date the prescription was written
  * dispenseRequest.validityPeriod: Time period supply is authorized for
  * dispenseRequest.quantity: amount of medication supplied per dispense
  * dispenseRequest.numberOfRepeatsAllowed: number of refills authorized
  * dispenseRequest.expectedSupplyDuration: number of days supply per dispense
  * dosageInstruction.timing.repeat.boundsDuration: total duration of the repeat
  * dosageInstruction.timing.repeat.boundsRange: range of durations of the repeat
  * dosageInstruction.timing.repeat.boundsPeriod: period bounds of the repeat
  * dosageInstruction.timing.repeat.count: number of times to repeat
  * dosageInstruction.timing.repeat.countMax: maximum number of times to repeat
  * dosageInstruction.timing.repeat.frequency: event occurs frequency times per period
  * dosageInstruction.timing.repeat.frequencyMax: event occurs up to frequencyMax times per period
  * dosageInstruction.timing.repeat.period: event occurs frequency times per period
  * dosageInstruction.timing.repeat.periodMax: upper limit of period
  * dosageInstruction.timing.repeat.periodUnit: period duration (s | min | h | d | wk | mo | a)
  * dosageInstruction.timing.repeat.timeOfDay: time of day for the event (0..*)
  * dosageInstruction.timing.repeat.when: event timing (HS | WAKE | C | CM | CD | CV | AC | ACM...)
  * dosageInstruction.timing.code: BID | TID | QID | AM | PM | QD | QOD...
  * dosageInstruction.asNeeded
  * dosageInstruction.doseAndRate.doseQuantity
  * dosageInstruction.doseAndRate.doseRange
  
  If the boundsPeriod is present (and completely specified), we can use that directly
  
    dosage.timing.repeat.boundsPeriod
  
  If expectedSupplyDuration is present, then the duration is
  
    expectedSupplyDuration * (1 + numberOfRepeatsAllowed)
  
  If expectedSupplyDuration is not present, then it must be calculated based on the quantity, dosage, and frequency:
  
    (quantity / (dosage * frequency)) * (1 + numberOfRepeatsAllowed)
  
    dosage: Coalesce(end of doseAndRate.doseRange, doseAndRate.doseQuantity)
    frequency: Coalesce(frequencyMax, frequency)
    period: Quantity(period, periodUnit)
  
  This calculation results in a number of days, which can then be turned into a period by anchoring that to the
  start of the validityPeriod or the authoredOn:
  
    Interval[earliestDispensable, earliestDispensable + expectedSupplyDuration]
  
    earliestDispensable: Coalesce(start of validityPeriod, authoredOn)
  
  The following function illustrates this completely:
  */

/*Calculates the Medication Period for a single MedicationRequest.
MedicationRequest instances provided to this function are expected
to conform to the [MMEMedicationRequest](http://build.fhir.org/ig/cqframework/opioid-mme-r4/StructureDefinition-mmemedicationrequest.html)
profile, which expects:
* 1 and only 1 dosageInstruction, multiple dosageInstruction elements will result in an error
* 1 and only 1 doseAndRate, multiple doseAndRate elements will result in an error
* 1 timing with 1 repeat, missing timing or repeat elements will result in a null
* frequency, frequencyMax, defaulting to 1
* period, periodUnit, defaulting to 1 'd'
* timeOfDay
* doseQuantity or doseRange, missing doseQuantity and doseRange will result in a null
Note that MedicationRequest status is not considered by this calculation, as the
list of MedicationRequest instances provided to this function should already have
considered appropriate statuses, depending on the use case, typically `completed`.*/
define function "MedicationRequestPeriod"(Request "MedicationRequest" ):
  Request R
    let
      dosage: singleton from R.dosageInstruction,
      doseAndRate: singleton from dosage.doseAndRate,
      doseRange: doseAndRate.dose as Range,
      doseQuantity: doseAndRate.dose as SimpleQuantity,
      dose: Coalesce(end of doseRange, doseQuantity),
      timing: dosage.timing,
      frequency: Coalesce(timing.repeat.frequencyMax, timing.repeat.frequency),
      period: System.Quantity { value: timing.repeat.period, unit: timing.repeat.periodUnit.value },
      dosesPerDay: Coalesce(ToDaily(frequency, period), Count(timing.repeat.timeOfDay), 1.0),
      boundsPeriod: timing.repeat.bounds as Period,
      daysSupply: R.dispenseRequest.expectedSupplyDuration,
      quantity: R.dispenseRequest.quantity,
      refills: Coalesce(R.dispenseRequest.numberOfRepeatsAllowed, 0),
      startDate:
        Coalesce(
          start of boundsPeriod,
          start of R.dispenseRequest.validityPeriod,
          R.authoredOn
        )
    return
      if not (end of boundsPeriod is null or end of boundsPeriod = maximum DateTime) then
        Interval[startDate, end of boundsPeriod]
      else
        Interval[startDate, startDate + Coalesce(daysSupply, quantity / (dose * dosesPerDay)) * (1 + refills)]
  
  /*
  Next, consider the MedicationDispense case:
  
  * whenPrepared: When product was prepared
  * whenHandedOver: When product was given out
  * quantity: Amount dispensed
  * daysSupply: Amount of medication expressed as a timing amount
  * dosageInstruction.timing.repeat.boundsDuration: total duration of the repeat
  * dosageInstruction.timing.repeat.boundsRange: range of durations of the repeat
  * dosageInstruction.timing.repeat.boundsPeriod: period bounds of the repeat
  * dosageInstruction.timing.repeat.count: number of times to repeat
  * dosageInstruction.timing.repeat.countMax: maximum number of times to repeat
  * dosageInstruction.timing.repeat.frequency: event occurs frequency times per period
  * dosageInstruction.timing.repeat.frequencyMax: event occurs up to frequencyMax times per period
  * dosageInstruction.timing.repeat.period: event occurs frequency times per period
  * dosageInstruction.timing.repeat.periodMax: upper limit of period
  * dosageInstruction.timing.repeat.periodUnit: period duration (s | min | h | d | wk | mo | a)
  * dosageInstruction.timing.repeat.timeOfDay: time of day for the event (0..*)
  * dosageInstruction.timing.repeat.when: event timing (HS | WAKE | C | CM | CD | CV | AC | ACM...)
  * dosageInstruction.timing.code: BID | TID | QID | AM | PM | QD | QOD...
  * dosageInstruction.asNeeded
  * dosageInstruction.doseAndRate.doseQuantity
  * dosageInstruction.doseAndRate.doseRange
  
  We have effectively the same elements, with the same meanings, with the exception that the
  event is documenting a single dispense, and does not contain refill information. In addition,
  multiple dispense events would typically be present, and those would all have to be considered
  as part of an overall calculation. That will be considered when we combine results, but for
  this function, we'll focus on calculating the duration of a single dispense.
  
  With a MedicationDispense, dosage information is expected to be the same as the related
  MedicationRequest, so boundsPeriod would still cover the entire prescription (including refills)
  and so cannot be used to calculate the interval covered by the dispense.
  
  If the daysSupply element is present, then the duration in days is simply
  
    daysSupply
  
  Note specifically that we are not considering refills, as those would be covered
  by subsequent dispense records.
  
  If daysSupplied is not present, then daysSupplied must be calculated based on
  the quantity, dosage, and frequency:
  
    (quantity / (dosage * frequency))
  
  This calculation results in a number of days, which can then be turned into a
  period by anchoring that to the startDate, as determined by the first available
  value of the start of the boundsPeriod, whenHandedOver, and whenPrepared.
  
   Interval[startDate, startDate + durationInDays]
  */

/*Calculates Medication Period for a given MedicationDispense
MedicationDispense instances provided to this function are expected
to conform to the [TODO: MMEMedicationDispense](http://build.fhir.org/ig/cqframework/opioid-mme-r4/StructureDefinition-mmemedicationdispense.html)
profile, which expects:
* 1 and only 1 dosageInstruction, multiple dosageInstruction elements will result in an error
* 1 and only 1 doseAndRate, multiple doseAndRate elements will result in an error
* 1 timing with 1 repeat, missing timing or repeat elements will result in a null
* frequency, frequencyMax, defaulting to 1
* period, periodUnit, defaulting to 1 'd'
* timeOfDay
* doseQuantity or doseRange, missing doseQuantity and doseRange will result in a null
* whenHandedOver or whenPrepared, if missing both whenHandedOver and whenPrepared will result in a null

Note that MedicationDispense status is not considered by this calculation, as the
list of MedicationDispense instances provided to this function should already have
considered appropriate statuses, depending on the use case, typically `completed`,
especially since whenHandedOver would be expected to be present for a completed
MedicationDispense.

Note also that the dosage information recorded in a dispense is expected to be a copy of the
dispense information from the related medication request. As such, the boundsPeriod would be expected
to cover the entire range, and should _not_ be used for timing of the event.

There is also active discussion in the Pharmacy WG about what date should be used if whenPrepared/whenHandedOver is not present.
This may take the form of an "original creation date", but may also be a "status change date" for dispense events that are updating
status of an existing dispense. That discussion is ongoing, so until that is resolved, this logic will return
null if whenPrepared/whenHandedOver are not available.*/
define function "MedicationDispensePeriod"(Dispense "MedicationDispense" ):
  Dispense D
    let
      dosage: singleton from D.dosageInstruction,
      doseAndRate: singleton from dosage.doseAndRate,
      doseRange: doseAndRate.dose as Range,
      doseQuantity: doseAndRate.dose as SimpleQuantity,
      dose: Coalesce(end of doseRange, doseQuantity),
      timing: dosage.timing,
      frequency: Coalesce(timing.repeat.frequencyMax, timing.repeat.frequency),
      period: System.Quantity { value: timing.repeat.period, unit: timing.repeat.periodUnit.value },
      dosesPerDay: Coalesce(ToDaily(frequency, period), Count(timing.repeat.timeOfDay), 1.0),
      startDate:
        Coalesce(
          D.whenHandedOver,
          D.whenPrepared
        )
    return
        Interval[startDate, startDate + Coalesce(D.daysSupply, D.quantity / (dose * dosesPerDay))]

/*Returns the established therapeutic duration for a given medication.
This is likely measure specific, though could potentially be established for
any drug and distributed as a CodeSystem supplement.
Defaulting to 14 days here for illustration.*/
define function "TherapeuticDuration"(medication Concept ):
  14 days

/*Next we consider MedicationAdministration. This data type is typically used to
capture specific administration, with the relevantPeriod capturing start and stop
time of the administration event:

* effective[x]: Start and end time of administration

However, when calculating cumulative medication duration, it is typically the
therapeutic period of the medication that should be considered. Currently neither
the Medication nor MedicationKnowledge resources provide this information, so
we model it here as a function that can potentially be implemented in a variety
of ways, including measure-specific values, as well as distribution as an RxNorm
code system supplement.

However it is obtained, if therapeutic duration can be obtained, and the effective
period has a start, the result will be

    Interval[startDate, startDate + therapeuticDuration]*/
define function "MedicationAdministrationPeriod"(Administration "MedicationAdministration" ):
  Administration M
    let
      therapeuticDuration: TherapeuticDuration(Administration.medication),
      startDate: start of Administration.effective
    return
      if startDate is not null and therapeuticDuration is not null then
        Interval[startDate, startDate + therapeuticDuration]
      else
        null

/*Now that we have functions for determining the medication period for individual
prescriptions, administrations, and dispenses, we can combine those using
an overall cumulative medication duration calculation.

There are two broad approaches to calculating cumulative duration, one that _collapses_
overlapping intervals so that calculations are not duplicated, and one that _rolls out_
overlapping intervals so that the durations are laid end-to-end.

First, we define a function that simply calculates CumulativeDuration of a set of
intervals:*/
define function "CumulativeDuration"(Intervals List<Interval<DateTime>> ):
  Sum((collapse Intervals per day) X return all difference in days between start of X and end of X)

/*Next, we define a function that rolls out intervals:*/
define function "RolloutIntervals"(intervals List<Interval<DateTime>> ):
  intervals I
    aggregate all R starting (null as List<Interval<DateTime>>):
      R union ({
        I X
          let
            S: Max({ end of Last(R) + 1 day, start of X }),
            E: S + System.Quantity { value: Coalesce(duration in days of X, 0), unit: 'day' }
          return Interval[S, E]
      })

/*Then, we define a function that allows us to calculate based on the various medication
types:*/
define function "MedicationPeriod"(medication Choice<"MedicationRequest",
    "MedicationDispense",
    "MedicationAdministration"
  > ):
  case
    when medication is MedicationRequest then MedicationRequestPeriod(medication)
    when medication is MedicationDispense then MedicationDispensePeriod(medication)
    when medication is MedicationAdministration then MedicationAdministrationPeriod(medication)
    else null
  end

/*We can then use this function, combined with the MedicationDuration functions above
to calculate Cumulative Medication Duration:

Generally speaking, we want to _roll out_ intervals from dispense and administration
events, and then collapse across that result and intervals from prescriptions.

Note also that the separation of medications by type should already be done
by this stage as well.

Calculations that combine dosages from different types of medications (such as Morphine Milligram Equivalent (MME)
or Average MME) require further consideration.*/
define function "CumulativeMedicationDuration"(Medications List<Choice<"MedicationRequest",
    "MedicationDispense",
    "MedicationAdministration"
  >> ):
  CumulativeDuration((
      Medications M
        where M is MedicationRequest
        return MedicationPeriod(M)
    )
      union (
        RolloutIntervals(
          Medications M
            where M is MedicationDispense or M is MedicationAdministration
            return MedicationPeriod(M)
        )
      )
  )

"
    },
    {
      "id": "CumulativeMedicationDurationFHIR4-1.0.000+dll",
      "contentType": "application/octet-stream",
      "data": "
    },
    {
      "id": "CumulativeMedicationDurationFHIR4-1.0.000+csharp",
      "contentType": "text/plain",
      "data": "using System;
using System.Linq;
using System.Collections.Generic;
using Hl7.Cql.Runtime;
using Hl7.Cql.Primitives;
using Hl7.Cql.Abstractions;
using Hl7.Cql.ValueSets;
using Hl7.Cql.Iso8601;
using Hl7.Fhir.Model;
using Range = Hl7.Fhir.Model.Range;
using Task = Hl7.Fhir.Model.Task;
[System.CodeDom.Compiler.GeneratedCode(".NET Code Generation", "1.0.0.0")]
[CqlLibrary("CumulativeMedicationDurationFHIR4", "1.0.000")]
public class CumulativeMedicationDurationFHIR4_1_0_000
{


    internal CqlContext context;

    #region Cached values

    internal Lazy<CqlCode> __AC;
    internal Lazy<CqlCode> __ACD;
    internal Lazy<CqlCode> __ACM;
    internal Lazy<CqlCode> __ACV;
    internal Lazy<CqlCode> __AFT;
    internal Lazy<CqlCode> __AFT_early;
    internal Lazy<CqlCode> __AFT_late;
    internal Lazy<CqlCode> __C;
    internal Lazy<CqlCode> __CD;
    internal Lazy<CqlCode> __CM;
    internal Lazy<CqlCode> __CV;
    internal Lazy<CqlCode> __EVE;
    internal Lazy<CqlCode> __EVE_early;
    internal Lazy<CqlCode> __EVE_late;
    internal Lazy<CqlCode> __HS;
    internal Lazy<CqlCode> __MORN;
    internal Lazy<CqlCode> __MORN_early;
    internal Lazy<CqlCode> __MORN_late;
    internal Lazy<CqlCode> __NIGHT;
    internal Lazy<CqlCode> __NOON;
    internal Lazy<CqlCode> __PC;
    internal Lazy<CqlCode> __PCD;
    internal Lazy<CqlCode> __PCM;
    internal Lazy<CqlCode> __PCV;
    internal Lazy<CqlCode> __PHS;
    internal Lazy<CqlCode> __WAKE;
    internal Lazy<CqlCode[]> __V3TimingEvent;
    internal Lazy<CqlCode[]> __EventTiming;
    internal Lazy<string> __ErrorLevel;
    internal Lazy<Patient> __Patient;

    #endregion
    public CumulativeMedicationDurationFHIR4_1_0_000(CqlContext context)
    {
        this.context = context ?? throw new ArgumentNullException("context");

        FHIRHelpers_4_0_001 = new FHIRHelpers_4_0_001(context);

        __AC = new Lazy<CqlCode>(this.AC_Value);
        __ACD = new Lazy<CqlCode>(this.ACD_Value);
        __ACM = new Lazy<CqlCode>(this.ACM_Value);
        __ACV = new Lazy<CqlCode>(this.ACV_Value);
        __AFT = new Lazy<CqlCode>(this.AFT_Value);
        __AFT_early = new Lazy<CqlCode>(this.AFT_early_Value);
        __AFT_late = new Lazy<CqlCode>(this.AFT_late_Value);
        __C = new Lazy<CqlCode>(this.C_Value);
        __CD = new Lazy<CqlCode>(this.CD_Value);
        __CM = new Lazy<CqlCode>(this.CM_Value);
        __CV = new Lazy<CqlCode>(this.CV_Value);
        __EVE = new Lazy<CqlCode>(this.EVE_Value);
        __EVE_early = new Lazy<CqlCode>(this.EVE_early_Value);
        __EVE_late = new Lazy<CqlCode>(this.EVE_late_Value);
        __HS = new Lazy<CqlCode>(this.HS_Value);
        __MORN = new Lazy<CqlCode>(this.MORN_Value);
        __MORN_early = new Lazy<CqlCode>(this.MORN_early_Value);
        __MORN_late = new Lazy<CqlCode>(this.MORN_late_Value);
        __NIGHT = new Lazy<CqlCode>(this.NIGHT_Value);
        __NOON = new Lazy<CqlCode>(this.NOON_Value);
        __PC = new Lazy<CqlCode>(this.PC_Value);
        __PCD = new Lazy<CqlCode>(this.PCD_Value);
        __PCM = new Lazy<CqlCode>(this.PCM_Value);
        __PCV = new Lazy<CqlCode>(this.PCV_Value);
        __PHS = new Lazy<CqlCode>(this.PHS_Value);
        __WAKE = new Lazy<CqlCode>(this.WAKE_Value);
        __V3TimingEvent = new Lazy<CqlCode[]>(this.V3TimingEvent_Value);
        __EventTiming = new Lazy<CqlCode[]>(this.EventTiming_Value);
        __ErrorLevel = new Lazy<string>(this.ErrorLevel_Value);
        __Patient = new Lazy<Patient>(this.Patient_Value);
    }
    #region Dependencies

    public FHIRHelpers_4_0_001 FHIRHelpers_4_0_001 { get; }

    #endregion

	private CqlCode AC_Value() => 
		new CqlCode("AC", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("AC")]
	public CqlCode AC() => 
		__AC.Value;

	private CqlCode ACD_Value() => 
		new CqlCode("ACD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("ACD")]
	public CqlCode ACD() => 
		__ACD.Value;

	private CqlCode ACM_Value() => 
		new CqlCode("ACM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("ACM")]
	public CqlCode ACM() => 
		__ACM.Value;

	private CqlCode ACV_Value() => 
		new CqlCode("ACV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("ACV")]
	public CqlCode ACV() => 
		__ACV.Value;

	private CqlCode AFT_Value() => 
		new CqlCode("AFT", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("AFT")]
	public CqlCode AFT() => 
		__AFT.Value;

	private CqlCode AFT_early_Value() => 
		new CqlCode("AFT.early", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("AFT.early")]
	public CqlCode AFT_early() => 
		__AFT_early.Value;

	private CqlCode AFT_late_Value() => 
		new CqlCode("AFT.late", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("AFT.late")]
	public CqlCode AFT_late() => 
		__AFT_late.Value;

	private CqlCode C_Value() => 
		new CqlCode("C", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("C")]
	public CqlCode C() => 
		__C.Value;

	private CqlCode CD_Value() => 
		new CqlCode("CD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("CD")]
	public CqlCode CD() => 
		__CD.Value;

	private CqlCode CM_Value() => 
		new CqlCode("CM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("CM")]
	public CqlCode CM() => 
		__CM.Value;

	private CqlCode CV_Value() => 
		new CqlCode("CV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("CV")]
	public CqlCode CV() => 
		__CV.Value;

	private CqlCode EVE_Value() => 
		new CqlCode("EVE", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("EVE")]
	public CqlCode EVE() => 
		__EVE.Value;

	private CqlCode EVE_early_Value() => 
		new CqlCode("EVE.early", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("EVE.early")]
	public CqlCode EVE_early() => 
		__EVE_early.Value;

	private CqlCode EVE_late_Value() => 
		new CqlCode("EVE.late", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("EVE.late")]
	public CqlCode EVE_late() => 
		__EVE_late.Value;

	private CqlCode HS_Value() => 
		new CqlCode("HS", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("HS")]
	public CqlCode HS() => 
		__HS.Value;

	private CqlCode MORN_Value() => 
		new CqlCode("MORN", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("MORN")]
	public CqlCode MORN() => 
		__MORN.Value;

	private CqlCode MORN_early_Value() => 
		new CqlCode("MORN.early", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("MORN.early")]
	public CqlCode MORN_early() => 
		__MORN_early.Value;

	private CqlCode MORN_late_Value() => 
		new CqlCode("MORN.late", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("MORN.late")]
	public CqlCode MORN_late() => 
		__MORN_late.Value;

	private CqlCode NIGHT_Value() => 
		new CqlCode("NIGHT", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("NIGHT")]
	public CqlCode NIGHT() => 
		__NIGHT.Value;

	private CqlCode NOON_Value() => 
		new CqlCode("NOON", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("NOON")]
	public CqlCode NOON() => 
		__NOON.Value;

	private CqlCode PC_Value() => 
		new CqlCode("PC", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("PC")]
	public CqlCode PC() => 
		__PC.Value;

	private CqlCode PCD_Value() => 
		new CqlCode("PCD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("PCD")]
	public CqlCode PCD() => 
		__PCD.Value;

	private CqlCode PCM_Value() => 
		new CqlCode("PCM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("PCM")]
	public CqlCode PCM() => 
		__PCM.Value;

	private CqlCode PCV_Value() => 
		new CqlCode("PCV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("PCV")]
	public CqlCode PCV() => 
		__PCV.Value;

	private CqlCode PHS_Value() => 
		new CqlCode("PHS", "http://hl7.org/fhir/event-timing", null, null);

    [CqlDeclaration("PHS")]
	public CqlCode PHS() => 
		__PHS.Value;

	private CqlCode WAKE_Value() => 
		new CqlCode("WAKE", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null);

    [CqlDeclaration("WAKE")]
	public CqlCode WAKE() => 
		__WAKE.Value;

	private CqlCode[] V3TimingEvent_Value()
	{
		var a_ = new CqlCode[]
		{
			new CqlCode("AC", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("ACD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("ACM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("ACV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("C", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("CD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("CM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("CV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("HS", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("PC", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("PCD", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("PCM", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("PCV", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
			new CqlCode("WAKE", "http://terminology.hl7.org/CodeSystem/v3-TimingEvent", null, null),
		};

		return a_;
	}

    [CqlDeclaration("V3TimingEvent")]
	public CqlCode[] V3TimingEvent() => 
		__V3TimingEvent.Value;

	private CqlCode[] EventTiming_Value()
	{
		var a_ = new CqlCode[]
		{
			new CqlCode("AFT", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("AFT.early", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("AFT.late", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("EVE", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("EVE.early", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("EVE.late", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("MORN", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("MORN.early", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("MORN.late", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("NIGHT", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("NOON", "http://hl7.org/fhir/event-timing", null, null),
			new CqlCode("PHS", "http://hl7.org/fhir/event-timing", null, null),
		};

		return a_;
	}

    [CqlDeclaration("EventTiming")]
	public CqlCode[] EventTiming() => 
		__EventTiming.Value;

	private string ErrorLevel_Value()
	{
		var a_ = context.ResolveParameter("CumulativeMedicationDurationFHIR4-1.0.000", "ErrorLevel", "Warning");

		return (string)a_;
	}

    [CqlDeclaration("ErrorLevel")]
	public string ErrorLevel() => 
		__ErrorLevel.Value;

	private Patient Patient_Value()
	{
		var a_ = context.Operators.RetrieveByValueSet<Patient>(null, null);
		var b_ = context.Operators.SingleOrNull<Patient>(a_);

		return b_;
	}

    [CqlDeclaration("Patient")]
	public Patient Patient() => 
		__Patient.Value;

    [CqlDeclaration("ToDaily")]
	public decimal? ToDaily(int? frequency, CqlQuantity period)
	{
		decimal? a_()
		{
			if ((context.Operators.Equal(period?.unit, "h") ?? false))
			{
				var b_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var c_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var d_ = context.Operators.Multiply(b_, c_);

				return d_;
			}
			else if ((context.Operators.Equal(period?.unit, "min") ?? false))
			{
				var e_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var f_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var g_ = context.Operators.Multiply(e_, f_);
				var h_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var i_ = context.Operators.Multiply(g_, h_);

				return i_;
			}
			else if ((context.Operators.Equal(period?.unit, "s") ?? false))
			{
				var j_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var k_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var l_ = context.Operators.Multiply(j_, k_);
				var m_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var n_ = context.Operators.Multiply(l_, m_);
				var p_ = context.Operators.Multiply(n_, m_);

				return p_;
			}
			else if ((context.Operators.Equal(period?.unit, "d") ?? false))
			{
				var q_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var r_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var s_ = context.Operators.Multiply(q_, r_);
				var t_ = context.Operators.ConvertIntegerToDecimal((int?)24);
				var u_ = context.Operators.Divide(s_, t_);

				return u_;
			}
			else if ((context.Operators.Equal(period?.unit, "wk") ?? false))
			{
				var v_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var w_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var x_ = context.Operators.Multiply(v_, w_);
				var y_ = context.Operators.Multiply((int?)24, (int?)7);
				var z_ = context.Operators.ConvertIntegerToDecimal(y_);
				var aa_ = context.Operators.Divide(x_, z_);

				return aa_;
			}
			else if ((context.Operators.Equal(period?.unit, "mo") ?? false))
			{
				var ab_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ac_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var ad_ = context.Operators.Multiply(ab_, ac_);
				var ae_ = context.Operators.Multiply((int?)24, (int?)30);
				var af_ = context.Operators.ConvertIntegerToDecimal(ae_);
				var ag_ = context.Operators.Divide(ad_, af_);

				return ag_;
			}
			else if ((context.Operators.Equal(period?.unit, "a") ?? false))
			{
				var ah_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ai_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var aj_ = context.Operators.Multiply(ah_, ai_);
				var ak_ = context.Operators.Multiply((int?)24, (int?)365);
				var al_ = context.Operators.ConvertIntegerToDecimal(ak_);
				var am_ = context.Operators.Divide(aj_, al_);

				return am_;
			}
			else if ((context.Operators.Equal(period?.unit, "hour") ?? false))
			{
				var an_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ao_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var ap_ = context.Operators.Multiply(an_, ao_);

				return ap_;
			}
			else if ((context.Operators.Equal(period?.unit, "minute") ?? false))
			{
				var aq_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ar_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var as_ = context.Operators.Multiply(aq_, ar_);
				var at_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var au_ = context.Operators.Multiply(as_, at_);

				return au_;
			}
			else if ((context.Operators.Equal(period?.unit, "second") ?? false))
			{
				var av_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var aw_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var ax_ = context.Operators.Multiply(av_, aw_);
				var ay_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var az_ = context.Operators.Multiply(ax_, ay_);
				var bb_ = context.Operators.Multiply(az_, ay_);

				return bb_;
			}
			else if ((context.Operators.Equal(period?.unit, "day") ?? false))
			{
				var bc_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var bd_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var be_ = context.Operators.Multiply(bc_, bd_);
				var bf_ = context.Operators.ConvertIntegerToDecimal((int?)24);
				var bg_ = context.Operators.Divide(be_, bf_);

				return bg_;
			}
			else if ((context.Operators.Equal(period?.unit, "week") ?? false))
			{
				var bh_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var bi_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var bj_ = context.Operators.Multiply(bh_, bi_);
				var bk_ = context.Operators.Multiply((int?)24, (int?)7);
				var bl_ = context.Operators.ConvertIntegerToDecimal(bk_);
				var bm_ = context.Operators.Divide(bj_, bl_);

				return bm_;
			}
			else if ((context.Operators.Equal(period?.unit, "month") ?? false))
			{
				var bn_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var bo_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var bp_ = context.Operators.Multiply(bn_, bo_);
				var bq_ = context.Operators.Multiply((int?)24, (int?)30);
				var br_ = context.Operators.ConvertIntegerToDecimal(bq_);
				var bs_ = context.Operators.Divide(bp_, br_);

				return bs_;
			}
			else if ((context.Operators.Equal(period?.unit, "year") ?? false))
			{
				var bt_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var bu_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var bv_ = context.Operators.Multiply(bt_, bu_);
				var bw_ = context.Operators.Multiply((int?)24, (int?)365);
				var bx_ = context.Operators.ConvertIntegerToDecimal(bw_);
				var by_ = context.Operators.Divide(bv_, bx_);

				return by_;
			}
			else if ((context.Operators.Equal(period?.unit, "hours") ?? false))
			{
				var bz_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ca_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var cb_ = context.Operators.Multiply(bz_, ca_);

				return cb_;
			}
			else if ((context.Operators.Equal(period?.unit, "minutes") ?? false))
			{
				var cc_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var cd_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var ce_ = context.Operators.Multiply(cc_, cd_);
				var cf_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var cg_ = context.Operators.Multiply(ce_, cf_);

				return cg_;
			}
			else if ((context.Operators.Equal(period?.unit, "seconds") ?? false))
			{
				var ch_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var ci_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var cj_ = context.Operators.Multiply(ch_, ci_);
				var ck_ = context.Operators.ConvertIntegerToDecimal((int?)60);
				var cl_ = context.Operators.Multiply(cj_, ck_);
				var cn_ = context.Operators.Multiply(cl_, ck_);

				return cn_;
			}
			else if ((context.Operators.Equal(period?.unit, "days") ?? false))
			{
				var co_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var cp_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var cq_ = context.Operators.Multiply(co_, cp_);
				var cr_ = context.Operators.ConvertIntegerToDecimal((int?)24);
				var cs_ = context.Operators.Divide(cq_, cr_);

				return cs_;
			}
			else if ((context.Operators.Equal(period?.unit, "weeks") ?? false))
			{
				var ct_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var cu_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var cv_ = context.Operators.Multiply(ct_, cu_);
				var cw_ = context.Operators.Multiply((int?)24, (int?)7);
				var cx_ = context.Operators.ConvertIntegerToDecimal(cw_);
				var cy_ = context.Operators.Divide(cv_, cx_);

				return cy_;
			}
			else if ((context.Operators.Equal(period?.unit, "months") ?? false))
			{
				var cz_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var da_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var db_ = context.Operators.Multiply(cz_, da_);
				var dc_ = context.Operators.Multiply((int?)24, (int?)30);
				var dd_ = context.Operators.ConvertIntegerToDecimal(dc_);
				var de_ = context.Operators.Divide(db_, dd_);

				return de_;
			}
			else if ((context.Operators.Equal(period?.unit, "years") ?? false))
			{
				var df_ = context.Operators.ConvertIntegerToDecimal(frequency);
				var dg_ = context.Operators.Divide((decimal?)24.0m, period?.value);
				var dh_ = context.Operators.Multiply(df_, dg_);
				var di_ = context.Operators.Multiply((int?)24, (int?)365);
				var dj_ = context.Operators.ConvertIntegerToDecimal(di_);
				var dk_ = context.Operators.Divide(dh_, dj_);

				return dk_;
			}
			else
			{
				var dl_ = this.ErrorLevel();
				var dm_ = context.Operators.Concatenate("Unknown unit ", (period?.unit ?? ""));
				var dn_ = context.Operators.Message<object>(null, "CMDLogic.ToDaily.UnknownUnit", dl_, dm_);

				return (decimal?)dn_;
			};
		};

		return a_();
	}

    [CqlDeclaration("ToDaily")]
	public decimal? ToDaily(CqlCode frequency)
	{
		decimal? a_()
		{
			if ((context.Operators.Equal(frequency, this.C()) ?? false))
			{
				return (decimal?)3.0m;
			}
			else
			{
				var b_ = this.ErrorLevel();
				var c_ = context.Operators.Concatenate("Unknown frequency code ", (frequency?.code ?? ""));
				var d_ = context.Operators.Message<object>(null, "CMDLogic.ToDaily.UnknownFrequencyCode", b_, c_);

				return (decimal?)d_;
			};
		};

		return a_();
	}

    [CqlDeclaration("MedicationRequestPeriod")]
	public CqlInterval<CqlDateTime> MedicationRequestPeriod(MedicationRequest Request)
	{
		var a_ = new MedicationRequest[]
		{
			Request,
		};
		CqlInterval<CqlDateTime> b_(MedicationRequest R)
		{
			CqlInterval<CqlDateTime> e_()
			{
				if ((context.Operators.Not(context.Operators.Or((bool?)(context.Operators.End(FHIRHelpers_4_0_001.ToInterval(((((context.Operators.SingleOrNull<Dosage>((R?.DosageInstruction as IEnumerable<Dosage>)))?.Timing)?.Repeat)?.Bounds as Period))) is null), context.Operators.Equal(context.Operators.End(FHIRHelpers_4_0_001.ToInterval(((((context.Operators.SingleOrNull<Dosage>((R?.DosageInstruction as IEnumerable<Dosage>)))?.Timing)?.Repeat)?.Bounds as Period))), context.Operators.Maximum<CqlDateTime>()))) ?? false))
				{
					var f_ = context.Operators.SingleOrNull<Dosage>((R?.DosageInstruction as IEnumerable<Dosage>));
					var g_ = FHIRHelpers_4_0_001.ToInterval((f_?.Timing?.Repeat?.Bounds as Period));
					var h_ = context.Operators.Start(g_);
					var i_ = FHIRHelpers_4_0_001.ToInterval(R?.DispenseRequest?.ValidityPeriod);
					var j_ = context.Operators.Start(i_);
					var k_ = FHIRHelpers_4_0_001.ToDateTime(R?.AuthoredOnElement);
					var m_ = FHIRHelpers_4_0_001.ToInterval((f_?.Timing?.Repeat?.Bounds as Period));
					var n_ = context.Operators.End(m_);
					var o_ = context.Operators.Interval(((h_ ?? j_) ?? k_), n_, true, true);

					return o_;
				}
				else
				{
					var p_ = context.Operators.SingleOrNull<Dosage>((R?.DosageInstruction as IEnumerable<Dosage>));
					var q_ = FHIRHelpers_4_0_001.ToInterval((p_?.Timing?.Repeat?.Bounds as Period));
					var r_ = context.Operators.Start(q_);
					var s_ = FHIRHelpers_4_0_001.ToInterval(R?.DispenseRequest?.ValidityPeriod);
					var t_ = context.Operators.Start(s_);
					var u_ = FHIRHelpers_4_0_001.ToDateTime(R?.AuthoredOnElement);
					var w_ = FHIRHelpers_4_0_001.ToInterval((p_?.Timing?.Repeat?.Bounds as Period));
					var x_ = context.Operators.Start(w_);
					var z_ = context.Operators.Start(s_);
					var ab_ = FHIRHelpers_4_0_001.ToQuantity(R?.DispenseRequest?.ExpectedSupplyDuration);
					var ac_ = FHIRHelpers_4_0_001.ToQuantity(R?.DispenseRequest?.Quantity);
					var ae_ = context.Operators.SingleOrNull<Dosage.DoseAndRateComponent>((p_?.DoseAndRate as IEnumerable<Dosage.DoseAndRateComponent>));
					var af_ = FHIRHelpers_4_0_001.ToInterval((ae_?.Dose as Range));
					var ag_ = context.Operators.End(af_);
					var ai_ = context.Operators.SingleOrNull<Dosage.DoseAndRateComponent>((p_?.DoseAndRate as IEnumerable<Dosage.DoseAndRateComponent>));
					var aj_ = FHIRHelpers_4_0_001.ToQuantity((ai_?.Dose as Quantity));
					var al_ = context.Operators.Convert<Integer>(p_?.Timing?.Repeat?.FrequencyMaxElement);
					var an_ = context.Operators.Convert<Integer>(p_?.Timing?.Repeat?.FrequencyElement);
					var ao_ = FHIRHelpers_4_0_001.ToInteger((al_ ?? an_));
					var aq_ = FHIRHelpers_4_0_001.ToDecimal(p_?.Timing?.Repeat?.PeriodElement);
					var as_ = context.Operators.Convert<string>(p_?.Timing?.Repeat?.PeriodUnitElement?.Value);
					var at_ = this.ToDaily(ao_, new CqlQuantity(aq_, as_));
					var av_ = context.Operators.CountOrNull<Time>((p_?.Timing?.Repeat?.TimeOfDayElement as IEnumerable<Time>));
					var aw_ = context.Operators.ConvertIntegerToDecimal(av_);
					var ax_ = context.Operators.ConvertDecimalToQuantity(((at_ ?? aw_) ?? (decimal?)1.0m));
					var ay_ = context.Operators.Multiply((ag_ ?? aj_), ax_);
					var az_ = context.Operators.Divide(ac_, ay_);
					var ba_ = context.Operators.Convert<Integer>(R?.DispenseRequest?.NumberOfRepeatsAllowedElement);
					var bb_ = FHIRHelpers_4_0_001.ToInteger(ba_);
					var bc_ = context.Operators.Add((int?)1, (bb_ ?? (int?)0));
					var bd_ = context.Operators.ConvertIntegerToQuantity(bc_);
					var be_ = context.Operators.Multiply((ab_ ?? az_), bd_);
					var bf_ = context.Operators.Add(((x_ ?? z_) ?? u_), be_);
					var bg_ = context.Operators.Interval(((r_ ?? t_) ?? u_), bf_, true, true);

					return bg_;
				};
			};

			return e_();
		};
		var c_ = context.Operators.SelectOrNull<MedicationRequest, CqlInterval<CqlDateTime>>(a_, b_);
		var d_ = context.Operators.SingleOrNull<CqlInterval<CqlDateTime>>(c_);

		return d_;
	}

    [CqlDeclaration("MedicationDispensePeriod")]
	public CqlInterval<CqlDateTime> MedicationDispensePeriod(MedicationDispense Dispense)
	{
		var a_ = new MedicationDispense[]
		{
			Dispense,
		};
		CqlInterval<CqlDateTime> b_(MedicationDispense D)
		{
			var e_ = FHIRHelpers_4_0_001.ToDateTime((D?.WhenHandedOverElement ?? D?.WhenPreparedElement));
			var g_ = FHIRHelpers_4_0_001.ToQuantity(D?.DaysSupply);
			var h_ = FHIRHelpers_4_0_001.ToQuantity(D?.Quantity);
			var i_ = context.Operators.SingleOrNull<Dosage>((D?.DosageInstruction as IEnumerable<Dosage>));
			var j_ = context.Operators.SingleOrNull<Dosage.DoseAndRateComponent>((i_?.DoseAndRate as IEnumerable<Dosage.DoseAndRateComponent>));
			var k_ = FHIRHelpers_4_0_001.ToInterval((j_?.Dose as Range));
			var l_ = context.Operators.End(k_);
			var n_ = context.Operators.SingleOrNull<Dosage.DoseAndRateComponent>((i_?.DoseAndRate as IEnumerable<Dosage.DoseAndRateComponent>));
			var o_ = FHIRHelpers_4_0_001.ToQuantity((n_?.Dose as Quantity));
			var q_ = context.Operators.Convert<Integer>(i_?.Timing?.Repeat?.FrequencyMaxElement);
			var s_ = context.Operators.Convert<Integer>(i_?.Timing?.Repeat?.FrequencyElement);
			var t_ = FHIRHelpers_4_0_001.ToInteger((q_ ?? s_));
			var v_ = FHIRHelpers_4_0_001.ToDecimal(i_?.Timing?.Repeat?.PeriodElement);
			var x_ = context.Operators.Convert<string>(i_?.Timing?.Repeat?.PeriodUnitElement?.Value);
			var y_ = this.ToDaily(t_, new CqlQuantity(v_, x_));
			var aa_ = context.Operators.CountOrNull<Time>((i_?.Timing?.Repeat?.TimeOfDayElement as IEnumerable<Time>));
			var ab_ = context.Operators.ConvertIntegerToDecimal(aa_);
			var ac_ = context.Operators.ConvertDecimalToQuantity(((y_ ?? ab_) ?? (decimal?)1.0m));
			var ad_ = context.Operators.Multiply((l_ ?? o_), ac_);
			var ae_ = context.Operators.Divide(h_, ad_);
			var af_ = context.Operators.Add(e_, (g_ ?? ae_));
			var ag_ = context.Operators.Interval(e_, af_, true, true);

			return ag_;
		};
		var c_ = context.Operators.SelectOrNull<MedicationDispense, CqlInterval<CqlDateTime>>(a_, b_);
		var d_ = context.Operators.SingleOrNull<CqlInterval<CqlDateTime>>(c_);

		return d_;
	}

    [CqlDeclaration("TherapeuticDuration")]
	public CqlQuantity TherapeuticDuration(CqlConcept medication)
	{
		var a_ = context.Operators.Quantity(14m, "days");

		return a_;
	}

    [CqlDeclaration("MedicationAdministrationPeriod")]
	public CqlInterval<CqlDateTime> MedicationAdministrationPeriod(MedicationAdministration Administration)
	{
		var a_ = new MedicationAdministration[]
		{
			Administration,
		};
		CqlInterval<CqlDateTime> b_(MedicationAdministration M)
		{
			CqlInterval<CqlDateTime> e_()
			{
				if ((context.Operators.And(context.Operators.Not((bool?)(context.Operators.Start(FHIRHelpers_4_0_001.ToInterval((Administration?.Effective as Period))) is null)), context.Operators.Not((bool?)(this.TherapeuticDuration(FHIRHelpers_4_0_001.ToConcept((Administration?.Medication as CodeableConcept))) is null))) ?? false))
				{
					var f_ = FHIRHelpers_4_0_001.ToInterval((Administration?.Effective as Period));
					var g_ = context.Operators.Start(f_);
					var i_ = context.Operators.Start(f_);
					var j_ = FHIRHelpers_4_0_001.ToConcept((Administration?.Medication as CodeableConcept));
					var k_ = this.TherapeuticDuration(j_);
					var l_ = context.Operators.Add(i_, k_);
					var m_ = context.Operators.Interval(g_, l_, true, true);

					return m_;
				}
				else
				{
					CqlInterval<CqlDateTime> n_ = null;

					return (n_ as CqlInterval<CqlDateTime>);
				};
			};

			return e_();
		};
		var c_ = context.Operators.SelectOrNull<MedicationAdministration, CqlInterval<CqlDateTime>>(a_, b_);
		var d_ = context.Operators.SingleOrNull<CqlInterval<CqlDateTime>>(c_);

		return d_;
	}

    [CqlDeclaration("CumulativeDuration")]
	public int? CumulativeDuration(IEnumerable<CqlInterval<CqlDateTime>> Intervals)
	{
		var a_ = context.Operators.Collapse(Intervals, "day");
		int? b_(CqlInterval<CqlDateTime> X)
		{
			var e_ = context.Operators.Start(X);
			var f_ = context.Operators.End(X);
			var g_ = context.Operators.DifferenceBetween(e_, f_, "day");

			return g_;
		};
		var c_ = context.Operators.SelectOrNull<CqlInterval<CqlDateTime>, int?>(a_, b_);
		var d_ = context.Operators.Sum(c_);

		return d_;
	}

    [CqlDeclaration("RolloutIntervals")]
	public IEnumerable<CqlInterval<CqlDateTime>> RolloutIntervals(IEnumerable<CqlInterval<CqlDateTime>> intervals)
	{
		IEnumerable<CqlInterval<CqlDateTime>> a_ = null;
		IEnumerable<CqlInterval<CqlDateTime>> b_(IEnumerable<CqlInterval<CqlDateTime>> R, CqlInterval<CqlDateTime> I)
		{
			var d_ = new CqlInterval<CqlDateTime>[]
			{
				I,
			};
			CqlInterval<CqlDateTime> e_(CqlInterval<CqlDateTime> X)
			{
				var j_ = context.Operators.LastOfList<CqlInterval<CqlDateTime>>(R);
				var k_ = context.Operators.End(j_);
				var l_ = context.Operators.Quantity(1m, "day");
				var m_ = context.Operators.Add(k_, l_);
				var n_ = context.Operators.Start(X);
				var o_ = new CqlDateTime[]
				{
					m_,
					n_,
				};
				var p_ = context.Operators.MaxOrNull<CqlDateTime>((o_ as IEnumerable<CqlDateTime>));
				var r_ = context.Operators.End(j_);
				var t_ = context.Operators.Add(r_, l_);
				var v_ = new CqlDateTime[]
				{
					t_,
					n_,
				};
				var w_ = context.Operators.MaxOrNull<CqlDateTime>((v_ as IEnumerable<CqlDateTime>));
				var y_ = context.Operators.End(X);
				var z_ = context.Operators.DurationBetween(n_, y_, "day");
				var aa_ = context.Operators.ConvertIntegerToDecimal((z_ ?? (int?)0));
				var ab_ = context.Operators.Add(w_, new CqlQuantity(aa_, "day"));
				var ac_ = context.Operators.Interval(p_, ab_, true, true);

				return ac_;
			};
			var f_ = context.Operators.SelectOrNull<CqlInterval<CqlDateTime>, CqlInterval<CqlDateTime>>(d_, e_);
			var g_ = context.Operators.SingleOrNull<CqlInterval<CqlDateTime>>(f_);
			var h_ = new CqlInterval<CqlDateTime>[]
			{
				g_,
			};
			var i_ = context.Operators.ListUnion<CqlInterval<CqlDateTime>>(R, (h_ as IEnumerable<CqlInterval<CqlDateTime>>));

			return i_;
		};
		var c_ = context.Operators.AggregateOrNull<CqlInterval<CqlDateTime>, IEnumerable<CqlInterval<CqlDateTime>>>(intervals, (a_ as IEnumerable<CqlInterval<CqlDateTime>>), b_);

		return c_;
	}

    [CqlDeclaration("MedicationPeriod")]
	public CqlInterval<CqlDateTime> MedicationPeriod(object medication)
	{
		CqlInterval<CqlDateTime> a_()
		{
			if (medication is MedicationRequest)
			{
				var b_ = this.MedicationRequestPeriod((medication as MedicationRequest));

				return b_;
			}
			else if (medication is MedicationDispense)
			{
				var c_ = this.MedicationDispensePeriod((medication as MedicationDispense));

				return c_;
			}
			else if (medication is MedicationAdministration)
			{
				var d_ = this.MedicationAdministrationPeriod((medication as MedicationAdministration));

				return d_;
			}
			else
			{
				CqlInterval<CqlDateTime> e_ = null;

				return (e_ as CqlInterval<CqlDateTime>);
			};
		};

		return a_();
	}

    [CqlDeclaration("CumulativeMedicationDuration")]
	public int? CumulativeMedicationDuration(IEnumerable<object> Medications)
	{
		bool? a_(object M)
		{
			var l_ = M is MedicationRequest;

			return (l_ as bool?);
		};
		var b_ = context.Operators.WhereOrNull<object>(Medications, a_);
		CqlInterval<CqlDateTime> c_(object M)
		{
			var m_ = this.MedicationPeriod(M);

			return m_;
		};
		var d_ = context.Operators.SelectOrNull<object, CqlInterval<CqlDateTime>>(b_, c_);
		bool? e_(object M)
		{
			var n_ = M is MedicationDispense;
			var o_ = M is MedicationAdministration;
			var p_ = context.Operators.Or((n_ as bool?), (o_ as bool?));

			return p_;
		};
		var f_ = context.Operators.WhereOrNull<object>(Medications, e_);
		CqlInterval<CqlDateTime> g_(object M)
		{
			var q_ = this.MedicationPeriod(M);

			return q_;
		};
		var h_ = context.Operators.SelectOrNull<object, CqlInterval<CqlDateTime>>(f_, g_);
		var i_ = this.RolloutIntervals(h_);
		var j_ = context.Operators.ListUnion<CqlInterval<CqlDateTime>>(d_, i_);
		var k_ = this.CumulativeDuration(j_);

		return k_;
	}

}"
    }
  ]
}